{"version":3,"names":["React","Platform","View","truncatedCount","Text","createStyleSheet","useUIKitTheme","Badge","_ref","count","maxCount","badgeColor","textColor","style","size","colors","isSmall","createElement","styles","badgeSmall","badgeDefault","backgroundColor","ui","badge","default","none","background","badgeSmallPadding","badgeDefaultPadding","caption1","color","text","paddingTop","select","ios","android","minWidth","minHeight","borderRadius","alignItems","justifyContent","paddingHorizontal"],"sources":["index.tsx"],"sourcesContent":["import React from 'react';\nimport { Platform, StyleProp, View, ViewStyle } from 'react-native';\n\nimport { truncatedCount } from '@sendbird/uikit-utils';\n\nimport Text from '../../components/Text';\nimport createStyleSheet from '../../styles/createStyleSheet';\nimport useUIKitTheme from '../../theme/useUIKitTheme';\n\ntype Props = {\n  count: number;\n  maxCount?: number;\n  badgeColor?: string;\n  textColor?: string;\n  style?: StyleProp<ViewStyle>;\n  size?: 'small' | 'default';\n};\n\nconst Badge = ({ count, maxCount, badgeColor, textColor, style, size = 'default' }: Props) => {\n  const { colors } = useUIKitTheme();\n  const isSmall = size === 'small';\n  return (\n    <View\n      style={[\n        isSmall ? styles.badgeSmall : styles.badgeDefault,\n        { backgroundColor: badgeColor ?? colors.ui.badge.default.none.background },\n        count >= 10 && (isSmall ? styles.badgeSmallPadding : styles.badgeDefaultPadding),\n        style,\n      ]}\n    >\n      <Text caption1 color={textColor ?? colors.ui.badge.default.none.text}>\n        {truncatedCount(count, maxCount)}\n      </Text>\n    </View>\n  );\n};\n\nconst styles = createStyleSheet({\n  badgeDefault: {\n    paddingTop: Platform.select({ ios: 2, android: 2 }),\n    minWidth: 20,\n    minHeight: 20,\n    borderRadius: 99,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  badgeDefaultPadding: {\n    paddingHorizontal: 8,\n  },\n  badgeSmall: {\n    paddingTop: Platform.select({ ios: 3, android: 2 }),\n    minWidth: 16,\n    minHeight: 16,\n    borderRadius: 99,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  badgeSmallPadding: {\n    paddingHorizontal: 4,\n  },\n});\n\nexport default Badge;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAaC,IAAI,QAAmB,cAAc;AAEnE,SAASC,cAAc,QAAQ,uBAAuB;AAEtD,OAAOC,IAAI,MAAM,uBAAuB;AACxC,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,OAAOC,aAAa,MAAM,2BAA2B;AAWrD,MAAMC,KAAK,GAAGC,IAAA,IAAgF;EAAA,IAA/E;IAAEC,KAAK;IAAEC,QAAQ;IAAEC,UAAU;IAAEC,SAAS;IAAEC,KAAK;IAAEC,IAAI,GAAG;EAAiB,CAAC,GAAAN,IAAA;EACvF,MAAM;IAAEO;EAAO,CAAC,GAAGT,aAAa,EAAE;EAClC,MAAMU,OAAO,GAAGF,IAAI,KAAK,OAAO;EAChC,oBACEd,KAAA,CAAAiB,aAAA,CAACf,IAAI;IACHW,KAAK,EAAE,CACLG,OAAO,GAAGE,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,YAAY,EACjD;MAAEC,eAAe,EAAEV,UAAU,IAAII,MAAM,CAACO,EAAE,CAACC,KAAK,CAACC,OAAO,CAACC,IAAI,CAACC;IAAW,CAAC,EAC1EjB,KAAK,IAAI,EAAE,KAAKO,OAAO,GAAGE,MAAM,CAACS,iBAAiB,GAAGT,MAAM,CAACU,mBAAmB,CAAC,EAChFf,KAAK;EACL,gBAEFb,KAAA,CAAAiB,aAAA,CAACb,IAAI;IAACyB,QAAQ;IAACC,KAAK,EAAElB,SAAS,IAAIG,MAAM,CAACO,EAAE,CAACC,KAAK,CAACC,OAAO,CAACC,IAAI,CAACM;EAAK,GAClE5B,cAAc,CAACM,KAAK,EAAEC,QAAQ,CAAC,CAC3B,CACF;AAEX,CAAC;AAED,MAAMQ,MAAM,GAAGb,gBAAgB,CAAC;EAC9Be,YAAY,EAAE;IACZY,UAAU,EAAE/B,QAAQ,CAACgC,MAAM,CAAC;MAAEC,GAAG,EAAE,CAAC;MAAEC,OAAO,EAAE;IAAE,CAAC,CAAC;IACnDC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,EAAE;IACbC,YAAY,EAAE,EAAE;IAChBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDZ,mBAAmB,EAAE;IACnBa,iBAAiB,EAAE;EACrB,CAAC;EACDtB,UAAU,EAAE;IACVa,UAAU,EAAE/B,QAAQ,CAACgC,MAAM,CAAC;MAAEC,GAAG,EAAE,CAAC;MAAEC,OAAO,EAAE;IAAE,CAAC,CAAC;IACnDC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,EAAE;IACbC,YAAY,EAAE,EAAE;IAChBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDb,iBAAiB,EAAE;IACjBc,iBAAiB,EAAE;EACrB;AACF,CAAC,CAAC;AAEF,eAAelC,KAAK"}