{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_uikitUtils","_Text","_createStyleSheet","_useUIKitTheme","obj","__esModule","default","Badge","_ref","count","maxCount","badgeColor","textColor","style","size","colors","useUIKitTheme","isSmall","createElement","View","styles","badgeSmall","badgeDefault","backgroundColor","ui","badge","none","background","badgeSmallPadding","badgeDefaultPadding","caption1","color","text","truncatedCount","createStyleSheet","paddingTop","Platform","select","ios","android","minWidth","minHeight","borderRadius","alignItems","justifyContent","paddingHorizontal","_default","exports"],"sources":["index.tsx"],"sourcesContent":["import React from 'react';\nimport { Platform, StyleProp, View, ViewStyle } from 'react-native';\n\nimport { truncatedCount } from '@sendbird/uikit-utils';\n\nimport Text from '../../components/Text';\nimport createStyleSheet from '../../styles/createStyleSheet';\nimport useUIKitTheme from '../../theme/useUIKitTheme';\n\ntype Props = {\n  count: number;\n  maxCount?: number;\n  badgeColor?: string;\n  textColor?: string;\n  style?: StyleProp<ViewStyle>;\n  size?: 'small' | 'default';\n};\n\nconst Badge = ({ count, maxCount, badgeColor, textColor, style, size = 'default' }: Props) => {\n  const { colors } = useUIKitTheme();\n  const isSmall = size === 'small';\n  return (\n    <View\n      style={[\n        isSmall ? styles.badgeSmall : styles.badgeDefault,\n        { backgroundColor: badgeColor ?? colors.ui.badge.default.none.background },\n        count >= 10 && (isSmall ? styles.badgeSmallPadding : styles.badgeDefaultPadding),\n        style,\n      ]}\n    >\n      <Text caption1 color={textColor ?? colors.ui.badge.default.none.text}>\n        {truncatedCount(count, maxCount)}\n      </Text>\n    </View>\n  );\n};\n\nconst styles = createStyleSheet({\n  badgeDefault: {\n    paddingTop: Platform.select({ ios: 2, android: 2 }),\n    minWidth: 20,\n    minHeight: 20,\n    borderRadius: 99,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  badgeDefaultPadding: {\n    paddingHorizontal: 8,\n  },\n  badgeSmall: {\n    paddingTop: Platform.select({ ios: 3, android: 2 }),\n    minWidth: 16,\n    minHeight: 16,\n    borderRadius: 99,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  badgeSmallPadding: {\n    paddingHorizontal: 4,\n  },\n});\n\nexport default Badge;\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AAEA,IAAAE,WAAA,GAAAF,OAAA;AAEA,IAAAG,KAAA,GAAAJ,sBAAA,CAAAC,OAAA;AACA,IAAAI,iBAAA,GAAAL,sBAAA,CAAAC,OAAA;AACA,IAAAK,cAAA,GAAAN,sBAAA,CAAAC,OAAA;AAAsD,SAAAD,uBAAAO,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAWtD,MAAMG,KAAK,GAAGC,IAAA,IAAgF;EAAA,IAA/E;IAAEC,KAAK;IAAEC,QAAQ;IAAEC,UAAU;IAAEC,SAAS;IAAEC,KAAK;IAAEC,IAAI,GAAG;EAAiB,CAAC,GAAAN,IAAA;EACvF,MAAM;IAAEO;EAAO,CAAC,GAAG,IAAAC,sBAAa,GAAE;EAClC,MAAMC,OAAO,GAAGH,IAAI,KAAK,OAAO;EAChC,oBACElB,MAAA,CAAAU,OAAA,CAAAY,aAAA,CAACnB,YAAA,CAAAoB,IAAI;IACHN,KAAK,EAAE,CACLI,OAAO,GAAGG,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,YAAY,EACjD;MAAEC,eAAe,EAAEZ,UAAU,IAAII,MAAM,CAACS,EAAE,CAACC,KAAK,CAACnB,OAAO,CAACoB,IAAI,CAACC;IAAW,CAAC,EAC1ElB,KAAK,IAAI,EAAE,KAAKQ,OAAO,GAAGG,MAAM,CAACQ,iBAAiB,GAAGR,MAAM,CAACS,mBAAmB,CAAC,EAChFhB,KAAK;EACL,gBAEFjB,MAAA,CAAAU,OAAA,CAAAY,aAAA,CAACjB,KAAA,CAAAK,OAAI;IAACwB,QAAQ;IAACC,KAAK,EAAEnB,SAAS,IAAIG,MAAM,CAACS,EAAE,CAACC,KAAK,CAACnB,OAAO,CAACoB,IAAI,CAACM;EAAK,GAClE,IAAAC,0BAAc,EAACxB,KAAK,EAAEC,QAAQ,CAAC,CAC3B,CACF;AAEX,CAAC;AAED,MAAMU,MAAM,GAAG,IAAAc,yBAAgB,EAAC;EAC9BZ,YAAY,EAAE;IACZa,UAAU,EAAEC,qBAAQ,CAACC,MAAM,CAAC;MAAEC,GAAG,EAAE,CAAC;MAAEC,OAAO,EAAE;IAAE,CAAC,CAAC;IACnDC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,EAAE;IACbC,YAAY,EAAE,EAAE;IAChBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDf,mBAAmB,EAAE;IACnBgB,iBAAiB,EAAE;EACrB,CAAC;EACDxB,UAAU,EAAE;IACVc,UAAU,EAAEC,qBAAQ,CAACC,MAAM,CAAC;MAAEC,GAAG,EAAE,CAAC;MAAEC,OAAO,EAAE;IAAE,CAAC,CAAC;IACnDC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,EAAE;IACbC,YAAY,EAAE,EAAE;IAChBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDhB,iBAAiB,EAAE;IACjBiB,iBAAiB,EAAE;EACrB;AACF,CAAC,CAAC;AAAC,IAAAC,QAAA,GAEYvC,KAAK;AAAAwC,OAAA,CAAAzC,OAAA,GAAAwC,QAAA"}