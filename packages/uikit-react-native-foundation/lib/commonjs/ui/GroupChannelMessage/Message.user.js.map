{"version":3,"names":["_react","_interopRequireDefault","require","_Box","_PressBox","_createStyleSheet","_useUIKitTheme","_MessageBubbleWithText","_MessageContainer","obj","__esModule","default","UserMessage","props","variant","colors","useUIKitTheme","color","ui","groupChannelMessage","createElement","onPress","onLongPress","_ref","pressed","backgroundColor","background","enabled","style","styles","container","children","createStyleSheet","overflow","borderRadius","_default","exports"],"sources":["Message.user.tsx"],"sourcesContent":["import React from 'react';\n\nimport type { SendbirdUserMessage } from '@sendbird/uikit-utils';\n\nimport Box from '../../components/Box';\nimport PressBox from '../../components/PressBox';\nimport type { RegexTextPattern } from '../../components/RegexText';\nimport createStyleSheet from '../../styles/createStyleSheet';\nimport useUIKitTheme from '../../theme/useUIKitTheme';\nimport MessageBubbleWithText from './MessageBubbleWithText';\nimport MessageContainer from './MessageContainer';\nimport type { GroupChannelMessageProps } from './index';\n\ntype Props = GroupChannelMessageProps<\n  SendbirdUserMessage,\n  {\n    regexTextPatterns?: RegexTextPattern[];\n    renderRegexTextChildren?: (message: SendbirdUserMessage) => string;\n  }\n>;\n\nconst UserMessage = (props: Props) => {\n  const { variant = 'incoming' } = props;\n\n  const { colors } = useUIKitTheme();\n  const color = colors.ui.groupChannelMessage[variant];\n\n  return (\n    <MessageContainer {...props}>\n      <PressBox onPress={props.onPress} onLongPress={props.onLongPress}>\n        {({ pressed }) => (\n          <Box backgroundColor={pressed ? color.pressed.background : color.enabled.background} style={styles.container}>\n            <MessageBubbleWithText {...props} />\n            {props.children}\n          </Box>\n        )}\n      </PressBox>\n    </MessageContainer>\n  );\n};\n\nconst styles = createStyleSheet({\n  container: {\n    overflow: 'hidden',\n    borderRadius: 16,\n  },\n});\n\nexport default UserMessage;\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AAIA,IAAAC,IAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,SAAA,GAAAH,sBAAA,CAAAC,OAAA;AAEA,IAAAG,iBAAA,GAAAJ,sBAAA,CAAAC,OAAA;AACA,IAAAI,cAAA,GAAAL,sBAAA,CAAAC,OAAA;AACA,IAAAK,sBAAA,GAAAN,sBAAA,CAAAC,OAAA;AACA,IAAAM,iBAAA,GAAAP,sBAAA,CAAAC,OAAA;AAAkD,SAAAD,uBAAAQ,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAWlD,MAAMG,WAAW,GAAIC,KAAY,IAAK;EACpC,MAAM;IAAEC,OAAO,GAAG;EAAW,CAAC,GAAGD,KAAK;EAEtC,MAAM;IAAEE;EAAO,CAAC,GAAG,IAAAC,sBAAa,GAAE;EAClC,MAAMC,KAAK,GAAGF,MAAM,CAACG,EAAE,CAACC,mBAAmB,CAACL,OAAO,CAAC;EAEpD,oBACEd,MAAA,CAAAW,OAAA,CAAAS,aAAA,CAACZ,iBAAA,CAAAG,OAAgB,EAAKE,KAAK,eACzBb,MAAA,CAAAW,OAAA,CAAAS,aAAA,CAAChB,SAAA,CAAAO,OAAQ;IAACU,OAAO,EAAER,KAAK,CAACQ,OAAQ;IAACC,WAAW,EAAET,KAAK,CAACS;EAAY,GAC9DC,IAAA;IAAA,IAAC;MAAEC;IAAQ,CAAC,GAAAD,IAAA;IAAA,oBACXvB,MAAA,CAAAW,OAAA,CAAAS,aAAA,CAACjB,IAAA,CAAAQ,OAAG;MAACc,eAAe,EAAED,OAAO,GAAGP,KAAK,CAACO,OAAO,CAACE,UAAU,GAAGT,KAAK,CAACU,OAAO,CAACD,UAAW;MAACE,KAAK,EAAEC,MAAM,CAACC;IAAU,gBAC3G9B,MAAA,CAAAW,OAAA,CAAAS,aAAA,CAACb,sBAAA,CAAAI,OAAqB,EAAKE,KAAK,CAAI,EACnCA,KAAK,CAACkB,QAAQ,CACX;EAAA,CACP,CACQ,CACM;AAEvB,CAAC;AAED,MAAMF,MAAM,GAAG,IAAAG,yBAAgB,EAAC;EAC9BF,SAAS,EAAE;IACTG,QAAQ,EAAE,QAAQ;IAClBC,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AAAC,IAAAC,QAAA,GAEYvB,WAAW;AAAAwB,OAAA,CAAAzB,OAAA,GAAAwB,QAAA"}