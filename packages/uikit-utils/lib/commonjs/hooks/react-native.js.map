{"version":3,"names":["_react","require","_reactNative","_reactNativeSafeAreaContext","edgePaddingMap","left","right","top","bottom","useSafeAreaPadding","edges","safeAreaInsets","useSafeAreaInsets","reduce","map","edge","paddingKey","exports","useAppState","type","listener","callbackRef","useRef","current","useEffect","eventListener","state","subscriber","AppState","addEventListener","remove","useDeferredModalState","resolveRef","visible","setVisible","useState","onClose","Promise","resolve","onDismiss","_resolveRef$current","call"],"sources":["react-native.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { AppState, AppStateEvent, AppStateStatus } from 'react-native';\nimport { EdgeInsets, useSafeAreaInsets } from 'react-native-safe-area-context';\n\ntype EdgePaddingMap = {\n  left: 'paddingLeft';\n  right: 'paddingRight';\n  top: 'paddingTop';\n  bottom: 'paddingBottom';\n};\nconst edgePaddingMap: EdgePaddingMap = {\n  left: 'paddingLeft',\n  right: 'paddingRight',\n  top: 'paddingTop',\n  bottom: 'paddingBottom',\n};\n\nexport const useSafeAreaPadding = <\n  T extends keyof EdgeInsets,\n  Result extends { [key in EdgePaddingMap[T]]: EdgeInsets[T] },\n>(\n  edges: T[],\n): Result => {\n  const safeAreaInsets = useSafeAreaInsets();\n  return edges.reduce((map, edge) => {\n    const paddingKey = edgePaddingMap[edge];\n    map[paddingKey] = safeAreaInsets[edge];\n    return map;\n  }, {} as { [key in EdgePaddingMap[T]]: EdgeInsets[T] }) as Result;\n};\n\ntype AppStateListener = (status: AppStateStatus) => void;\n\nexport const useAppState = (type: AppStateEvent, listener: AppStateListener) => {\n  const callbackRef = useRef<AppStateListener>(listener);\n  callbackRef.current = listener;\n\n  useEffect(() => {\n    const eventListener = (state: AppStateStatus) => callbackRef.current(state);\n    const subscriber = AppState.addEventListener(type, eventListener);\n\n    return () => {\n      if (subscriber?.remove) subscriber.remove();\n    };\n  }, []);\n};\n\n/**\n * To display a new modal in React-Native, you should ensure that a new modal is opened only after the existing modal has been dismissed to avoid conflicts.\n * To achieve this, you can use a deferred onClose that can be awaited until the onDismiss is called.\n * */\nexport const useDeferredModalState = () => {\n  const resolveRef = useRef<(value: void) => void>();\n  const [visible, setVisible] = useState(false);\n\n  return {\n    onClose: () => {\n      return new Promise<void>((resolve) => {\n        resolveRef.current = resolve;\n        setVisible(false);\n      });\n    },\n    onDismiss: () => {\n      resolveRef.current?.();\n    },\n    visible,\n    setVisible,\n  };\n};\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,2BAAA,GAAAF,OAAA;AAQA,MAAMG,cAA8B,GAAG;EACrCC,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE,cAAc;EACrBC,GAAG,EAAE,YAAY;EACjBC,MAAM,EAAE;AACV,CAAC;AAEM,MAAMC,kBAAkB,GAI7BC,KAAU,IACC;EACX,MAAMC,cAAc,GAAG,IAAAC,6CAAiB,GAAE;EAC1C,OAAOF,KAAK,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;IACjC,MAAMC,UAAU,GAAGZ,cAAc,CAACW,IAAI,CAAC;IACvCD,GAAG,CAACE,UAAU,CAAC,GAAGL,cAAc,CAACI,IAAI,CAAC;IACtC,OAAOD,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAkD;AACzD,CAAC;AAACG,OAAA,CAAAR,kBAAA,GAAAA,kBAAA;AAIK,MAAMS,WAAW,GAAGA,CAACC,IAAmB,EAAEC,QAA0B,KAAK;EAC9E,MAAMC,WAAW,GAAG,IAAAC,aAAM,EAAmBF,QAAQ,CAAC;EACtDC,WAAW,CAACE,OAAO,GAAGH,QAAQ;EAE9B,IAAAI,gBAAS,EAAC,MAAM;IACd,MAAMC,aAAa,GAAIC,KAAqB,IAAKL,WAAW,CAACE,OAAO,CAACG,KAAK,CAAC;IAC3E,MAAMC,UAAU,GAAGC,qBAAQ,CAACC,gBAAgB,CAACV,IAAI,EAAEM,aAAa,CAAC;IAEjE,OAAO,MAAM;MACX,IAAIE,UAAU,aAAVA,UAAU,eAAVA,UAAU,CAAEG,MAAM,EAAEH,UAAU,CAACG,MAAM,EAAE;IAC7C,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;AACR,CAAC;;AAED;AACA;AACA;AACA;AAHAb,OAAA,CAAAC,WAAA,GAAAA,WAAA;AAIO,MAAMa,qBAAqB,GAAGA,CAAA,KAAM;EACzC,MAAMC,UAAU,GAAG,IAAAV,aAAM,GAAyB;EAClD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAG,IAAAC,eAAQ,EAAC,KAAK,CAAC;EAE7C,OAAO;IACLC,OAAO,EAAEA,CAAA,KAAM;MACb,OAAO,IAAIC,OAAO,CAAQC,OAAO,IAAK;QACpCN,UAAU,CAACT,OAAO,GAAGe,OAAO;QAC5BJ,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC;IACJ,CAAC;IACDK,SAAS,EAAEA,CAAA,KAAM;MAAA,IAAAC,mBAAA;MACf,CAAAA,mBAAA,GAAAR,UAAU,CAACT,OAAO,cAAAiB,mBAAA,uBAAlBA,mBAAA,CAAAC,IAAA,CAAAT,UAAU,CAAY;IACxB,CAAC;IACDC,OAAO;IACPC;EACF,CAAC;AACH,CAAC;AAACjB,OAAA,CAAAc,qBAAA,GAAAA,qBAAA"}