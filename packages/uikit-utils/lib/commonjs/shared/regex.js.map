{"version":3,"names":["require","shim","urlRegexStrict","exports","urlRegexRough","phoneRegex","emailRegex","newLineRegex","createMentionTemplateRegex","trigger","RegExp","replaceWithRegex","text","regex","replacer","keyPrefix","matches","matchAll","founds","map","value","start","index","end","length","groups","matchIndex","items","cursor","forEach","_ref","restText","pop","head","slice","mid","match","tail","push","replaceUrlAsComponents","originText","strict","_ref2"],"sources":["regex.ts"],"sourcesContent":["// For iOS 12 backwards compatibility\nrequire('string.prototype.matchall').shim();\n\nexport const urlRegexStrict =\n  /(https?:\\/\\/|www\\.)[-a-zA-Z0-9@:%._+~#=]{1,256}\\.(xn--)?[a-z0-9-]{2,20}\\b([-a-zA-Z0-9@:%_+[\\],.~#?&/=]*[-a-zA-Z0-9@:%_+\\]~#?&/=])*/g;\nexport const urlRegexRough =\n  /(https?:\\/\\/|www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/g;\nexport const phoneRegex = /[+]?[(]?[0-9]{3}[)]?[-\\s.]?[0-9]{3}[-\\s.]?[0-9]{4,7}/;\nexport const emailRegex = /\\S+@\\S+\\.\\S+/;\nexport const newLineRegex = /\\r\\n|\\r|\\n/g;\n\nexport const createMentionTemplateRegex = (trigger: string) => new RegExp(`(${trigger}[{])(.*?)([}])`, 'g');\n\n// const cases = [\n//   {\n//     type: 'urlStrict',\n//     regex: urlRegexStrict,\n//   },\n//   {\n//     type: 'urlRough',\n//     regex: urlRegexStrict,\n//   },\n//   {\n//     type: 'email',\n//     regex: emailRegex,\n//   },\n//   {\n//     type: 'phone',\n//     regex: urlRegexStrict,\n//   },\n// ];\n\nexport const replaceWithRegex = <T>(\n  text: string,\n  regex: RegExp,\n  replacer: (params: {\n    match: string;\n    groups: string[];\n    matchIndex: number | undefined;\n    index: number;\n    keyPrefix: string;\n  }) => T,\n  keyPrefix: string,\n) => {\n  const matches = [...text.matchAll(regex)];\n  const founds = matches.map((value) => {\n    const text = value[0];\n    const start = value.index ?? 0;\n    const end = start + text.length;\n    return { text, start, end, groups: value, matchIndex: value.index };\n  });\n\n  const items: Array<T | string> = [text];\n  let cursor = 0;\n  founds.forEach(({ text, start, end, groups, matchIndex }, index) => {\n    const restText = items.pop() as string;\n    const head = restText.slice(0, start - cursor);\n    const mid = replacer({ match: text, groups, matchIndex, index, keyPrefix });\n    const tail = restText.slice(end - cursor);\n    items.push(head, mid, tail);\n    cursor = end;\n  });\n  return items;\n};\n\nexport const replaceUrlAsComponents = <T>(originText: string, replacer: (url: string) => T, strict?: boolean) => {\n  const matches = [...originText.matchAll(strict ? urlRegexStrict : urlRegexRough)];\n  const founds = matches.map((value) => {\n    const text = value[0];\n    const start = value.index ?? 0;\n    const end = start + text.length;\n    return { text, start, end };\n  });\n\n  const items: Array<string | T> = [originText];\n  let cursor = 0;\n  founds.forEach(({ text, start, end }) => {\n    const restText = items.pop() as string;\n    const head = restText.slice(0, start - cursor);\n    const mid = replacer(text);\n    const tail = restText.slice(end - cursor);\n    items.push(head, mid, tail);\n    cursor = end;\n  });\n  return items;\n};\n"],"mappings":"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"}