export { Logger } from './shared/logger';
export { default as arrayToMap, arrayToMapWithGetter } from './shared/arrayToMap';
export * from './shared/regex';
export * from './shared/bufferedRequest';
export * from './shared/file';
export * from './shared';
export * from './hooks';
export * from './hooks/react-native';
export * from './ui-format/groupChannel';
export * from './ui-format/openChannel';
export * from './ui-format/common';
export * from './sendbird/channel';
export * from './sendbird/message';
export * from './sendbird/attrs';
export * from './sendbird/user';
export declare const NOOP: () => void;
export declare const ASYNC_NOOP: () => Promise<undefined>;
export declare const PASS: <T>(val: T) => T;
export declare const toMegabyte: (byte: number) => number;
export declare const isFunction: (param?: unknown) => param is Function;
export declare function ifThenOr<T>(cond: boolean, then: T): T | undefined;
export declare function ifThenOr<T, V>(cond: boolean, then: T, or: V): T | V;
export declare const SBErrorCode: {
    UNAUTHORIZED_REQUEST: number;
    RESOURCE_NOT_FOUND: number;
    BANNED_USER_SEND_MESSAGE_NOT_ALLOWED: number;
    CHANNEL_NOT_FOUND: number;
};
export declare const SBErrorMessage: {
    ACL: string;
};
export * from './types';
