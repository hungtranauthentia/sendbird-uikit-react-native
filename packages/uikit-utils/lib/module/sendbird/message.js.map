{"version":3,"names":["MessageSearchOrder","getFileExtension","getFileType","parseMimeType","getMessageTimeFormat","isNewMessage","msg","currentUserId","myMessage","isMyMessage","isAdminMessage","updatedAt","isSendableMessage","undefined","_msg$sender","arguments","length","sender","userId","messageKeyExtractor","message","getMessageUniqId","messageComparator","a","b","aStatusOffset","bStatusOffset","sendingStatus","Number","MAX_SAFE_INTEGER","createdAt","hasSameSender","_a$sender","_b$sender","calcMessageGrouping","groupEnabled","curr","prev","next","getPrev","Date","getNext","groupWithPrev","groupWithNext","isUserMessage","isFileMessage","String","messageId","reqId","getThumbnailUriFromFileMessage","thumbnails","url","getAvailableUriFromFileMessage","_message$messageParam","messageParams","file","uri","isSendbirdNotification","dataPayload","Boolean","parseSendbirdNotification","sendbird","JSON","parse","shouldRenderParentMessage","_message$parentMessag","_message$parentMessag2","parentMessage","shouldRenderReaction","channel","reactionEnabled","isOpenChannel","isGroupChannel","isBroadcast","isEphemeral","isChatNotification","getReactionCount","reaction","userIds","fileIconMapper","getFileTypeFromMessage","type","name","convertFileTypeToMessageType","fileType","getFileIconFromMessageType","messageType","getFileIconFromMessage","getMessageType","ogMetaData","isVoiceMessage","getDefaultMessageSearchQueryParams","keyword","channelUrl","messageTimestampFrom","Math","max","joinedAt","invitedAt","order","TIMESTAMP","SBU_MIME_PARAM_KEY","SBU_MIME_PARAM_VOICE_MESSAGE_VALUE","parameters","getVoiceMessageFileObject","extension","getVoiceMessageMimeType","size"],"sources":["message.ts"],"sourcesContent":["import { MessageSearchOrder } from '@sendbird/chat/message';\n\nimport { getFileExtension, getFileType, parseMimeType } from '../shared/file';\nimport type {\n  SendbirdBaseChannel,\n  SendbirdBaseMessage,\n  SendbirdDataPayload,\n  SendbirdFileMessage,\n  SendbirdGroupChannel,\n  SendbirdMessage,\n  SendbirdReaction,\n  SendbirdSendableMessage,\n  SendbirdUserMessage,\n} from '../types';\nimport { getMessageTimeFormat } from '../ui-format/common';\n\nexport function isNewMessage(msg: SendbirdMessage, currentUserId?: string) {\n  const myMessage = isMyMessage(msg, currentUserId);\n  if (myMessage) return false;\n  if (msg.isAdminMessage()) return false;\n  return msg.updatedAt === 0;\n}\n\nexport function isSendableMessage(msg?: SendbirdMessage | null): msg is SendbirdSendableMessage {\n  return msg !== undefined && msg !== null && 'sendingStatus' in msg;\n}\n\nexport function isMyMessage(\n  msg?: SendbirdMessage | null,\n  currentUserId = '##__USER_ID_IS_NOT_PROVIDED__##',\n): msg is SendbirdSendableMessage {\n  if (!isSendableMessage(msg)) return false;\n  return msg.sender?.userId === currentUserId;\n}\n\nexport function messageKeyExtractor(message: SendbirdMessage): string {\n  return getMessageUniqId(message);\n}\n\n// |-------------------|-------------------|-----------------|-------------------|\n// |   sending status  |       reqId       |    messageId    |     createdAt     |\n// |-------------------|-------------------|-----------------|-------------------|\n// |     pending       |    timestamp(A)   |        0        |    timestamp(B)   |\n// |     canceled      |    timestamp(A)   |        0        |         ?         |\n// |     failed        |    timestamp(A)   |        0        |         ?         |\n// |     succeeded     | timestamp(A) / '' |    id from DB   |    timestamp(C)   |\n// |-------------------|-------------------|-----------------|-------------------|\nexport function messageComparator(a: SendbirdMessage, b: SendbirdMessage) {\n  let aStatusOffset = 0;\n  let bStatusOffset = 0;\n\n  if (isSendableMessage(a) && a.sendingStatus !== 'succeeded') aStatusOffset = Number.MAX_SAFE_INTEGER;\n  if (isSendableMessage(b) && b.sendingStatus !== 'succeeded') bStatusOffset = Number.MAX_SAFE_INTEGER;\n\n  return b.createdAt + bStatusOffset - (a.createdAt + aStatusOffset);\n}\n\nexport function hasSameSender(a?: SendbirdMessage, b?: SendbirdMessage) {\n  if (!a || !b) return false;\n  if ('sender' in a && 'sender' in b) return a.sender?.userId === b.sender?.userId;\n  return false;\n}\n\nexport function calcMessageGrouping(\n  groupEnabled: boolean,\n  curr: SendbirdMessage,\n  prev?: SendbirdMessage,\n  next?: SendbirdMessage,\n) {\n  const getPrev = () => {\n    if (!groupEnabled) return false;\n    if (!prev) return false;\n    if (curr.isAdminMessage()) return false;\n    if (!hasSameSender(curr, prev)) return false;\n    if (getMessageTimeFormat(new Date(curr.createdAt)) !== getMessageTimeFormat(new Date(prev.createdAt))) return false;\n    return true;\n  };\n\n  const getNext = () => {\n    if (!groupEnabled) return false;\n    if (!next) return false;\n    if (curr.isAdminMessage()) return false;\n    if (!hasSameSender(curr, next)) return false;\n    if (getMessageTimeFormat(new Date(curr.createdAt)) !== getMessageTimeFormat(new Date(next.createdAt))) return false;\n    return true;\n  };\n\n  return { groupWithPrev: getPrev(), groupWithNext: getNext() };\n}\n\nexport function getMessageUniqId(msg: SendbirdBaseMessage) {\n  if (msg.isUserMessage() || msg.isFileMessage()) {\n    if (msg.sendingStatus === 'succeeded') return String(msg.messageId);\n    return msg.reqId;\n  }\n\n  return String(msg.messageId);\n}\n\nexport function getThumbnailUriFromFileMessage(message: SendbirdFileMessage) {\n  if (message.thumbnails && message.thumbnails.length > 0) {\n    return message.thumbnails[0].url;\n  }\n\n  return getAvailableUriFromFileMessage(message);\n}\n\nexport function getAvailableUriFromFileMessage(message: SendbirdFileMessage) {\n  if (!message.url && message.messageParams?.file && 'uri' in message.messageParams.file) {\n    return message.messageParams.file.uri;\n  }\n\n  return message.url;\n}\n\ntype RawSendbirdDataPayload = { sendbird: string | object };\nexport function isSendbirdNotification(dataPayload?: {\n  [key: string]: string | object;\n}): dataPayload is RawSendbirdDataPayload {\n  if (!dataPayload) return false;\n  return Boolean(dataPayload['sendbird']);\n}\n\nexport function parseSendbirdNotification(dataPayload: RawSendbirdDataPayload): SendbirdDataPayload {\n  return typeof dataPayload.sendbird === 'string' ? JSON.parse(dataPayload.sendbird) : dataPayload.sendbird;\n}\n\nexport function shouldRenderParentMessage(message: SendbirdMessage): message is (\n  | SendbirdUserMessage\n  | SendbirdFileMessage\n) & {\n  parentMessage: SendbirdUserMessage | SendbirdFileMessage;\n} {\n  return !!(\n    (message.isFileMessage() || message.isUserMessage()) &&\n    (message.parentMessage?.isFileMessage() || message.parentMessage?.isUserMessage())\n  );\n}\n\nexport function shouldRenderReaction(channel: SendbirdBaseChannel, reactionEnabled: boolean) {\n  if (channel.isOpenChannel()) {\n    return false;\n  }\n\n  if (channel.isGroupChannel()) {\n    if (channel.isBroadcast) return false;\n    if (channel.isEphemeral) return false;\n    if (channel.isChatNotification) return false;\n  }\n\n  return reactionEnabled;\n}\n\nexport function getReactionCount(reaction: SendbirdReaction) {\n  return reaction.userIds.length;\n}\n\nexport type MessageType =\n  | 'user'\n  | 'admin'\n  | 'file'\n  | 'unknown'\n  | `user.${'opengraph'}`\n  | `file.${'image' | 'video' | 'audio' | 'voice'}`;\n\nexport type FileType = 'file' | 'image' | 'audio' | 'video';\n\nconst fileIconMapper = {\n  'audio': 'file-audio',\n  'image': 'photo',\n  'video': 'play',\n  'file': 'file-document',\n} as const;\n\ntype ValueOf<T> = T[keyof T];\nexport type FileIcon = ValueOf<typeof fileIconMapper>;\n\nexport function getFileTypeFromMessage(message: SendbirdFileMessage): FileType {\n  return getFileType(message.type || getFileExtension(message.name));\n}\nexport const convertFileTypeToMessageType = (fileType: FileType = 'file'): MessageType => {\n  switch (fileType) {\n    case 'audio':\n    case 'image':\n    case 'video':\n      return `file.${fileType}`;\n    case 'file':\n      return fileType;\n  }\n};\nexport const getFileIconFromMessageType = (messageType: MessageType): FileIcon => {\n  switch (messageType) {\n    case 'file':\n      return fileIconMapper['file'];\n    case 'file.image':\n      return fileIconMapper['image'];\n    case 'file.video':\n      return fileIconMapper['video'];\n    case 'file.audio':\n      return fileIconMapper['audio'];\n    default:\n      return fileIconMapper['file'];\n  }\n};\nexport const getFileIconFromMessage = (message: SendbirdFileMessage): FileIcon => {\n  const fileType = getFileTypeFromMessage(message);\n  const messageType = convertFileTypeToMessageType(fileType);\n  return getFileIconFromMessageType(messageType);\n};\n\nexport function getMessageType(message: SendbirdMessage): MessageType {\n  if (message.isAdminMessage()) {\n    return 'admin';\n  }\n\n  if (message.isUserMessage()) {\n    if (message.ogMetaData) {\n      return 'user.opengraph';\n    }\n    return 'user';\n  }\n\n  if (message.isFileMessage()) {\n    if (isVoiceMessage(message)) {\n      return 'file.voice';\n    }\n\n    const fileType = getFileTypeFromMessage(message);\n    switch (fileType) {\n      case 'image':\n      case 'video': {\n        return `file.${fileType}`;\n      }\n      case 'audio': {\n        return `file.${fileType}`;\n      }\n      default: {\n        return 'file';\n      }\n    }\n  }\n\n  return 'unknown';\n}\n\nexport function getDefaultMessageSearchQueryParams(channel: SendbirdGroupChannel, keyword: string) {\n  return {\n    keyword,\n    channelUrl: channel.url,\n    messageTimestampFrom: Math.max(channel.joinedAt, channel.invitedAt),\n    order: MessageSearchOrder.TIMESTAMP,\n  };\n}\n\nconst SBU_MIME_PARAM_KEY = 'sbu_type';\nconst SBU_MIME_PARAM_VOICE_MESSAGE_VALUE = 'voice';\n\nexport function isVoiceMessage(message: SendbirdMessage): message is SendbirdFileMessage {\n  if (!message.isFileMessage()) return false;\n\n  const { parameters } = parseMimeType(message.type);\n  return !!parameters[SBU_MIME_PARAM_KEY] && parameters[SBU_MIME_PARAM_KEY] === SBU_MIME_PARAM_VOICE_MESSAGE_VALUE;\n}\n\nexport function getVoiceMessageFileObject(uri: string, extension = 'm4a') {\n  return {\n    uri,\n    type: getVoiceMessageMimeType(extension),\n    name: `Voice_message.${extension}`,\n    size: 0,\n  };\n}\n\nexport function getVoiceMessageMimeType(extension = 'm4a') {\n  return `audio/${extension};${SBU_MIME_PARAM_KEY}=${SBU_MIME_PARAM_VOICE_MESSAGE_VALUE}`;\n}\n"],"mappings":"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"}