{"version":3,"names":["useRef","GroupChannelListOrder","confirmAndMarkAsDelivered","useAsyncEffect","useFreshCallback","useUniqHandlerId","useAppFeatures","useChannelHandler","useGroupChannelListReducer","createGroupChannelListQuery","sdk","queryCreator","passedQuery","groupChannel","createMyGroupChannelListQuery","includeEmpty","limit","order","LATEST_LAST_MESSAGE","useGroupChannelListWithQuery","userId","options","deliveryReceiptEnabled","queryRef","handlerId","loading","groupChannels","refreshing","updateChannels","appendChannels","deleteChannels","updateRefreshing","updateLoading","updateOrder","updateChannelsAndMarkAsDelivered","channels","init","uid","_queryRef$current","_queryRef$current2","current","hasNext","next","onChannelChanged","channel","onChannelFrozen","onChannelUnfrozen","onChannelMemberCountChanged","onChannelDeleted","url","onUserJoined","onUserLeft","user","isMe","onUserBanned","onMessageReceived","refresh","_queryRef$current3"],"sources":["useGroupChannelListWithQuery.ts"],"sourcesContent":["import { useRef } from 'react';\n\nimport { GroupChannelListOrder } from '@sendbird/chat/groupChannel';\nimport type { SendbirdChannel, SendbirdChatSDK, SendbirdGroupChannelListQuery } from '@sendbird/uikit-utils';\nimport { confirmAndMarkAsDelivered, useAsyncEffect, useFreshCallback, useUniqHandlerId } from '@sendbird/uikit-utils';\n\nimport { useAppFeatures } from '../../common/useAppFeatures';\nimport { useChannelHandler } from '../../handler/useChannelHandler';\nimport type { UseGroupChannelList, UseGroupChannelListOptions } from '../../types';\nimport { useGroupChannelListReducer } from './reducer';\n\nconst createGroupChannelListQuery = (\n  sdk: SendbirdChatSDK,\n  queryCreator: UseGroupChannelListOptions['queryCreator'],\n) => {\n  const passedQuery = queryCreator?.();\n  if (passedQuery) return passedQuery;\n\n  return sdk.groupChannel.createMyGroupChannelListQuery({\n    includeEmpty: false,\n    limit: 20,\n    order: GroupChannelListOrder.LATEST_LAST_MESSAGE,\n  });\n};\n\nexport const useGroupChannelListWithQuery: UseGroupChannelList = (sdk, userId, options) => {\n  const { deliveryReceiptEnabled } = useAppFeatures(sdk);\n  const queryRef = useRef<SendbirdGroupChannelListQuery>();\n  const handlerId = useUniqHandlerId('useGroupChannelListWithQuery');\n\n  const {\n    loading,\n    groupChannels,\n    refreshing,\n    updateChannels,\n    appendChannels,\n    deleteChannels,\n    updateRefreshing,\n    updateLoading,\n    updateOrder,\n  } = useGroupChannelListReducer();\n\n  const updateChannelsAndMarkAsDelivered = (channels: SendbirdChannel[]) => {\n    updateChannels(channels);\n    if (deliveryReceiptEnabled) confirmAndMarkAsDelivered(channels);\n  };\n\n  const init = useFreshCallback(async (uid?: string) => {\n    if (uid) {\n      queryRef.current = createGroupChannelListQuery(sdk, options?.queryCreator);\n      updateOrder(queryRef.current?.order);\n\n      if (queryRef.current?.hasNext) {\n        const channels = await queryRef.current.next();\n\n        appendChannels(channels, true);\n        if (deliveryReceiptEnabled) confirmAndMarkAsDelivered(channels);\n      }\n    }\n  });\n\n  useAsyncEffect(async () => {\n    updateLoading(true);\n    await init(userId);\n    updateLoading(false);\n  }, [userId]);\n\n  useChannelHandler(sdk, handlerId, {\n    onChannelChanged: (channel) => updateChannels([channel]),\n    onChannelFrozen: (channel) => updateChannels([channel]),\n    onChannelUnfrozen: (channel) => updateChannels([channel]),\n    onChannelMemberCountChanged: (channels) => updateChannels(channels),\n    onChannelDeleted: (url) => deleteChannels([url]),\n    onUserJoined: (channel) => updateChannels([channel]),\n    onUserLeft: (channel, user) => {\n      const isMe = user.userId === userId;\n      if (isMe) deleteChannels([channel.url]);\n      else updateChannels([channel]);\n    },\n    onUserBanned(channel, user) {\n      const isMe = user.userId === userId;\n      if (isMe) deleteChannels([channel.url]);\n      else updateChannels([channel]);\n    },\n    onMessageReceived(channel) {\n      updateChannelsAndMarkAsDelivered([channel]);\n    },\n  });\n\n  const refresh = useFreshCallback(async () => {\n    updateRefreshing(true);\n    await init(userId);\n    updateRefreshing(false);\n  });\n\n  const next = useFreshCallback(async () => {\n    if (queryRef.current?.hasNext) {\n      const channels = await queryRef.current.next();\n      appendChannels(channels, false);\n      if (deliveryReceiptEnabled) confirmAndMarkAsDelivered(channels);\n    }\n  });\n\n  return {\n    loading,\n    groupChannels,\n    refresh,\n    refreshing,\n    next,\n  };\n};\n"],"mappings":"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"}