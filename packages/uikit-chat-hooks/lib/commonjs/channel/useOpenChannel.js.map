{"version":3,"names":["_react","require","_uikitUtils","initialState","loading","error","undefined","channel","reducer","state","nextState","useOpenChannel","sdk","channelUrl","setState","useReducer","useAsyncEffect","openChannel","getChannel","e","exports"],"sources":["useOpenChannel.ts"],"sourcesContent":["import { useReducer } from 'react';\n\nimport { SendbirdChatSDK, SendbirdOpenChannel, useAsyncEffect } from '@sendbird/uikit-utils';\n\ntype State = { loading: boolean; channel?: SendbirdOpenChannel; error?: unknown };\n\nconst initialState: State = { loading: true, error: undefined, channel: undefined };\nconst reducer = (state: State, nextState: Partial<State>) => ({ ...state, ...nextState });\n\nexport const useOpenChannel = (sdk: SendbirdChatSDK, channelUrl: string) => {\n  const [state, setState] = useReducer(reducer, initialState);\n\n  useAsyncEffect(async () => {\n    setState(initialState);\n\n    try {\n      setState({ channel: await sdk.openChannel.getChannel(channelUrl), loading: false });\n    } catch (e) {\n      setState({ error: e, loading: false });\n    }\n  }, [channelUrl]);\n\n  return state;\n};\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAEA,IAAAC,WAAA,GAAAD,OAAA;AAIA,MAAME,YAAmB,GAAG;EAAEC,OAAO,EAAE,IAAI;EAAEC,KAAK,EAAEC,SAAS;EAAEC,OAAO,EAAED;AAAU,CAAC;AACnF,MAAME,OAAO,GAAGA,CAACC,KAAY,EAAEC,SAAyB,MAAM;EAAE,GAAGD,KAAK;EAAE,GAAGC;AAAU,CAAC,CAAC;AAElF,MAAMC,cAAc,GAAGA,CAACC,GAAoB,EAAEC,UAAkB,KAAK;EAC1E,MAAM,CAACJ,KAAK,EAAEK,QAAQ,CAAC,GAAG,IAAAC,iBAAU,EAACP,OAAO,EAAEL,YAAY,CAAC;EAE3D,IAAAa,0BAAc,EAAC,YAAY;IACzBF,QAAQ,CAACX,YAAY,CAAC;IAEtB,IAAI;MACFW,QAAQ,CAAC;QAAEP,OAAO,EAAE,MAAMK,GAAG,CAACK,WAAW,CAACC,UAAU,CAACL,UAAU,CAAC;QAAET,OAAO,EAAE;MAAM,CAAC,CAAC;IACrF,CAAC,CAAC,OAAOe,CAAC,EAAE;MACVL,QAAQ,CAAC;QAAET,KAAK,EAAEc,CAAC;QAAEf,OAAO,EAAE;MAAM,CAAC,CAAC;IACxC;EACF,CAAC,EAAE,CAACS,UAAU,CAAC,CAAC;EAEhB,OAAOJ,KAAK;AACd,CAAC;AAACW,OAAA,CAAAT,cAAA,GAAAA,cAAA"}