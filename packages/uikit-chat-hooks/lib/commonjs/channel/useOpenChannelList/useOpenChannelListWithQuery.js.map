{"version":3,"names":["_react","require","_uikitUtils","_useChannelHandler","_reducer","createOpenChannelListQuery","sdk","queryCreator","passedQuery","openChannel","useOpenChannelListWithQuery","userId","options","queryRef","useRef","handlerId","useUniqHandlerId","error","loading","openChannels","refreshing","updateChannels","appendChannels","deleteChannels","updateRefreshing","updateLoading","updateError","useOpenChannelListReducer","init","useFreshCallback","uid","_queryRef$current","current","hasNext","channels","next","updateChannel","channel","isOpenChannel","useChannelHandler","onChannelChanged","onChannelFrozen","onChannelUnfrozen","onChannelDeleted","url","onUserEntered","user","isMe","find","it","refresh","useAsyncEffect","e","_queryRef$current2","exports"],"sources":["useOpenChannelListWithQuery.ts"],"sourcesContent":["import { useRef } from 'react';\n\nimport type { SendbirdBaseChannel, SendbirdChatSDK, SendbirdOpenChannelListQuery } from '@sendbird/uikit-utils';\nimport { useAsyncEffect, useFreshCallback, useUniqHandlerId } from '@sendbird/uikit-utils';\n\nimport { useChannelHandler } from '../../handler/useChannelHandler';\nimport type { UseOpenChannelList, UseOpenChannelListOptions } from '../../types';\nimport { useOpenChannelListReducer } from './reducer';\n\nconst createOpenChannelListQuery = (sdk: SendbirdChatSDK, queryCreator: UseOpenChannelListOptions['queryCreator']) => {\n  const passedQuery = queryCreator?.();\n  if (passedQuery) return passedQuery;\n  return sdk.openChannel.createOpenChannelListQuery({});\n};\n\nexport const useOpenChannelListWithQuery: UseOpenChannelList = (sdk, userId, options) => {\n  const queryRef = useRef<SendbirdOpenChannelListQuery>();\n  const handlerId = useUniqHandlerId('useOpenChannelListWithQuery');\n\n  const {\n    error,\n    loading,\n    openChannels,\n    refreshing,\n    updateChannels,\n    appendChannels,\n    deleteChannels,\n    updateRefreshing,\n    updateLoading,\n    updateError,\n  } = useOpenChannelListReducer();\n\n  const init = useFreshCallback(async (uid?: string) => {\n    if (uid) {\n      queryRef.current = createOpenChannelListQuery(sdk, options?.queryCreator);\n\n      if (queryRef.current?.hasNext) {\n        const channels = await queryRef.current.next();\n        appendChannels(channels, true);\n      }\n    }\n  });\n\n  const updateChannel = (channel: SendbirdBaseChannel) => {\n    if (channel.isOpenChannel()) updateChannels([channel]);\n  };\n\n  useChannelHandler(\n    sdk,\n    handlerId,\n    {\n      onChannelChanged: updateChannel,\n      onChannelFrozen: updateChannel,\n      onChannelUnfrozen: updateChannel,\n      onChannelDeleted: (url) => deleteChannels([url]),\n      onUserEntered: (channel, user) => {\n        const isMe = user.userId === userId;\n        if (isMe && channel.isOpenChannel() && !openChannels.find((it) => it.url === channel.url)) {\n          appendChannels([], true);\n          refresh();\n        }\n      },\n    },\n    'open',\n  );\n\n  useAsyncEffect(async () => {\n    updateLoading(true);\n    updateError(null);\n    try {\n      await init(userId);\n    } catch (e) {\n      updateError(e);\n      appendChannels([], true);\n    } finally {\n      updateLoading(false);\n    }\n  }, [userId]);\n\n  const refresh = useFreshCallback(async () => {\n    updateRefreshing(true);\n    updateError(null);\n    try {\n      await init(userId);\n    } catch (e) {\n      updateError(e);\n      appendChannels([], true);\n    } finally {\n      updateRefreshing(false);\n    }\n  });\n\n  const next = useFreshCallback(async () => {\n    if (queryRef.current?.hasNext) {\n      const channels = await queryRef.current.next();\n      appendChannels(channels, false);\n    }\n  });\n\n  return {\n    error,\n    loading,\n    openChannels,\n    refresh,\n    refreshing,\n    next,\n  };\n};\n"],"mappings":"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"}