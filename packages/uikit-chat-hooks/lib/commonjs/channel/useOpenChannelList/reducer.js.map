{"version":3,"names":["_react","require","_uikitUtils","defaultReducer","_ref","action","draft","type","error","value","key","status","getOpenChannels","channels","forEach","freshChannel","idx","openChannels","findIndex","staleChannel","url","channelUrls","c","splice","clearBeforeAction","mergeObjectArrays","useOpenChannelListReducer","loading","refreshing","dispatch","useReducer","updateChannels","deleteChannels","appendChannels","updateLoading","updateRefreshing","updateError","exports"],"sources":["reducer.ts"],"sourcesContent":["import { useReducer } from 'react';\n\nimport type { SendbirdChannel, SendbirdOpenChannel } from '@sendbird/uikit-utils';\nimport { getOpenChannels, mergeObjectArrays } from '@sendbird/uikit-utils';\n\ntype Action =\n  | {\n      type: 'update_error';\n      value: { error: unknown | null };\n    }\n  | {\n      type: 'update_loading' | 'update_refreshing';\n      value: { status: boolean };\n    }\n  | {\n      type: 'update_channels';\n      value: { channels: SendbirdChannel[] };\n    }\n  | {\n      type: 'delete_channels';\n      value: { channelUrls: string[] };\n    }\n  | {\n      type: 'append_channels';\n      value: { channels: SendbirdChannel[]; clearBeforeAction: boolean };\n    };\n\ntype State = {\n  error: unknown | null;\n  loading: boolean;\n  refreshing: boolean;\n  openChannels: SendbirdOpenChannel[];\n};\n\nconst defaultReducer = ({ ...draft }: State, action: Action) => {\n  switch (action.type) {\n    case 'update_error': {\n      draft.error = action.value.error;\n      break;\n    }\n    case 'update_refreshing':\n    case 'update_loading': {\n      const key = action.type === 'update_loading' ? 'loading' : 'refreshing';\n      draft[key] = action.value.status;\n      break;\n    }\n    case 'update_channels': {\n      getOpenChannels(action.value.channels).forEach((freshChannel) => {\n        const idx = draft.openChannels.findIndex((staleChannel) => staleChannel.url === freshChannel.url);\n        if (idx > -1) draft.openChannels[idx] = freshChannel;\n      });\n      break;\n    }\n    case 'delete_channels': {\n      action.value.channelUrls.forEach((url) => {\n        const idx = draft.openChannels.findIndex((c) => c.url === url);\n        if (idx > -1) draft.openChannels.splice(idx, 1);\n      });\n      break;\n    }\n    case 'append_channels': {\n      const openChannels = getOpenChannels(action.value.channels);\n      if (action.value.clearBeforeAction) {\n        draft.openChannels = openChannels;\n      } else {\n        draft.openChannels = mergeObjectArrays(draft.openChannels, openChannels, 'url');\n      }\n      break;\n    }\n  }\n  return draft;\n};\n\nexport const useOpenChannelListReducer = () => {\n  const [{ error, loading, refreshing, openChannels }, dispatch] = useReducer(defaultReducer, {\n    loading: true,\n    refreshing: false,\n    openChannels: [],\n    error: null,\n  });\n\n  const updateChannels = (channels: SendbirdChannel[]) => {\n    dispatch({ type: 'update_channels', value: { channels } });\n  };\n  const deleteChannels = (channelUrls: string[]) => {\n    dispatch({ type: 'delete_channels', value: { channelUrls } });\n  };\n  const appendChannels = (channels: SendbirdChannel[], clearBeforeAction: boolean) => {\n    dispatch({ type: 'append_channels', value: { channels, clearBeforeAction } });\n  };\n  const updateLoading = (status: boolean) => {\n    dispatch({ type: 'update_loading', value: { status } });\n  };\n  const updateRefreshing = (status: boolean) => {\n    dispatch({ type: 'update_refreshing', value: { status } });\n  };\n\n  const updateError = (error: unknown | null) => {\n    dispatch({ type: 'update_error', value: { error } });\n  };\n\n  return {\n    updateError,\n    updateLoading,\n    updateRefreshing,\n    updateChannels,\n    deleteChannels,\n    appendChannels,\n\n    error,\n    loading,\n    refreshing,\n    openChannels,\n  };\n};\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAGA,IAAAC,WAAA,GAAAD,OAAA;AA+BA,MAAME,cAAc,GAAGA,CAAAC,IAAA,EAAsBC,MAAc,KAAK;EAAA,IAAxC;IAAE,GAAGC;EAAa,CAAC,GAAAF,IAAA;EACzC,QAAQC,MAAM,CAACE,IAAI;IACjB,KAAK,cAAc;MAAE;QACnBD,KAAK,CAACE,KAAK,GAAGH,MAAM,CAACI,KAAK,CAACD,KAAK;QAChC;MACF;IACA,KAAK,mBAAmB;IACxB,KAAK,gBAAgB;MAAE;QACrB,MAAME,GAAG,GAAGL,MAAM,CAACE,IAAI,KAAK,gBAAgB,GAAG,SAAS,GAAG,YAAY;QACvED,KAAK,CAACI,GAAG,CAAC,GAAGL,MAAM,CAACI,KAAK,CAACE,MAAM;QAChC;MACF;IACA,KAAK,iBAAiB;MAAE;QACtB,IAAAC,2BAAe,EAACP,MAAM,CAACI,KAAK,CAACI,QAAQ,CAAC,CAACC,OAAO,CAAEC,YAAY,IAAK;UAC/D,MAAMC,GAAG,GAAGV,KAAK,CAACW,YAAY,CAACC,SAAS,CAAEC,YAAY,IAAKA,YAAY,CAACC,GAAG,KAAKL,YAAY,CAACK,GAAG,CAAC;UACjG,IAAIJ,GAAG,GAAG,CAAC,CAAC,EAAEV,KAAK,CAACW,YAAY,CAACD,GAAG,CAAC,GAAGD,YAAY;QACtD,CAAC,CAAC;QACF;MACF;IACA,KAAK,iBAAiB;MAAE;QACtBV,MAAM,CAACI,KAAK,CAACY,WAAW,CAACP,OAAO,CAAEM,GAAG,IAAK;UACxC,MAAMJ,GAAG,GAAGV,KAAK,CAACW,YAAY,CAACC,SAAS,CAAEI,CAAC,IAAKA,CAAC,CAACF,GAAG,KAAKA,GAAG,CAAC;UAC9D,IAAIJ,GAAG,GAAG,CAAC,CAAC,EAAEV,KAAK,CAACW,YAAY,CAACM,MAAM,CAACP,GAAG,EAAE,CAAC,CAAC;QACjD,CAAC,CAAC;QACF;MACF;IACA,KAAK,iBAAiB;MAAE;QACtB,MAAMC,YAAY,GAAG,IAAAL,2BAAe,EAACP,MAAM,CAACI,KAAK,CAACI,QAAQ,CAAC;QAC3D,IAAIR,MAAM,CAACI,KAAK,CAACe,iBAAiB,EAAE;UAClClB,KAAK,CAACW,YAAY,GAAGA,YAAY;QACnC,CAAC,MAAM;UACLX,KAAK,CAACW,YAAY,GAAG,IAAAQ,6BAAiB,EAACnB,KAAK,CAACW,YAAY,EAAEA,YAAY,EAAE,KAAK,CAAC;QACjF;QACA;MACF;EAAC;EAEH,OAAOX,KAAK;AACd,CAAC;AAEM,MAAMoB,yBAAyB,GAAGA,CAAA,KAAM;EAC7C,MAAM,CAAC;IAAElB,KAAK;IAAEmB,OAAO;IAAEC,UAAU;IAAEX;EAAa,CAAC,EAAEY,QAAQ,CAAC,GAAG,IAAAC,iBAAU,EAAC3B,cAAc,EAAE;IAC1FwB,OAAO,EAAE,IAAI;IACbC,UAAU,EAAE,KAAK;IACjBX,YAAY,EAAE,EAAE;IAChBT,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAMuB,cAAc,GAAIlB,QAA2B,IAAK;IACtDgB,QAAQ,CAAC;MAAEtB,IAAI,EAAE,iBAAiB;MAAEE,KAAK,EAAE;QAAEI;MAAS;IAAE,CAAC,CAAC;EAC5D,CAAC;EACD,MAAMmB,cAAc,GAAIX,WAAqB,IAAK;IAChDQ,QAAQ,CAAC;MAAEtB,IAAI,EAAE,iBAAiB;MAAEE,KAAK,EAAE;QAAEY;MAAY;IAAE,CAAC,CAAC;EAC/D,CAAC;EACD,MAAMY,cAAc,GAAGA,CAACpB,QAA2B,EAAEW,iBAA0B,KAAK;IAClFK,QAAQ,CAAC;MAAEtB,IAAI,EAAE,iBAAiB;MAAEE,KAAK,EAAE;QAAEI,QAAQ;QAAEW;MAAkB;IAAE,CAAC,CAAC;EAC/E,CAAC;EACD,MAAMU,aAAa,GAAIvB,MAAe,IAAK;IACzCkB,QAAQ,CAAC;MAAEtB,IAAI,EAAE,gBAAgB;MAAEE,KAAK,EAAE;QAAEE;MAAO;IAAE,CAAC,CAAC;EACzD,CAAC;EACD,MAAMwB,gBAAgB,GAAIxB,MAAe,IAAK;IAC5CkB,QAAQ,CAAC;MAAEtB,IAAI,EAAE,mBAAmB;MAAEE,KAAK,EAAE;QAAEE;MAAO;IAAE,CAAC,CAAC;EAC5D,CAAC;EAED,MAAMyB,WAAW,GAAI5B,KAAqB,IAAK;IAC7CqB,QAAQ,CAAC;MAAEtB,IAAI,EAAE,cAAc;MAAEE,KAAK,EAAE;QAAED;MAAM;IAAE,CAAC,CAAC;EACtD,CAAC;EAED,OAAO;IACL4B,WAAW;IACXF,aAAa;IACbC,gBAAgB;IAChBJ,cAAc;IACdC,cAAc;IACdC,cAAc;IAEdzB,KAAK;IACLmB,OAAO;IACPC,UAAU;IACVX;EACF,CAAC;AACH,CAAC;AAACoB,OAAA,CAAAX,yBAAA,GAAAA,yBAAA"}