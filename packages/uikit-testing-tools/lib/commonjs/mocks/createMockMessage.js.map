{"version":3,"names":["_chat","require","_message","_createTestContext","_defineProperty","obj","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","createMockMessage","params","MockMessage","exports","tc","createTestContext","constructor","ChannelType","BASE","getHash","date","increment","getRandom","MessageType","increaseIncrement","__updateIdsBySendingStatus","assign","sendingStatus","self","asSendableMessage","reqId","Date","now","unsent","SendingStatus","PENDING","FAILED","CANCELED","some","it","messageId","isFileMessage","messageType","FILE","prototype","hasOwnProperty","isMultipleFilesMessage","isUserMessage","USER","isAdminMessage","ADMIN","applyParentMessage","applyReactionEvent","applyThreadInfoUpdateEvent","getMetaArraysByKeys","isEqual","isIdentical","serialize","deleteFeedback","_","Promise","resolve","hasForm","forms","submitFeedback","submitForm","updateFeedback","markThreadAsRead","setPushNotificationEnabled","asFileMessage","asUserMessage","asAdminMessage","asBaseMessage"],"sources":["createMockMessage.ts"],"sourcesContent":["// @ts-nocheck\nimport { ChannelType } from '@sendbird/chat';\nimport { NotificationData } from '@sendbird/chat/feedChannel';\nimport { Form } from '@sendbird/chat/lib/__definition';\nimport { AdminMessage, Feedback, FeedbackStatus, MessageType, SendingStatus } from '@sendbird/chat/message';\nimport type {\n  SendbirdAdminMessage,\n  SendbirdBaseMessage,\n  SendbirdFileMessage,\n  SendbirdMultipleFilesMessage,\n  SendbirdSendableMessage,\n  SendbirdUserMessage,\n} from '@sendbird/uikit-utils';\n\nimport type { GetMockParams, GetMockProps } from '../types';\nimport { createTestContext } from '../utils/createTestContext';\n\ntype Params = GetMockParams<SendbirdFileMessage & SendbirdUserMessage & SendbirdAdminMessage>;\nexport const createMockMessage = (params: Params) => {\n  return new MockMessage(params);\n};\n\nconst tc = createTestContext();\n\nclass MockMessage implements GetMockProps<Params, SendbirdBaseMessage> {\n  constructor(public params: Params) {\n    tc.increaseIncrement();\n    this.__updateIdsBySendingStatus(params);\n    Object.assign(this, params);\n  }\n\n  __updateIdsBySendingStatus(params: Params) {\n    if (!params.sendingStatus) return;\n\n    const self = this.asSendableMessage();\n    self.reqId = String(Date.now()) + tc.increment;\n\n    const unsent = [SendingStatus.PENDING, SendingStatus.FAILED, SendingStatus.CANCELED].some(\n      (it) => params.sendingStatus === it,\n    );\n    if (unsent) {\n      self.messageId = 0;\n    } else {\n      self.messageId = tc.getRandom();\n    }\n  }\n\n  channelType = ChannelType.BASE;\n  channelUrl = 'channel_url_' + tc.getHash();\n  createdAt = tc.date + tc.increment;\n  updatedAt = 0;\n  messageId = tc.getRandom();\n  messageType = MessageType.BASE;\n  parentMessageId = 0;\n  parentMessage = null;\n  silent = false;\n  isOperatorMessage = false;\n  data = '';\n  customType = '';\n  mentionType = null;\n  mentionedUsers = null;\n  mentionedUserIds = null;\n  mentionedMessageTemplate = '';\n  threadInfo = null;\n  reactions = [];\n  metaArrays = [];\n  ogMetaData = null;\n  appleCriticalAlertOptions = null;\n  scheduledInfo = null;\n  extendedMessage = {};\n  notificationData: NotificationData | null = null;\n  forms: Form[] | null = null;\n  myFeedback: Feedback | null = null;\n  myFeedbackStatus: FeedbackStatus = 'NO_FEEDBACK';\n  suggestedReplies: string[] | null = null;\n\n  isFileMessage(): this is SendbirdFileMessage {\n    return this.messageType === MessageType.FILE && !Object.prototype.hasOwnProperty.call(this, 'fileInfoList');\n  }\n\n  isMultipleFilesMessage(): this is SendbirdMultipleFilesMessage {\n    return this.messageType === MessageType.FILE && Object.prototype.hasOwnProperty.call(this, 'fileInfoList');\n  }\n  isUserMessage(): this is SendbirdUserMessage {\n    return this.messageType === MessageType.USER;\n  }\n  isAdminMessage(): this is SendbirdAdminMessage {\n    return this.messageType === MessageType.ADMIN;\n  }\n  applyParentMessage(): boolean {\n    return false;\n  }\n\n  applyReactionEvent(): void {\n    return;\n  }\n\n  applyThreadInfoUpdateEvent(): boolean {\n    return false;\n  }\n\n  getMetaArraysByKeys() {\n    return [];\n  }\n\n  isEqual(): boolean {\n    return false;\n  }\n\n  isIdentical(): boolean {\n    return false;\n  }\n\n  serialize(): object {\n    return Object.assign({}, this);\n  }\n\n  deleteFeedback(_: number): Promise<void> {\n    return Promise.resolve(undefined);\n  }\n\n  hasForm(): this is AdminMessage {\n    return this.forms !== null;\n  }\n\n  submitFeedback(_: Pick<Feedback, 'rating' | 'comment'>): Promise<void> {\n    return Promise.resolve(undefined);\n  }\n\n  submitForm(_: { formId?: string; answers?: Record<string, string> }): Promise<void> {\n    return Promise.resolve(undefined);\n  }\n\n  updateFeedback(_: Feedback): Promise<void> {\n    return Promise.resolve(undefined);\n  }\n  markThreadAsRead(): Promise<void> {\n    return Promise.resolve();\n  }\n  setPushNotificationEnabled(_: boolean): Promise<void> {\n    return Promise.resolve();\n  }\n\n  asFileMessage(): SendbirdFileMessage {\n    return this as unknown as SendbirdFileMessage;\n  }\n  asUserMessage(): SendbirdUserMessage {\n    return this as unknown as SendbirdUserMessage;\n  }\n  asAdminMessage(): SendbirdAdminMessage {\n    return this as unknown as SendbirdAdminMessage;\n  }\n  asSendableMessage(): SendbirdSendableMessage {\n    return this as unknown as SendbirdSendableMessage;\n  }\n  asBaseMessage(): SendbirdBaseMessage {\n    return this as unknown as SendbirdBaseMessage;\n  }\n}\n"],"mappings":"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"}