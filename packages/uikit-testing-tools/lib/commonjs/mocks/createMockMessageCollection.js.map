{"version":3,"names":["_groupChannel","require","_message","_createTestContext","_createMockMessage","_defineProperty","obj","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","createMockMessageCollection","params","MockMessageCollection","exports","tc","createTestContext","constructor","jest","fn","handler","sdk","channel","__handlerId","getRandom","__context","groupChannelMessageCollectionHandlers","url","_policy","initHandler","onCacheResult","__cacheInitHandler","onApiResult","__apiInitHandler","setTimeout","start","__cursor","end","limit","__fetchedMessage","__messages","slice","__initialized","hasPrevious","messages","MessageFilter","assign","Array","dataLength","fill","map","createMockMessage","sendingStatus","SendingStatus","SUCCEEDED","asBaseMessage","reverse","groupChannel","hasNext","length","failedMessages","pendingMessages","succeededMessages","asMessageCollection"],"sources":["createMockMessageCollection.ts"],"sourcesContent":["// @ts-nocheck\nimport {\n  MessageCollectionEventHandler,\n  MessageCollectionInitHandler,\n  MessageCollectionInitPolicy,\n  MessageCollectionInitResultHandler,\n  MessageCollectionParams,\n  MessageFilter,\n} from '@sendbird/chat/groupChannel';\nimport { BaseMessage, SendingStatus } from '@sendbird/chat/message';\nimport type {\n  SendbirdBaseMessage,\n  SendbirdGroupChannel,\n  SendbirdMessageCollection,\n  SendbirdSendableMessage,\n} from '@sendbird/uikit-utils';\n\nimport type { GetMockParams, GetMockProps } from '../types';\nimport { createTestContext } from '../utils/createTestContext';\nimport { createMockMessage } from './createMockMessage';\n\ntype Params = GetMockParams<MessageCollectionParams & { groupChannel: SendbirdGroupChannel; dataLength: number }>;\nexport const createMockMessageCollection = (params: Params) => {\n  return new MockMessageCollection(params);\n};\n\nconst tc = createTestContext();\n\nclass MockMessageCollection implements GetMockProps<Params, Omit<SendbirdMessageCollection, 'viewTop' | 'viewBottom'>> {\n  constructor(public params: Params) {\n    Object.assign(this, params);\n\n    this.__messages = Array(this.params.dataLength ?? (this.params.limit ?? 10) * 5)\n      .fill(null)\n      .map(() => createMockMessage({ sdk: this.params.sdk, sendingStatus: SendingStatus.SUCCEEDED }).asBaseMessage())\n      .reverse();\n  }\n  __handlerId?: string;\n  __messages: SendbirdBaseMessage[] = [];\n  __cursor = 0;\n  __fetchedMessage: SendbirdBaseMessage[] = [];\n  __initialized = false;\n\n  __apiInitHandler: MessageCollectionInitResultHandler = () => void 0;\n  __cacheInitHandler: MessageCollectionInitResultHandler = () => void 0;\n\n  setMessageCollectionHandler = jest.fn((handler: MessageCollectionEventHandler) => {\n    if (this.params.sdk && this.channel) {\n      this.__handlerId = String(tc.getRandom());\n      this.params.sdk.__context.groupChannelMessageCollectionHandlers = {\n        ...this.params.sdk.__context.groupChannelMessageCollectionHandlers,\n        [this.channel.url]: {\n          ...this.params.sdk.__context.groupChannelMessageCollectionHandlers[this.channel.url],\n          [this.__handlerId]: handler,\n        },\n      };\n    }\n  });\n\n  initialize = jest.fn((_policy: MessageCollectionInitPolicy) => {\n    const initHandler: MessageCollectionInitHandler<BaseMessage> = {\n      onCacheResult: jest.fn((handler: MessageCollectionInitResultHandler) => {\n        this.__cacheInitHandler = handler;\n        return initHandler;\n      }),\n      onApiResult: jest.fn((handler: MessageCollectionInitResultHandler) => {\n        this.__apiInitHandler = handler;\n        return initHandler;\n      }),\n    };\n\n    setTimeout(() => {\n      const start = this.__cursor;\n      const end = start + (this.params.limit ?? 10);\n      this.__fetchedMessage = [...this.__fetchedMessage, ...this.__messages.slice(start, end)];\n      this.__cursor = end;\n      this.__initialized = true;\n      this.__cacheInitHandler(null as unknown as Error, this.__fetchedMessage);\n    }, 0);\n\n    setTimeout(() => {\n      this.__apiInitHandler(null as unknown as Error, this.__fetchedMessage);\n    }, 1);\n\n    return initHandler;\n  });\n  dispose = jest.fn(() => {\n    if (this.__handlerId && this.params.sdk && this.channel) {\n      delete this.params.sdk.__context.groupChannelMessageCollectionHandlers[this.channel.url][this.__handlerId];\n    }\n  });\n\n  removeFailedMessage = jest.fn();\n  loadNext = jest.fn(async () => {\n    return [];\n  });\n\n  loadPrevious = jest.fn(async () => {\n    if (this.hasPrevious) {\n      const start = this.__cursor;\n      const end = start + (this.params.limit ?? 10);\n      const messages = this.__messages.slice(start, end);\n      this.__fetchedMessage = [...this.__fetchedMessage, ...messages];\n      this.__cursor = end;\n\n      return messages;\n    } else {\n      return [];\n    }\n  });\n\n  filter = new MessageFilter();\n  get channel(): SendbirdGroupChannel {\n    return this.params.groupChannel as unknown as SendbirdGroupChannel;\n  }\n\n  get hasNext(): boolean {\n    if (!this.__initialized) return false;\n    return false;\n  }\n\n  get hasPrevious(): boolean {\n    if (!this.__initialized) return false;\n    return this.__fetchedMessage.length < this.__messages.length;\n  }\n\n  get failedMessages(): SendbirdSendableMessage[] {\n    return [];\n  }\n  get pendingMessages(): SendbirdSendableMessage[] {\n    return [];\n  }\n\n  get succeededMessages(): SendbirdBaseMessage[] {\n    return this.__fetchedMessage;\n  }\n\n  asMessageCollection() {\n    return this as unknown as SendbirdMessageCollection;\n  }\n}\n"],"mappings":"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"}