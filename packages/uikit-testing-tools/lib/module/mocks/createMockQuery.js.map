{"version":3,"names":["ChannelType","createMockChannel","createMockMessage","createMockUser","dataListFactory","type","arguments","length","undefined","dataLength","sdk","Array","fill","map","channelType","OPEN","GROUP","createMockQuery","params","context","data","limit","cursor","loading","isLoading","hasNext","startIdx","endIdx","next","jest","fn","slice"],"sources":["createMockQuery.ts"],"sourcesContent":["// @ts-nocheck\nimport { ChannelType } from '@sendbird/chat';\n\nimport type { GetMockParams } from '../types';\nimport { createMockChannel } from './createMockChannel';\nimport { createMockMessage } from './createMockMessage';\nimport type { MockSendbirdChatSDK } from './createMockSendbirdSDK';\nimport { createMockUser } from './createMockUser';\n\ntype QueryType = 'message' | 'user' | 'openChannel' | 'groupChannel';\ntype Params = GetMockParams<{ type: QueryType; dataLength?: number; limit?: number }>;\n\nconst dataListFactory = (type: QueryType = 'message', dataLength = 100, sdk?: MockSendbirdChatSDK) => {\n  return Array(dataLength)\n    .fill(0)\n    .map(() => {\n      switch (type) {\n        case 'message':\n          return createMockMessage({ sdk });\n        case 'openChannel':\n          return createMockChannel({ sdk, channelType: ChannelType.OPEN });\n        case 'groupChannel':\n          return createMockChannel({ sdk, channelType: ChannelType.GROUP });\n        case 'user':\n          return createMockUser({ sdk });\n      }\n    });\n};\n\nexport const createMockQuery = <T>(params: Params) => {\n  const context = {\n    data: dataListFactory(params.type, params.dataLength, params.sdk) as T[],\n    limit: params.limit || 10,\n    cursor: 0,\n    loading: false,\n  };\n\n  return {\n    get context() {\n      return context;\n    },\n    get limit() {\n      return context.limit;\n    },\n    get isLoading() {\n      return context.loading;\n    },\n    get hasNext() {\n      const startIdx = context.cursor * context.limit;\n      const endIdx = startIdx + context.limit;\n\n      return endIdx < context.data.length;\n    },\n    next: jest.fn(async () => {\n      context.loading = true;\n\n      const startIdx = context.cursor * context.limit;\n      const endIdx = startIdx + context.limit;\n\n      context.cursor += 1;\n      context.loading = false;\n\n      return context.data.slice(startIdx, endIdx);\n    }),\n  };\n};\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,gBAAgB;AAG5C,SAASC,iBAAiB,QAAQ,qBAAqB;AACvD,SAASC,iBAAiB,QAAQ,qBAAqB;AAEvD,SAASC,cAAc,QAAQ,kBAAkB;AAKjD,MAAMC,eAAe,GAAG,SAAAA,CAAA,EAA8E;EAAA,IAA7EC,IAAe,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,SAAS;EAAA,IAAEG,UAAU,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,GAAG;EAAA,IAAEI,GAAyB,GAAAJ,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC/F,OAAOG,KAAK,CAACF,UAAU,CAAC,CACrBG,IAAI,CAAC,CAAC,CAAC,CACPC,GAAG,CAAC,MAAM;IACT,QAAQR,IAAI;MACV,KAAK,SAAS;QACZ,OAAOH,iBAAiB,CAAC;UAAEQ;QAAI,CAAC,CAAC;MACnC,KAAK,aAAa;QAChB,OAAOT,iBAAiB,CAAC;UAAES,GAAG;UAAEI,WAAW,EAAEd,WAAW,CAACe;QAAK,CAAC,CAAC;MAClE,KAAK,cAAc;QACjB,OAAOd,iBAAiB,CAAC;UAAES,GAAG;UAAEI,WAAW,EAAEd,WAAW,CAACgB;QAAM,CAAC,CAAC;MACnE,KAAK,MAAM;QACT,OAAOb,cAAc,CAAC;UAAEO;QAAI,CAAC,CAAC;IAAC;EAErC,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMO,eAAe,GAAOC,MAAc,IAAK;EACpD,MAAMC,OAAO,GAAG;IACdC,IAAI,EAAEhB,eAAe,CAACc,MAAM,CAACb,IAAI,EAAEa,MAAM,CAACT,UAAU,EAAES,MAAM,CAACR,GAAG,CAAQ;IACxEW,KAAK,EAAEH,MAAM,CAACG,KAAK,IAAI,EAAE;IACzBC,MAAM,EAAE,CAAC;IACTC,OAAO,EAAE;EACX,CAAC;EAED,OAAO;IACL,IAAIJ,OAAOA,CAAA,EAAG;MACZ,OAAOA,OAAO;IAChB,CAAC;IACD,IAAIE,KAAKA,CAAA,EAAG;MACV,OAAOF,OAAO,CAACE,KAAK;IACtB,CAAC;IACD,IAAIG,SAASA,CAAA,EAAG;MACd,OAAOL,OAAO,CAACI,OAAO;IACxB,CAAC;IACD,IAAIE,OAAOA,CAAA,EAAG;MACZ,MAAMC,QAAQ,GAAGP,OAAO,CAACG,MAAM,GAAGH,OAAO,CAACE,KAAK;MAC/C,MAAMM,MAAM,GAAGD,QAAQ,GAAGP,OAAO,CAACE,KAAK;MAEvC,OAAOM,MAAM,GAAGR,OAAO,CAACC,IAAI,CAACb,MAAM;IACrC,CAAC;IACDqB,IAAI,EAAEC,IAAI,CAACC,EAAE,CAAC,YAAY;MACxBX,OAAO,CAACI,OAAO,GAAG,IAAI;MAEtB,MAAMG,QAAQ,GAAGP,OAAO,CAACG,MAAM,GAAGH,OAAO,CAACE,KAAK;MAC/C,MAAMM,MAAM,GAAGD,QAAQ,GAAGP,OAAO,CAACE,KAAK;MAEvCF,OAAO,CAACG,MAAM,IAAI,CAAC;MACnBH,OAAO,CAACI,OAAO,GAAG,KAAK;MAEvB,OAAOJ,OAAO,CAACC,IAAI,CAACW,KAAK,CAACL,QAAQ,EAAEC,MAAM,CAAC;IAC7C,CAAC;EACH,CAAC;AACH,CAAC"}