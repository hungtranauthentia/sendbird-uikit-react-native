{"version":3,"names":["_react","_interopRequireWildcard","require","_uikitChatHooks","_uikitTools","_uikitUtils","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","SendbirdChatContext","React","createContext","exports","SendbirdChatProvider","_ref","children","sdkInstance","emojiManager","mentionManager","imageCompressionConfig","voiceMessageConfig","enableAutoPushTokenRegistration","enableUseUserIdForNickname","enableImageCompression","currentUser","_setCurrentUser","useState","forceUpdate","useForceUpdate","appFeatures","useAppFeatures","configs","configsWithAppAttr","useUIKitConfig","setCurrentUser","useCallback","user","updateCurrentUserInfo","nickname","profile","Error","params","profileUrl","profileImage","markAsDeliveredWithChannel","channel","deliveryReceiptEnabled","confirmAndMarkAsDelivered","useAppState","status","connectionState","setForegroundState","setBackgroundState","useEffect","disconnect","then","undefined","value","sdk","sbOptions","appInfo","uikit","uikitWithAppInfo","chat","autoPushTokenRegistrationEnabled","useUserIdForNicknameEnabled","imageCompressionEnabled","createElement","Provider"],"sources":["SendbirdChatCtx.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\n\nimport { useAppFeatures } from '@sendbird/uikit-chat-hooks';\nimport { SBUConfig, useUIKitConfig } from '@sendbird/uikit-tools';\nimport type {\n  SendbirdChatSDK,\n  SendbirdGroupChannel,\n  SendbirdUser,\n  SendbirdUserUpdateParams,\n} from '@sendbird/uikit-utils';\nimport { confirmAndMarkAsDelivered, useAppState, useForceUpdate } from '@sendbird/uikit-utils';\n\nimport type EmojiManager from '../libs/EmojiManager';\nimport type ImageCompressionConfig from '../libs/ImageCompressionConfig';\nimport type MentionManager from '../libs/MentionManager';\nimport type VoiceMessageConfig from '../libs/VoiceMessageConfig';\nimport type { FileType } from '../platform/types';\n\nexport interface ChatRelatedFeaturesInUIKit {\n  enableAutoPushTokenRegistration: boolean;\n  enableUseUserIdForNickname: boolean;\n  enableImageCompression: boolean;\n}\n\ninterface Props extends ChatRelatedFeaturesInUIKit, React.PropsWithChildren {\n  sdkInstance: SendbirdChatSDK;\n\n  emojiManager: EmojiManager;\n  mentionManager: MentionManager;\n  imageCompressionConfig: ImageCompressionConfig;\n  voiceMessageConfig: VoiceMessageConfig;\n}\n\nexport type SendbirdChatContextType = {\n  sdk: SendbirdChatSDK;\n  currentUser?: SendbirdUser;\n  setCurrentUser: React.Dispatch<React.SetStateAction<SendbirdUser | undefined>>;\n\n  // feature related instances\n  emojiManager: EmojiManager;\n  mentionManager: MentionManager;\n  imageCompressionConfig: ImageCompressionConfig;\n  voiceMessageConfig: VoiceMessageConfig;\n\n  // helper functions\n  updateCurrentUserInfo: (nickname?: string, profile?: string | FileType) => Promise<SendbirdUser>;\n  markAsDeliveredWithChannel: (channel: SendbirdGroupChannel) => void;\n\n  sbOptions: {\n    // UIKit options\n    uikit: SBUConfig;\n    uikitWithAppInfo: {\n      groupChannel: {\n        channel: {\n          readonly enableReactions: boolean;\n          readonly enableReactionsSupergroup: boolean;\n          readonly enableOgtag: boolean;\n        };\n        setting: {\n          readonly enableMessageSearch: boolean;\n        };\n      };\n      openChannel: {\n        channel: {\n          readonly enableOgtag: boolean;\n        };\n      };\n    };\n\n    // Chat related options in UIKit\n    chat: {\n      imageCompressionEnabled: boolean;\n      useUserIdForNicknameEnabled: boolean;\n      autoPushTokenRegistrationEnabled: boolean; // RN only\n    };\n\n    // Sendbird application options\n    appInfo: {\n      deliveryReceiptEnabled: boolean;\n      broadcastChannelEnabled: boolean;\n      superGroupChannelEnabled: boolean;\n      reactionEnabled: boolean;\n    };\n  };\n};\n\nexport const SendbirdChatContext = React.createContext<SendbirdChatContextType | null>(null);\nexport const SendbirdChatProvider = ({\n  children,\n  sdkInstance,\n  emojiManager,\n  mentionManager,\n  imageCompressionConfig,\n  voiceMessageConfig,\n  enableAutoPushTokenRegistration,\n  enableUseUserIdForNickname,\n  enableImageCompression,\n}: Props) => {\n  const [currentUser, _setCurrentUser] = useState<SendbirdUser>();\n  const forceUpdate = useForceUpdate();\n  const appFeatures = useAppFeatures(sdkInstance);\n  const { configs, configsWithAppAttr } = useUIKitConfig();\n\n  const setCurrentUser: SendbirdChatContextType['setCurrentUser'] = useCallback((user) => {\n    // NOTE: Sendbird SDK handle User object is always same object, so force update after setCurrentUser\n    _setCurrentUser(user);\n    forceUpdate();\n  }, []);\n\n  const updateCurrentUserInfo: SendbirdChatContextType['updateCurrentUserInfo'] = useCallback(\n    async (nickname, profile) => {\n      let user = currentUser;\n\n      if (!user) throw new Error('Current user is not defined, please connect using `useConnection()` hook first');\n\n      const params: SendbirdUserUpdateParams = {};\n\n      if (!nickname) {\n        params.nickname = user.nickname;\n      } else {\n        params.nickname = nickname;\n      }\n\n      if (!profile) {\n        params.profileUrl = user.profileUrl;\n      } else if (typeof profile === 'string') {\n        params.profileUrl = profile;\n      } else if (typeof profile === 'object') {\n        params.profileImage = profile;\n      } else {\n        throw new Error(`Cannot update profile, not supported profile type(${typeof profile})`);\n      }\n\n      user = await sdkInstance.updateCurrentUserInfo(params);\n\n      setCurrentUser(user);\n      return user;\n    },\n    [sdkInstance, currentUser, setCurrentUser],\n  );\n\n  const markAsDeliveredWithChannel: SendbirdChatContextType['markAsDeliveredWithChannel'] = useCallback(\n    (channel: SendbirdGroupChannel) => {\n      if (appFeatures.deliveryReceiptEnabled) confirmAndMarkAsDelivered([channel]);\n    },\n    [sdkInstance, appFeatures.deliveryReceiptEnabled],\n  );\n\n  useAppState('change', (status) => {\n    // 'active' | 'background' | 'inactive' | 'unknown' | 'extension';\n    if (status === 'active') sdkInstance.connectionState === 'CLOSED' && sdkInstance.setForegroundState();\n    else if (status === 'background') sdkInstance.connectionState === 'OPEN' && sdkInstance.setBackgroundState();\n  });\n\n  useEffect(() => {\n    return () => {\n      sdkInstance.disconnect().then(() => _setCurrentUser(undefined));\n    };\n  }, [sdkInstance]);\n\n  const value: SendbirdChatContextType = {\n    sdk: sdkInstance,\n    emojiManager,\n    mentionManager,\n    imageCompressionConfig,\n    voiceMessageConfig,\n    currentUser,\n    setCurrentUser,\n\n    updateCurrentUserInfo,\n    markAsDeliveredWithChannel,\n\n    // TODO: Options should be moved to the common area at the higher level to be passed to the context of each product.\n    //  For example, common -> chat context, common -> calls context\n    sbOptions: {\n      appInfo: appFeatures,\n      uikit: configs,\n      uikitWithAppInfo: configsWithAppAttr(sdkInstance),\n      chat: {\n        autoPushTokenRegistrationEnabled: enableAutoPushTokenRegistration,\n        useUserIdForNicknameEnabled: enableUseUserIdForNickname,\n        imageCompressionEnabled: enableImageCompression,\n      },\n    },\n  };\n\n  return <SendbirdChatContext.Provider value={value}>{children}</SendbirdChatContext.Provider>;\n};\n"],"mappings":"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"}