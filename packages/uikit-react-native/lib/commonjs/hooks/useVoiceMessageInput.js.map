{"version":3,"names":["_react","require","_uikitReactNativeFoundation","_uikitUtils","_SBUUtils","_interopRequireDefault","_useContext","obj","__esModule","default","useVoiceMessageInput","_ref","onSend","onClose","alert","useAlert","STRINGS","useLocalization","recorderService","playerService","fileService","usePlatformService","status","setStatus","useState","recordingTime","setRecordingTime","currentTime","minDuration","options","maxDuration","playingTime","setPlayingTime","duration","recordingPath","useRef","getVoiceMessageRecordingPath","current","Error","setVoiceMessageRecordingPath","path","clear","undefined","reset","state","actions","cancel","startRecording","granted","requestPermission","title","DIALOG","ALERT_PERMISSIONS_TITLE","message","ALERT_PERMISSIONS_MESSAGE","LABELS","PERMISSION_MICROPHONE","PERMISSION_APP_NAME","buttons","text","ALERT_PERMISSIONS_OK","onPress","SBUUtils","openSettings","Logger","error","matchesOneOf","unsubscribeRecording","addRecordingListener","_ref2","prev","unsubscribeState","addStateListener","isExpo","record","uri","recordFilePath","createRecordFilePath","extension","stopRecording","stop","playPlayer","PERMISSION_DEVICE_STORAGE","unsubscribePlayback","addPlaybackListener","_ref3","play","pausePlayer","pause","send","voiceFile","getVoiceMessageFileObject","Math","floor","_default","exports"],"sources":["useVoiceMessageInput.ts"],"sourcesContent":["import { useRef, useState } from 'react';\n\nimport { useAlert } from '@sendbird/uikit-react-native-foundation';\nimport { Logger, getVoiceMessageFileObject, matchesOneOf } from '@sendbird/uikit-utils';\n\nimport SBUUtils from '../libs/SBUUtils';\nimport { FileType } from '../platform/types';\nimport { useLocalization, usePlatformService } from './useContext';\n\ntype State = {\n  /**\n   * Status\n   *\n   * idle:\n   *   - cancel(): idle\n   *   - startRecording(): recording\n   * recording:\n   *   - cancel(): idle\n   *   - stopRecording(): recording_completed\n   *   - send(): recording_completed > idle\n   * recording_completed:\n   *   - cancel(): idle\n   *   - playPlayer(): playing\n   *   - send(): idle\n   * playing:\n   *   - cancel(): idle\n   *   - pausePlayer(): playing_paused\n   *   - send(): idle\n   * playing_paused:\n   *   - cancel(): idle\n   *   - playPlayer(): playing\n   *   - send(): idle\n   * */\n  status: 'idle' | 'recording' | 'recording_completed' | 'playing' | 'playing_paused';\n  recordingTime: {\n    currentTime: number;\n    minDuration: number;\n    maxDuration: number;\n  };\n  playingTime: {\n    currentTime: number;\n    duration: number;\n  };\n};\n\nexport interface VoiceMessageInputResult {\n  actions: {\n    cancel: () => Promise<void>;\n    startRecording: () => Promise<void>;\n    stopRecording: () => Promise<void>;\n    playPlayer: () => Promise<void>;\n    pausePlayer: () => Promise<void>;\n    send: () => Promise<void>;\n  };\n  state: State;\n}\n\ntype Props = {\n  onClose: () => Promise<void>;\n  onSend: (voiceFile: FileType, duration: number) => void;\n};\n\nconst useVoiceMessageInput = ({ onSend, onClose }: Props): VoiceMessageInputResult => {\n  const { alert } = useAlert();\n  const { STRINGS } = useLocalization();\n  const { recorderService, playerService, fileService } = usePlatformService();\n  const [status, setStatus] = useState<State['status']>('idle');\n\n  const [recordingTime, setRecordingTime] = useState({\n    currentTime: 0,\n    minDuration: recorderService.options.minDuration,\n    maxDuration: recorderService.options.maxDuration,\n  });\n  const [playingTime, setPlayingTime] = useState({\n    currentTime: 0,\n    duration: 0,\n  });\n\n  const recordingPath = useRef<{ recordFilePath: string; uri: string }>();\n  const getVoiceMessageRecordingPath = () => {\n    if (!recordingPath.current) throw new Error('No recording path');\n    return recordingPath.current;\n  };\n  const setVoiceMessageRecordingPath = (path: { recordFilePath: string; uri: string }) => {\n    recordingPath.current = path;\n  };\n\n  const clear = async () => {\n    recordingPath.current = undefined;\n    await playerService.reset();\n    await recorderService.reset();\n    setRecordingTime({\n      currentTime: 0,\n      minDuration: recorderService.options.minDuration,\n      maxDuration: recorderService.options.maxDuration,\n    });\n    setPlayingTime({\n      currentTime: 0,\n      duration: 0,\n    });\n    setStatus('idle');\n  };\n\n  return {\n    state: {\n      status,\n      recordingTime,\n      playingTime,\n    },\n    actions: {\n      async cancel() {\n        await clear();\n      },\n      async startRecording() {\n        const granted = await recorderService.requestPermission();\n        if (!granted) {\n          await onClose();\n          alert({\n            title: STRINGS.DIALOG.ALERT_PERMISSIONS_TITLE,\n            message: STRINGS.DIALOG.ALERT_PERMISSIONS_MESSAGE(\n              STRINGS.LABELS.PERMISSION_MICROPHONE,\n              STRINGS.LABELS.PERMISSION_APP_NAME,\n            ),\n            buttons: [{ text: STRINGS.DIALOG.ALERT_PERMISSIONS_OK, onPress: () => SBUUtils.openSettings() }],\n          });\n          Logger.error('Failed to request permission for recorder');\n          return;\n        }\n\n        if (matchesOneOf(status, ['idle'])) {\n          // Before start recording, if player is not idle, reset it.\n          if (playerService.state !== 'idle') {\n            await playerService.reset();\n          }\n\n          const unsubscribeRecording = recorderService.addRecordingListener(({ currentTime }) => {\n            setRecordingTime({\n              currentTime,\n              maxDuration: recorderService.options.maxDuration,\n              minDuration: recorderService.options.minDuration,\n            });\n            setPlayingTime((prev) => ({ ...prev, duration: currentTime }));\n          });\n\n          const unsubscribeState = recorderService.addStateListener((state) => {\n            switch (state) {\n              case 'recording':\n                setStatus('recording');\n                break;\n              case 'completed':\n                setStatus('recording_completed');\n                unsubscribeRecording();\n                unsubscribeState();\n                break;\n            }\n          });\n\n          if (SBUUtils.isExpo()) {\n            await recorderService.record();\n            if (recorderService.uri) {\n              setVoiceMessageRecordingPath({ recordFilePath: recorderService.uri, uri: recorderService.uri });\n            }\n          } else {\n            setVoiceMessageRecordingPath(fileService.createRecordFilePath(recorderService.options.extension));\n            await recorderService.record(getVoiceMessageRecordingPath().recordFilePath);\n          }\n        }\n      },\n      async stopRecording() {\n        if (matchesOneOf(status, ['recording'])) {\n          await recorderService.stop();\n        }\n      },\n      async playPlayer() {\n        const granted = await playerService.requestPermission();\n        if (!granted) {\n          alert({\n            title: STRINGS.DIALOG.ALERT_PERMISSIONS_TITLE,\n            message: STRINGS.DIALOG.ALERT_PERMISSIONS_MESSAGE(\n              STRINGS.LABELS.PERMISSION_DEVICE_STORAGE,\n              STRINGS.LABELS.PERMISSION_APP_NAME,\n            ),\n            buttons: [{ text: STRINGS.DIALOG.ALERT_PERMISSIONS_OK, onPress: () => SBUUtils.openSettings() }],\n          });\n          Logger.error('Failed to request permission for player');\n          return;\n        }\n\n        if (matchesOneOf(status, ['recording_completed', 'playing_paused'])) {\n          const unsubscribePlayback = playerService.addPlaybackListener(({ currentTime, duration }) => {\n            setPlayingTime({ currentTime, duration });\n          });\n\n          const unsubscribeState = playerService.addStateListener((state) => {\n            switch (state) {\n              case 'playing':\n                setStatus('playing');\n                break;\n              case 'paused': {\n                setStatus('playing_paused');\n                unsubscribeState();\n                unsubscribePlayback();\n                break;\n              }\n              case 'stopped': {\n                setStatus('playing_paused');\n                unsubscribeState();\n                unsubscribePlayback();\n                setPlayingTime((prev) => ({ ...prev, currentTime: 0 }));\n                break;\n              }\n            }\n          });\n\n          await playerService.play(getVoiceMessageRecordingPath().recordFilePath);\n        }\n      },\n      async pausePlayer() {\n        if (matchesOneOf(status, ['playing'])) {\n          await playerService.pause();\n        }\n      },\n      async send() {\n        if (\n          matchesOneOf(status, ['recording', 'recording_completed', 'playing', 'playing_paused']) &&\n          recordingPath.current\n        ) {\n          const voiceFile = getVoiceMessageFileObject(recordingPath.current.uri, recorderService.options.extension);\n          onSend(voiceFile, Math.floor(recordingTime.currentTime));\n          await clear();\n        }\n      },\n    },\n  };\n};\n\nexport default useVoiceMessageInput;\n"],"mappings":"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"}