{"version":3,"names":["_react","_interopRequireWildcard","require","_uikitChatHooks","_uikitReactNativeFoundation","_uikitUtils","_StatusComposition","_interopRequireDefault","_UserActionBar","_constants","_createUserListModule","_useContext","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","RETURN_EMPTY_STRING","createOpenChannelParticipantsFragment","initModule","UserListModule","createUserListModule","_ref","channel","onPressHeaderLeft","renderUser","sortComparator","queryCreator","createParticipantListQuery","limit","handlerId","useUniqHandlerId","refreshSchedule","useRef","STRINGS","useLocalization","sdk","currentUser","useSendbirdChat","openMenu","useActionMenu","show","useUserProfile","users","refresh","loading","next","error","upsertUser","deleteUser","useUserList","useChannelHandler","onUserExited","eventChannel","user","isDifferentChannel","userId","onUserBanned","onOperatorUpdated","current","clearTimeout","setTimeout","onUserMuted","isOpenChannel","isMuted","onUserUnmuted","_renderUser","useFreshCallback","selectedUsers","setSelectedUsers","isUserMuted","isUserOperator","isOperator","isCurrentUserOperator","UNKNOWN_USER_ID","createElement","muted","uri","profileUrl","label","ifThenOr","LABELS","USER_BAR_OPERATOR","name","nickname","USER_NO_NAME","USER_BAR_ME_POSTFIX","disabled","onPressActionMenu","menuItems","push","title","UNREGISTER_OPERATOR","REGISTER_AS_OPERATOR","onPress","removeOperators","addOperators","UNMUTE","MUTE","unmuteUser","muteUser","BAN","style","banUser","onPressAvatar","Provider","headerRight","headerTitle","OPEN_CHANNEL_PARTICIPANTS","HEADER_TITLE","Header","onPressHeaderRight","ASYNC_NOOP","LoadingComponent","StatusLoading","Boolean","ErrorComponent","StatusError","onPressRetry","List","onLoadNext","ListEmptyComponent","StatusEmpty","_default","exports"],"sources":["createOpenChannelParticipantsFragment.tsx"],"sourcesContent":["import React, { useRef } from 'react';\n\nimport { useChannelHandler, useUserList } from '@sendbird/uikit-chat-hooks';\nimport type { ActionMenuItem } from '@sendbird/uikit-react-native-foundation';\nimport { useActionMenu } from '@sendbird/uikit-react-native-foundation';\nimport type { SendbirdParticipant } from '@sendbird/uikit-utils';\nimport { ASYNC_NOOP, ifThenOr, isDifferentChannel, useFreshCallback, useUniqHandlerId } from '@sendbird/uikit-utils';\n\nimport StatusComposition from '../components/StatusComposition';\nimport UserActionBar from '../components/UserActionBar';\nimport { UNKNOWN_USER_ID } from '../constants';\nimport type { OpenChannelParticipantsFragment } from '../domain/openChannelUserList/types';\nimport createUserListModule from '../domain/userList/module/createUserListModule';\nimport type { UserListModule } from '../domain/userList/types';\nimport { useLocalization, useSendbirdChat, useUserProfile } from '../hooks/useContext';\n\nconst RETURN_EMPTY_STRING = () => '';\nconst createOpenChannelParticipantsFragment = (\n  initModule?: Partial<UserListModule<SendbirdParticipant>>,\n): OpenChannelParticipantsFragment => {\n  const UserListModule = createUserListModule<SendbirdParticipant>(initModule);\n\n  return ({\n    channel,\n    onPressHeaderLeft,\n    renderUser,\n    sortComparator,\n    queryCreator = () => channel.createParticipantListQuery({ limit: 20 }),\n  }) => {\n    const handlerId = useUniqHandlerId('OpenChannelParticipantsFragment');\n\n    const refreshSchedule = useRef<NodeJS.Timeout>();\n    const { STRINGS } = useLocalization();\n    const { sdk, currentUser } = useSendbirdChat();\n    const { openMenu } = useActionMenu();\n    const { show } = useUserProfile();\n\n    const { users, refresh, loading, next, error, upsertUser, deleteUser } = useUserList(sdk, {\n      queryCreator,\n      sortComparator,\n    });\n\n    useChannelHandler(\n      sdk,\n      handlerId,\n      {\n        onUserExited(eventChannel, user) {\n          if (isDifferentChannel(eventChannel, channel)) return;\n          deleteUser(user.userId);\n        },\n        onUserBanned(eventChannel, user) {\n          if (isDifferentChannel(eventChannel, channel)) return;\n          deleteUser(user.userId);\n        },\n        onOperatorUpdated(eventChannel) {\n          if (isDifferentChannel(eventChannel, channel)) return;\n          if (refreshSchedule.current) clearTimeout(refreshSchedule.current);\n          refreshSchedule.current = setTimeout(() => refresh(), 500);\n        },\n        onUserMuted(eventChannel, user) {\n          if (isDifferentChannel(eventChannel, channel) || !eventChannel.isOpenChannel()) return;\n          // @ts-ignore - SDK should migrate User to Participant\n          user.isMuted = true;\n          upsertUser(user);\n        },\n        onUserUnmuted(eventChannel, user) {\n          if (isDifferentChannel(eventChannel, channel) || !eventChannel.isOpenChannel()) return;\n          // @ts-ignore - SDK should migrate User to Participant\n          user.isMuted = false;\n          upsertUser(user);\n        },\n      },\n      'open',\n    );\n\n    const _renderUser: NonNullable<typeof renderUser> = useFreshCallback((user, selectedUsers, setSelectedUsers) => {\n      if (renderUser) return renderUser(user, selectedUsers, setSelectedUsers);\n\n      const isUserMuted = user.isMuted;\n      const isUserOperator = channel.isOperator(user.userId);\n      const isCurrentUserOperator = channel.isOperator(currentUser?.userId ?? UNKNOWN_USER_ID);\n\n      return (\n        <UserActionBar\n          muted={isUserMuted}\n          uri={user.profileUrl}\n          label={ifThenOr(isUserOperator, STRINGS.LABELS.USER_BAR_OPERATOR, '')}\n          name={\n            (user.nickname || STRINGS.LABELS.USER_NO_NAME) +\n            ifThenOr(user.userId === currentUser?.userId, STRINGS.LABELS.USER_BAR_ME_POSTFIX, '')\n          }\n          disabled={user.userId === currentUser?.userId}\n          onPressActionMenu={ifThenOr(isCurrentUserOperator, () => {\n            const menuItems: ActionMenuItem['menuItems'] = [];\n\n            menuItems.push({\n              title: ifThenOr(isUserOperator, STRINGS.LABELS.UNREGISTER_OPERATOR, STRINGS.LABELS.REGISTER_AS_OPERATOR),\n              onPress: ifThenOr(\n                isUserOperator,\n                () => channel.removeOperators([user.userId]),\n                () => channel.addOperators([user.userId]),\n              ),\n            });\n\n            menuItems.push({\n              title: ifThenOr(isUserMuted, STRINGS.LABELS.UNMUTE, STRINGS.LABELS.MUTE),\n              onPress: ifThenOr(\n                isUserMuted,\n                () => channel.unmuteUser(user),\n                () => channel.muteUser(user),\n              ),\n            });\n\n            menuItems.push({\n              title: STRINGS.LABELS.BAN,\n              style: 'destructive',\n              onPress: () => channel.banUser(user),\n            });\n\n            openMenu({ title: user.nickname || STRINGS.LABELS.USER_NO_NAME, menuItems });\n          })}\n          onPressAvatar={() => show(user)}\n        />\n      );\n    });\n\n    return (\n      <UserListModule.Provider\n        headerRight={RETURN_EMPTY_STRING}\n        headerTitle={STRINGS.OPEN_CHANNEL_PARTICIPANTS.HEADER_TITLE}\n      >\n        <UserListModule.Header onPressHeaderRight={ASYNC_NOOP} onPressHeaderLeft={onPressHeaderLeft} />\n        <StatusComposition\n          loading={loading}\n          LoadingComponent={<UserListModule.StatusLoading />}\n          error={Boolean(error)}\n          ErrorComponent={<UserListModule.StatusError onPressRetry={refresh} />}\n        >\n          <UserListModule.List\n            users={users as SendbirdParticipant[]}\n            renderUser={_renderUser}\n            onLoadNext={next}\n            ListEmptyComponent={<UserListModule.StatusEmpty />}\n          />\n        </StatusComposition>\n      </UserListModule.Provider>\n    );\n  };\n};\n\nexport default createOpenChannelParticipantsFragment;\n"],"mappings":"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"}