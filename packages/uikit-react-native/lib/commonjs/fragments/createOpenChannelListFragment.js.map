{"version":3,"names":["_react","_interopRequireDefault","require","_uikitChatHooks","_uikitReactNativeFoundation","_uikitUtils","_StatusComposition","_openChannelList","_useContext","obj","__esModule","default","createOpenChannelListFragment","initModule","OpenChannelListModule","createOpenChannelListModule","_ref","onPressCreateChannel","onPressChannel","NOOP","flatListProps","renderOpenChannelPreview","queryCreator","sdk","currentUser","useSendbirdChat","STRINGS","useLocalization","openChannels","next","refresh","refreshing","loading","error","useOpenChannelList","userId","_renderOpenChannelPreview","props","createElement","PressBox","activeOpacity","onPress","OpenChannelPreview","coverUrl","channel","title","OPEN_CHANNEL_LIST","CHANNEL_PREVIEW_TITLE","frozen","isFrozen","participantsCount","participantCount","Provider","Header","onPressHeaderRight","LoadingComponent","StatusLoading","Boolean","ErrorComponent","StatusError","onPressRetry","List","onLoadNext","onRefresh","ListEmptyComponent","StatusEmpty","contentContainerStyle","flexGrow","_default","exports"],"sources":["createOpenChannelListFragment.tsx"],"sourcesContent":["import React from 'react';\n\nimport { useOpenChannelList } from '@sendbird/uikit-chat-hooks';\nimport { OpenChannelPreview, PressBox } from '@sendbird/uikit-react-native-foundation';\nimport { NOOP } from '@sendbird/uikit-utils';\n\nimport StatusComposition from '../components/StatusComposition';\nimport { createOpenChannelListModule } from '../domain/openChannelList';\nimport type {\n  OpenChannelListFragment,\n  OpenChannelListModule,\n  OpenChannelListProps,\n} from '../domain/openChannelList/types';\nimport { useLocalization, useSendbirdChat } from '../hooks/useContext';\n\nconst createOpenChannelListFragment = (initModule?: Partial<OpenChannelListModule>): OpenChannelListFragment => {\n  const OpenChannelListModule = createOpenChannelListModule(initModule);\n\n  return ({ onPressCreateChannel, onPressChannel = NOOP, flatListProps, renderOpenChannelPreview, queryCreator }) => {\n    const { sdk, currentUser } = useSendbirdChat();\n    const { STRINGS } = useLocalization();\n    const { openChannels, next, refresh, refreshing, loading, error } = useOpenChannelList(sdk, currentUser?.userId, {\n      queryCreator,\n    });\n\n    const _renderOpenChannelPreview: OpenChannelListProps['List']['renderOpenChannelPreview'] = (props) => {\n      if (renderOpenChannelPreview) return renderOpenChannelPreview(props);\n      return (\n        <PressBox activeOpacity={0.8} onPress={props.onPress}>\n          <OpenChannelPreview\n            coverUrl={props.channel.coverUrl}\n            title={STRINGS.OPEN_CHANNEL_LIST.CHANNEL_PREVIEW_TITLE(props.channel)}\n            frozen={props.channel.isFrozen}\n            participantsCount={props.channel.participantCount}\n          />\n        </PressBox>\n      );\n    };\n\n    return (\n      <OpenChannelListModule.Provider>\n        <OpenChannelListModule.Header onPressHeaderRight={onPressCreateChannel} />\n        <StatusComposition\n          loading={loading}\n          LoadingComponent={<OpenChannelListModule.StatusLoading />}\n          error={Boolean(error)}\n          ErrorComponent={<OpenChannelListModule.StatusError onPressRetry={refresh} />}\n        >\n          <OpenChannelListModule.List\n            onPressChannel={onPressChannel}\n            renderOpenChannelPreview={_renderOpenChannelPreview}\n            openChannels={openChannels}\n            onLoadNext={next}\n            refreshing={refreshing}\n            onRefresh={refresh}\n            flatListProps={{\n              ListEmptyComponent: <OpenChannelListModule.StatusEmpty />,\n              contentContainerStyle: { flexGrow: 1 },\n              ...flatListProps,\n            }}\n          />\n        </StatusComposition>\n      </OpenChannelListModule.Provider>\n    );\n  };\n};\n\nexport default createOpenChannelListFragment;\n"],"mappings":"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"}