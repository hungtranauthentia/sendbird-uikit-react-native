{"version":3,"names":["_react","_interopRequireDefault","require","_groupChannel","_uikitTools","_uikitUtils","_StatusComposition","_GroupChannelPreviewContainer","_createGroupChannelListModule","_useContext","obj","__esModule","default","createGroupChannelListFragment","initModule","GroupChannelListModule","createGroupChannelListModule","_ref","onPressChannel","onPressCreateChannel","renderGroupChannelPreview","skipTypeSelection","flatListProps","menuItemCreator","PASS","channelListQueryParams","collectionCreator","sdk","sbOptions","markAsDeliveredWithChannel","useSendbirdChat","groupChannels","loadMore","initialized","useGroupChannelList","getCollectionCreator","markAsDelivered","confirmAndMarkAsDelivered","useAppState","status","appInfo","deliveryReceiptEnabled","forEach","_renderGroupChannelPreview","useFreshCallback","props","createElement","isChannelTypeAvailable","broadcastChannelEnabled","superGroupChannelEnabled","Provider","Header","loading","LoadingComponent","StatusLoading","List","onLoadNext","ListEmptyComponent","StatusEmpty","contentContainerStyle","flexGrow","TypeSelector","onSelectType","deprecatedCreatorProp","defaultParams","params","groupChannel","createGroupChannelCollection","filter","GroupChannelFilter","_default","exports"],"sources":["createGroupChannelListFragment.tsx"],"sourcesContent":["import React from 'react';\n\nimport { GroupChannelCollection, GroupChannelFilter } from '@sendbird/chat/groupChannel';\nimport { useGroupChannelList } from '@sendbird/uikit-tools';\nimport { PASS, SendbirdChatSDK, confirmAndMarkAsDelivered, useAppState, useFreshCallback } from '@sendbird/uikit-utils';\n\nimport StatusComposition from '../components/StatusComposition';\nimport GroupChannelPreviewContainer from '../containers/GroupChannelPreviewContainer';\nimport createGroupChannelListModule from '../domain/groupChannelList/module/createGroupChannelListModule';\nimport type {\n  GroupChannelListFragment,\n  GroupChannelListModule,\n  GroupChannelListProps,\n} from '../domain/groupChannelList/types';\nimport { useSendbirdChat } from '../hooks/useContext';\n\nconst createGroupChannelListFragment = (initModule?: Partial<GroupChannelListModule>): GroupChannelListFragment => {\n  const GroupChannelListModule = createGroupChannelListModule(initModule);\n  return ({\n    onPressChannel,\n    onPressCreateChannel,\n    renderGroupChannelPreview,\n    skipTypeSelection = false,\n    flatListProps = {},\n    menuItemCreator = PASS,\n    channelListQueryParams,\n    collectionCreator,\n  }) => {\n    const { sdk, sbOptions, markAsDeliveredWithChannel } = useSendbirdChat();\n    const { groupChannels, loadMore, initialized } = useGroupChannelList(sdk, {\n      collectionCreator: getCollectionCreator(sdk, channelListQueryParams, collectionCreator),\n      markAsDelivered: confirmAndMarkAsDelivered,\n    });\n\n    useAppState('change', (status) => {\n      if (sbOptions.appInfo.deliveryReceiptEnabled) {\n        if (status === 'active') groupChannels.forEach(markAsDeliveredWithChannel);\n      }\n    });\n\n    const _renderGroupChannelPreview: GroupChannelListProps['List']['renderGroupChannelPreview'] = useFreshCallback(\n      (props) => {\n        if (renderGroupChannelPreview) return renderGroupChannelPreview(props);\n        return <GroupChannelPreviewContainer {...props} />;\n      },\n    );\n\n    const isChannelTypeAvailable =\n      sbOptions.appInfo.broadcastChannelEnabled || sbOptions.appInfo.superGroupChannelEnabled;\n\n    return (\n      <GroupChannelListModule.Provider>\n        <GroupChannelListModule.Header />\n        <StatusComposition loading={!initialized} LoadingComponent={<GroupChannelListModule.StatusLoading />}>\n          <GroupChannelListModule.List\n            onPressChannel={onPressChannel}\n            menuItemCreator={menuItemCreator}\n            renderGroupChannelPreview={_renderGroupChannelPreview}\n            groupChannels={groupChannels}\n            onLoadNext={loadMore}\n            flatListProps={{\n              ListEmptyComponent: <GroupChannelListModule.StatusEmpty />,\n              contentContainerStyle: { flexGrow: 1 },\n              ...flatListProps,\n            }}\n          />\n        </StatusComposition>\n        <GroupChannelListModule.TypeSelector\n          skipTypeSelection={isChannelTypeAvailable ? skipTypeSelection : true}\n          onSelectType={onPressCreateChannel}\n        />\n      </GroupChannelListModule.Provider>\n    );\n  };\n};\n\nfunction getCollectionCreator(\n  sdk: SendbirdChatSDK,\n  channelListQueryParams?: GroupChannelListProps['Fragment']['channelListQueryParams'],\n  deprecatedCreatorProp?: () => GroupChannelCollection,\n) {\n  if (!channelListQueryParams && deprecatedCreatorProp) return deprecatedCreatorProp;\n\n  return (defaultParams: GroupChannelListProps['Fragment']['channelListQueryParams']) => {\n    const params = { ...defaultParams, ...channelListQueryParams };\n    return sdk.groupChannel.createGroupChannelCollection({\n      ...params,\n      filter: new GroupChannelFilter(params),\n    });\n  };\n}\n\nexport default createGroupChannelListFragment;\n"],"mappings":"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"}