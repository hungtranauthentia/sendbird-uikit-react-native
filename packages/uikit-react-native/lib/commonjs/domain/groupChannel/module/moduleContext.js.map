{"version":3,"names":["_react","_interopRequireWildcard","require","_uikitChatHooks","_uikitUtils","_ProviderLayout","_interopRequireDefault","_constants","_useContext","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","GroupChannelContexts","Fragment","createContext","headerTitle","channel","setMessageToEdit","NOOP","setMessageToReply","TypingIndicator","typingUsers","PubSub","publish","subscribe","MessageList","flatListRef","current","scrollToMessage","lazyScrollToBottom","lazyScrollToIndex","exports","GroupChannelContextsProvider","_ref","children","enableTypingIndicator","keyboardAvoidOffset","groupChannelPubSub","messages","onUpdateSearchItem","Error","handlerId","useUniqHandlerId","STRINGS","useLocalization","currentUser","sdk","useSendbirdChat","setTypingUsers","useState","messageToEdit","messageToReply","useScrollActions","updateInputMode","mode","message","undefined","useChannelHandler","onMessageDeleted","_","messageId","onChannelFrozen","frozenChannel","url","isGroupChannel","getGroupChannelChatAvailableState","frozen","onUserMuted","mutedChannel","user","_sdk$currentUser","userId","onTypingStatusUpdated","eventChannel","isDifferentChannel","getTypingUsers","createElement","Provider","value","GROUP_CHANNEL","HEADER_TITLE","useCallback","params","useRef","useFreshCallback","logFlatListRefWarning","setTimeout","_flatListRef$current","scrollToOffset","offset","animated","timeout","_flatListRef$current2","scrollToIndex","index","viewPosition","options","foundMessageIndex","findIndex","it","isIncludedInList","focusAnimated","startingPoint","createdAt","MESSAGE_FOCUS_ANIMATION_DELAY","Logger","warn"],"sources":["moduleContext.tsx"],"sourcesContent":["import React, { createContext, useCallback, useRef, useState } from 'react';\nimport type { FlatList } from 'react-native';\n\nimport { useChannelHandler } from '@sendbird/uikit-chat-hooks';\nimport {\n  ContextValue,\n  Logger,\n  NOOP,\n  SendbirdFileMessage,\n  SendbirdGroupChannel,\n  SendbirdMessage,\n  SendbirdUser,\n  SendbirdUserMessage,\n  getGroupChannelChatAvailableState,\n  isDifferentChannel,\n  useFreshCallback,\n  useUniqHandlerId,\n} from '@sendbird/uikit-utils';\n\nimport ProviderLayout from '../../../components/ProviderLayout';\nimport { MESSAGE_FOCUS_ANIMATION_DELAY } from '../../../constants';\nimport { useLocalization, useSendbirdChat } from '../../../hooks/useContext';\nimport type { PubSub } from '../../../utils/pubsub';\nimport type { GroupChannelContextsType, GroupChannelModule, GroupChannelPubSubContextPayload } from '../types';\nimport { GroupChannelProps } from '../types';\n\nexport const GroupChannelContexts: GroupChannelContextsType = {\n  Fragment: createContext({\n    headerTitle: '',\n    channel: {} as SendbirdGroupChannel,\n    setMessageToEdit: NOOP,\n    setMessageToReply: NOOP,\n  }),\n  TypingIndicator: createContext({\n    typingUsers: [] as SendbirdUser[],\n  }),\n  PubSub: createContext({\n    publish: NOOP,\n    subscribe: () => NOOP,\n  } as PubSub<GroupChannelPubSubContextPayload>),\n  MessageList: createContext({\n    flatListRef: { current: null },\n    scrollToMessage: () => false,\n    lazyScrollToBottom: () => {\n      // noop\n    },\n    lazyScrollToIndex: () => {\n      // noop\n    },\n  } as MessageListContextValue),\n};\n\nexport const GroupChannelContextsProvider: GroupChannelModule['Provider'] = ({\n  children,\n  channel,\n  enableTypingIndicator,\n  keyboardAvoidOffset = 0,\n  groupChannelPubSub,\n  messages,\n  onUpdateSearchItem,\n}) => {\n  if (!channel) throw new Error('GroupChannel is not provided to GroupChannelModule');\n\n  const handlerId = useUniqHandlerId('GroupChannelContextsProvider');\n  const { STRINGS } = useLocalization();\n  const { currentUser, sdk } = useSendbirdChat();\n\n  const [typingUsers, setTypingUsers] = useState<SendbirdUser[]>([]);\n  const [messageToEdit, setMessageToEdit] = useState<SendbirdUserMessage | SendbirdFileMessage>();\n  const [messageToReply, setMessageToReply] = useState<SendbirdUserMessage | SendbirdFileMessage>();\n\n  const { flatListRef, lazyScrollToIndex, lazyScrollToBottom, scrollToMessage } = useScrollActions({\n    messages,\n    onUpdateSearchItem,\n  });\n\n  const updateInputMode = (mode: 'send' | 'edit' | 'reply', message?: SendbirdUserMessage | SendbirdFileMessage) => {\n    if (mode === 'send' || !message) {\n      setMessageToEdit(undefined);\n      setMessageToReply(undefined);\n      return;\n    } else if (mode === 'edit') {\n      setMessageToEdit(message);\n      setMessageToReply(undefined);\n      return;\n    } else if (mode === 'reply') {\n      setMessageToEdit(undefined);\n      setMessageToReply(message);\n      return;\n    }\n  };\n\n  useChannelHandler(sdk, handlerId, {\n    onMessageDeleted(_, messageId) {\n      if (messageToReply?.messageId === messageId) {\n        setMessageToReply(undefined);\n      }\n    },\n    onChannelFrozen(frozenChannel) {\n      if (frozenChannel.url === channel.url) {\n        if (frozenChannel.isGroupChannel() && getGroupChannelChatAvailableState(channel).frozen) {\n          setMessageToReply(undefined);\n        }\n      }\n    },\n    onUserMuted(mutedChannel, user) {\n      if (mutedChannel.url === channel.url && user.userId === sdk.currentUser?.userId) {\n        setMessageToReply(undefined);\n      }\n    },\n    onTypingStatusUpdated(eventChannel) {\n      if (isDifferentChannel(channel, eventChannel)) return;\n      if (!enableTypingIndicator) return;\n      setTypingUsers(eventChannel.getTypingUsers());\n    },\n  });\n\n  return (\n    <ProviderLayout>\n      <GroupChannelContexts.Fragment.Provider\n        value={{\n          headerTitle: STRINGS.GROUP_CHANNEL.HEADER_TITLE(currentUser?.userId ?? '', channel),\n          channel,\n          keyboardAvoidOffset,\n          messageToEdit,\n          setMessageToEdit: useCallback((message) => updateInputMode('edit', message), []),\n          messageToReply,\n          setMessageToReply: useCallback((message) => updateInputMode('reply', message), []),\n        }}\n      >\n        <GroupChannelContexts.PubSub.Provider value={groupChannelPubSub}>\n          <GroupChannelContexts.TypingIndicator.Provider value={{ typingUsers }}>\n            <GroupChannelContexts.MessageList.Provider\n              value={{\n                flatListRef,\n                scrollToMessage,\n                lazyScrollToIndex,\n                lazyScrollToBottom,\n              }}\n            >\n              {children}\n            </GroupChannelContexts.MessageList.Provider>\n          </GroupChannelContexts.TypingIndicator.Provider>\n        </GroupChannelContexts.PubSub.Provider>\n      </GroupChannelContexts.Fragment.Provider>\n    </ProviderLayout>\n  );\n};\n\ntype MessageListContextValue = ContextValue<GroupChannelContextsType['MessageList']>;\nconst useScrollActions = (params: Pick<GroupChannelProps['Provider'], 'messages' | 'onUpdateSearchItem'>) => {\n  const { messages, onUpdateSearchItem } = params;\n  const flatListRef = useRef<FlatList<SendbirdMessage>>(null);\n\n  // FIXME: Workaround, should run after data has been applied to UI.\n  const lazyScrollToBottom = useFreshCallback<MessageListContextValue['lazyScrollToIndex']>((params) => {\n    if (!flatListRef.current) {\n      logFlatListRefWarning();\n      return;\n    }\n\n    setTimeout(() => {\n      flatListRef.current?.scrollToOffset({ offset: 0, animated: params?.animated ?? false });\n    }, params?.timeout ?? 0);\n  });\n\n  // FIXME: Workaround, should run after data has been applied to UI.\n  const lazyScrollToIndex = useFreshCallback<MessageListContextValue['lazyScrollToIndex']>((params) => {\n    if (!flatListRef.current) {\n      logFlatListRefWarning();\n      return;\n    }\n\n    setTimeout(() => {\n      flatListRef.current?.scrollToIndex({\n        index: params?.index ?? 0,\n        animated: params?.animated ?? false,\n        viewPosition: params?.viewPosition ?? 0.5,\n      });\n    }, params?.timeout ?? 0);\n  });\n\n  const scrollToMessage = useFreshCallback<MessageListContextValue['scrollToMessage']>((messageId, options) => {\n    if (!flatListRef.current) {\n      logFlatListRefWarning();\n      return false;\n    }\n\n    const foundMessageIndex = messages.findIndex((it) => it.messageId === messageId);\n    const isIncludedInList = foundMessageIndex > -1;\n\n    if (isIncludedInList) {\n      if (options?.focusAnimated) {\n        setTimeout(\n          () => onUpdateSearchItem({ startingPoint: messages[foundMessageIndex].createdAt }),\n          MESSAGE_FOCUS_ANIMATION_DELAY,\n        );\n      }\n      lazyScrollToIndex({\n        index: foundMessageIndex,\n        animated: true,\n        timeout: 0,\n        viewPosition: options?.viewPosition,\n      });\n      return true;\n    } else {\n      return false;\n    }\n  });\n\n  return {\n    flatListRef,\n    lazyScrollToIndex,\n    lazyScrollToBottom,\n    scrollToMessage,\n  };\n};\n\nconst logFlatListRefWarning = () => {\n  Logger.warn(\n    'Cannot find flatListRef.current, please render FlatList and pass the flatListRef' +\n      'or please try again after FlatList has been rendered.',\n  );\n};\n"],"mappings":"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"}