{"version":3,"names":["_react","_interopRequireWildcard","require","_uikitReactNativeFoundation","_uikitUtils","_moduleContext","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","OpenChannelCreateHeader","_ref","onPressHeaderLeft","onPressHeaderRight","shouldActivateHeaderRight","headerTitle","headerRight","useContext","OpenChannelCreateContexts","Fragment","HeaderComponent","useHeaderStyle","colors","useUIKitTheme","isHeaderRightActive","createElement","title","left","Icon","icon","onPressLeft","right","Text","button","color","ifThenOr","primary","onBackground04","onPressRight","_default","exports"],"sources":["OpenChannelCreateHeader.tsx"],"sourcesContent":["import React, { useContext } from 'react';\n\nimport { Icon, Text, useHeaderStyle, useUIKitTheme } from '@sendbird/uikit-react-native-foundation';\nimport { ifThenOr } from '@sendbird/uikit-utils';\n\nimport { OpenChannelCreateContexts } from '../module/moduleContext';\nimport type { OpenChannelCreateProps } from '../types';\n\nconst OpenChannelCreateHeader = ({\n  onPressHeaderLeft,\n  onPressHeaderRight,\n  shouldActivateHeaderRight,\n}: OpenChannelCreateProps['Header']) => {\n  const { headerTitle, headerRight } = useContext(OpenChannelCreateContexts.Fragment);\n  const { HeaderComponent } = useHeaderStyle();\n  const { colors } = useUIKitTheme();\n\n  const isHeaderRightActive = shouldActivateHeaderRight();\n\n  return (\n    <HeaderComponent\n      title={headerTitle}\n      left={<Icon icon={'arrow-left'} />}\n      onPressLeft={onPressHeaderLeft}\n      right={\n        <Text button color={ifThenOr(isHeaderRightActive, colors.primary, colors.onBackground04)}>\n          {headerRight}\n        </Text>\n      }\n      onPressRight={ifThenOr(isHeaderRightActive, onPressHeaderRight)}\n    />\n  );\n};\n\nexport default OpenChannelCreateHeader;\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,uBAAA,CAAAC,OAAA;AAEA,IAAAC,2BAAA,GAAAD,OAAA;AACA,IAAAE,WAAA,GAAAF,OAAA;AAEA,IAAAG,cAAA,GAAAH,OAAA;AAAoE,SAAAI,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,CAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAN,wBAAAU,GAAA,EAAAJ,WAAA,SAAAA,WAAA,IAAAI,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAE,OAAA,EAAAF,GAAA,UAAAG,KAAA,GAAAR,wBAAA,CAAAC,WAAA,OAAAO,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAJ,GAAA,YAAAG,KAAA,CAAAE,GAAA,CAAAL,GAAA,SAAAM,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAX,GAAA,QAAAW,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAd,GAAA,EAAAW,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAV,GAAA,EAAAW,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAX,GAAA,CAAAW,GAAA,SAAAL,MAAA,CAAAJ,OAAA,GAAAF,GAAA,MAAAG,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAhB,GAAA,EAAAM,MAAA,YAAAA,MAAA;AAGpE,MAAMW,uBAAuB,GAAGC,IAAA,IAIQ;EAAA,IAJP;IAC/BC,iBAAiB;IACjBC,kBAAkB;IAClBC;EACgC,CAAC,GAAAH,IAAA;EACjC,MAAM;IAAEI,WAAW;IAAEC;EAAY,CAAC,GAAG,IAAAC,iBAAU,EAACC,wCAAyB,CAACC,QAAQ,CAAC;EACnF,MAAM;IAAEC;EAAgB,CAAC,GAAG,IAAAC,0CAAc,GAAE;EAC5C,MAAM;IAAEC;EAAO,CAAC,GAAG,IAAAC,yCAAa,GAAE;EAElC,MAAMC,mBAAmB,GAAGV,yBAAyB,EAAE;EAEvD,oBACEhC,MAAA,CAAAa,OAAA,CAAA8B,aAAA,CAACL,eAAe;IACdM,KAAK,EAAEX,WAAY;IACnBY,IAAI,eAAE7C,MAAA,CAAAa,OAAA,CAAA8B,aAAA,CAACxC,2BAAA,CAAA2C,IAAI;MAACC,IAAI,EAAE;IAAa,EAAI;IACnCC,WAAW,EAAElB,iBAAkB;IAC/BmB,KAAK,eACHjD,MAAA,CAAAa,OAAA,CAAA8B,aAAA,CAACxC,2BAAA,CAAA+C,IAAI;MAACC,MAAM;MAACC,KAAK,EAAE,IAAAC,oBAAQ,EAACX,mBAAmB,EAAEF,MAAM,CAACc,OAAO,EAAEd,MAAM,CAACe,cAAc;IAAE,GACtFrB,WAAW,CAEf;IACDsB,YAAY,EAAE,IAAAH,oBAAQ,EAACX,mBAAmB,EAAEX,kBAAkB;EAAE,EAChE;AAEN,CAAC;AAAC,IAAA0B,QAAA,GAEa7B,uBAAuB;AAAA8B,OAAA,CAAA7C,OAAA,GAAA4C,QAAA"}