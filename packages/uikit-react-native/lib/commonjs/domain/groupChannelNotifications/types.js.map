{"version":3,"names":[],"sources":["types.ts"],"sourcesContent":["import type React from 'react';\n\nimport type { SendbirdGroupChannel } from '@sendbird/uikit-utils';\n\nimport type { CommonComponent } from '../../types';\n\nexport type GroupChannelNotificationsProps = {\n  Fragment: {\n    channel: SendbirdGroupChannel;\n    onPressHeaderLeft: GroupChannelNotificationsProps['Header']['onPressHeaderLeft'];\n  };\n  Header: {\n    onPressHeaderLeft: () => void;\n  };\n  View: {};\n  Provider: {\n    channel: SendbirdGroupChannel;\n  };\n};\n\n/**\n * Internal context for GroupChannelNotifications\n * For example, the developer can create a custom header\n * with getting data from the domain context\n * */\nexport type GroupChannelNotificationsContextsType = {\n  Fragment: React.Context<{\n    channel: SendbirdGroupChannel;\n    headerTitle: string;\n  }>;\n};\nexport interface GroupChannelNotificationsModule {\n  Provider: CommonComponent<GroupChannelNotificationsProps['Provider']>;\n  Header: CommonComponent<GroupChannelNotificationsProps['Header']>;\n  View: CommonComponent<GroupChannelNotificationsProps['View']>;\n}\n\nexport type GroupChannelNotificationsFragment = React.FC<GroupChannelNotificationsProps['Fragment']>;\n"],"mappings":""}