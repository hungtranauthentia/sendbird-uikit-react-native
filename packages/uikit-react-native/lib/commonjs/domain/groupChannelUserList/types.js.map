{"version":3,"names":[],"sources":["types.ts"],"sourcesContent":["import type { UseUserListOptions } from '@sendbird/uikit-chat-hooks';\nimport type {\n  SendbirdGroupChannel,\n  SendbirdGroupChannelCreateParams,\n  SendbirdMember,\n  UserStruct,\n} from '@sendbird/uikit-utils';\n\nimport type { CommonComponent } from '../../types';\nimport type { GroupChannelType } from '../groupChannelList/types';\nimport type { UserListProps } from '../userList/types';\n\nexport interface GroupChannelCreateProps<User extends UserStruct> {\n  Fragment: {\n    onPressHeaderLeft: () => void;\n    onCreateChannel: (channel: SendbirdGroupChannel) => void;\n    channelType?: GroupChannelType;\n    onBeforeCreateChannel?: (\n      params: SendbirdGroupChannelCreateParams,\n      users: User[],\n    ) => SendbirdGroupChannelCreateParams | Promise<SendbirdGroupChannelCreateParams>;\n    sortComparator?: UseUserListOptions<User>['sortComparator'];\n    queryCreator?: UseUserListOptions<User>['queryCreator'];\n    renderUser?: UserListProps<User>['List']['renderUser'];\n  };\n}\nexport type GroupChannelCreateFragment<User extends UserStruct> = CommonComponent<\n  GroupChannelCreateProps<User>['Fragment']\n>;\n\nexport interface GroupChannelInviteProps<User extends UserStruct> {\n  Fragment: {\n    channel: SendbirdGroupChannel;\n    onPressHeaderLeft: () => void;\n    onInviteMembers: (channel: SendbirdGroupChannel) => void;\n    queryCreator?: UseUserListOptions<User>['queryCreator'];\n    renderUser?: UserListProps<User>['List']['renderUser'];\n    sortComparator?: UseUserListOptions<User>['sortComparator'];\n  };\n}\nexport type GroupChannelInviteFragment<User extends UserStruct> = CommonComponent<\n  GroupChannelInviteProps<User>['Fragment']\n>;\n\nexport interface GroupChannelMembersProps {\n  Fragment: {\n    channel: SendbirdGroupChannel;\n    onPressHeaderLeft: () => void;\n    onPressHeaderRight: () => void;\n    sortComparator?: UseUserListOptions<SendbirdMember>['sortComparator'];\n    renderUser?: UserListProps<SendbirdMember>['List']['renderUser'];\n    queryCreator?: UseUserListOptions<SendbirdMember>['queryCreator'];\n  };\n}\nexport type GroupChannelMembersFragment = React.FC<GroupChannelMembersProps['Fragment']>;\n\nexport interface GroupChannelRegisterOperatorProps {\n  Fragment: {\n    channel: SendbirdGroupChannel;\n    onPressHeaderLeft: () => void;\n    onPressHeaderRight: (channel: SendbirdGroupChannel) => void;\n    sortComparator?: UseUserListOptions<SendbirdMember>['sortComparator'];\n    renderUser?: UserListProps<SendbirdMember>['List']['renderUser'];\n    queryCreator?: UseUserListOptions<SendbirdMember>['queryCreator'];\n  };\n}\nexport type GroupChannelRegisterOperatorFragment = React.FC<GroupChannelRegisterOperatorProps['Fragment']>;\n"],"mappings":""}