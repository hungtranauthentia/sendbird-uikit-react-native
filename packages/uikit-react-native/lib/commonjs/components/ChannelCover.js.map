{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_uikitReactNativeFoundation","_uikitUtils","_useContext","obj","__esModule","default","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","ChannelCover","_ref","channel","avatarProps","currentUser","useSendbirdChat","colors","useUIKitTheme","isGroupChannel","isDefaultCoverImage","coverUrl","createElement","Avatar","uri","isBroadcast","View","style","containerStyle","Icon","icon","size","color","onBackgroundReverse01","backgroundColor","secondary","borderRadius","padding","memberCount","_channel$members$filt","_channel$members$filt2","otherUserProfile","members","filter","m","userId","profileUrl","Group","getMembersExcludeMe","map","isOpenChannel","_default","exports"],"sources":["ChannelCover.tsx"],"sourcesContent":["import React from 'react';\nimport type { StyleProp, ViewStyle } from 'react-native';\nimport { View } from 'react-native';\n\nimport { Avatar, Icon, useUIKitTheme } from '@sendbird/uikit-react-native-foundation';\nimport { SendbirdBaseChannel, getMembersExcludeMe, isDefaultCoverImage } from '@sendbird/uikit-utils';\n\nimport { useSendbirdChat } from '../hooks/useContext';\n\ntype Props = {\n  channel: SendbirdBaseChannel;\n  size: number;\n  containerStyle?: StyleProp<ViewStyle>;\n};\n\nconst ChannelCover = ({ channel, ...avatarProps }: Props) => {\n  const { currentUser } = useSendbirdChat();\n  const { colors } = useUIKitTheme();\n\n  if (channel.isGroupChannel()) {\n    // custom channel cover\n    if (!isDefaultCoverImage(channel.coverUrl) || !currentUser) {\n      return <Avatar uri={channel.coverUrl} {...avatarProps} />;\n    }\n\n    // broadcast channel cover\n    if (channel.isBroadcast) {\n      return (\n        <View style={avatarProps.containerStyle}>\n          <Icon\n            icon={'broadcast'}\n            size={avatarProps.size * (4 / 7)}\n            color={colors.onBackgroundReverse01}\n            containerStyle={{\n              backgroundColor: colors.secondary,\n              borderRadius: avatarProps.size * 0.5,\n              padding: avatarProps.size * (3 / 7) * 0.5,\n            }}\n          />\n        </View>\n      );\n    }\n\n    // no members, use anonymous profile\n    if (channel.memberCount <= 1) {\n      return <Avatar {...avatarProps} />;\n    }\n\n    // 1:1, use member profile\n    if (channel.memberCount === 2) {\n      const otherUserProfile = channel.members.filter((m) => m.userId !== currentUser.userId)?.[0]?.profileUrl;\n      return <Avatar uri={otherUserProfile} {...avatarProps} />;\n    }\n\n    // group, use members profile\n    return (\n      <Avatar.Group {...avatarProps}>\n        {getMembersExcludeMe(channel, currentUser?.userId).map((m) => (\n          <Avatar key={m.userId} uri={m.profileUrl} />\n        ))}\n      </Avatar.Group>\n    );\n  }\n\n  if (channel.isOpenChannel()) {\n    // channel cover\n    return <Avatar uri={channel.coverUrl} {...avatarProps} />;\n  }\n\n  return <Avatar uri={channel.coverUrl} {...avatarProps} />;\n};\n\nexport default ChannelCover;\n"],"mappings":"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"}