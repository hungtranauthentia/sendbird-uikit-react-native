{"version":3,"names":["_react","_interopRequireDefault","require","_uikitChatHooks","_uikitReactNativeFoundation","_useContext","obj","__esModule","default","SIZE","GroupChannelMessageOutgoingStatus","_ref","channel","message","style","sdk","useSendbirdChat","colors","useUIKitTheme","outgoingStatus","useMessageOutgoingStatus","isUserMessage","isFileMessage","isEphemeral","createElement","LoadingSpinner","size","Icon","icon","color","error","secondary","onBackground03","_default","React","memo","exports"],"sources":["GroupChannelMessageOutgoingStatus.tsx"],"sourcesContent":["import React from 'react';\nimport type { ImageStyle, StyleProp } from 'react-native';\n\nimport { useMessageOutgoingStatus } from '@sendbird/uikit-chat-hooks';\nimport { Icon, LoadingSpinner, useUIKitTheme } from '@sendbird/uikit-react-native-foundation';\nimport type { SendbirdGroupChannel, SendbirdMessage } from '@sendbird/uikit-utils';\n\nimport { useSendbirdChat } from '../../hooks/useContext';\n\nconst SIZE = 16;\n\ntype Props = {\n  channel: SendbirdGroupChannel;\n  message: SendbirdMessage;\n  style?: StyleProp<ImageStyle>;\n};\nconst GroupChannelMessageOutgoingStatus = ({ channel, message, style }: Props) => {\n  const { sdk } = useSendbirdChat();\n  const { colors } = useUIKitTheme();\n  const outgoingStatus = useMessageOutgoingStatus(sdk, channel, message);\n\n  if (!message.isUserMessage() && !message.isFileMessage()) return null;\n  if (channel.isEphemeral) return null;\n\n  if (outgoingStatus === 'PENDING') {\n    return <LoadingSpinner size={SIZE} style={style} />;\n  }\n\n  if (outgoingStatus === 'FAILED') {\n    return <Icon icon={'error'} size={SIZE} color={colors.error} style={style} />;\n  }\n\n  if (outgoingStatus === 'READ') {\n    return <Icon icon={'done-all'} size={SIZE} color={colors.secondary} style={style} />;\n  }\n\n  if (outgoingStatus === 'UNREAD' || outgoingStatus === 'DELIVERED') {\n    return <Icon icon={'done-all'} size={SIZE} color={colors.onBackground03} style={style} />;\n  }\n\n  if (outgoingStatus === 'UNDELIVERED') {\n    return <Icon icon={'done'} size={SIZE} color={colors.onBackground03} style={style} />;\n  }\n\n  return null;\n};\n\nexport default React.memo(GroupChannelMessageOutgoingStatus);\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AAGA,IAAAC,eAAA,GAAAD,OAAA;AACA,IAAAE,2BAAA,GAAAF,OAAA;AAGA,IAAAG,WAAA,GAAAH,OAAA;AAAyD,SAAAD,uBAAAK,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAEzD,MAAMG,IAAI,GAAG,EAAE;AAOf,MAAMC,iCAAiC,GAAGC,IAAA,IAAwC;EAAA,IAAvC;IAAEC,OAAO;IAAEC,OAAO;IAAEC;EAAa,CAAC,GAAAH,IAAA;EAC3E,MAAM;IAAEI;EAAI,CAAC,GAAG,IAAAC,2BAAe,GAAE;EACjC,MAAM;IAAEC;EAAO,CAAC,GAAG,IAAAC,yCAAa,GAAE;EAClC,MAAMC,cAAc,GAAG,IAAAC,wCAAwB,EAACL,GAAG,EAAEH,OAAO,EAAEC,OAAO,CAAC;EAEtE,IAAI,CAACA,OAAO,CAACQ,aAAa,EAAE,IAAI,CAACR,OAAO,CAACS,aAAa,EAAE,EAAE,OAAO,IAAI;EACrE,IAAIV,OAAO,CAACW,WAAW,EAAE,OAAO,IAAI;EAEpC,IAAIJ,cAAc,KAAK,SAAS,EAAE;IAChC,oBAAOnB,MAAA,CAAAQ,OAAA,CAAAgB,aAAA,CAACpB,2BAAA,CAAAqB,cAAc;MAACC,IAAI,EAAEjB,IAAK;MAACK,KAAK,EAAEA;IAAM,EAAG;EACrD;EAEA,IAAIK,cAAc,KAAK,QAAQ,EAAE;IAC/B,oBAAOnB,MAAA,CAAAQ,OAAA,CAAAgB,aAAA,CAACpB,2BAAA,CAAAuB,IAAI;MAACC,IAAI,EAAE,OAAQ;MAACF,IAAI,EAAEjB,IAAK;MAACoB,KAAK,EAAEZ,MAAM,CAACa,KAAM;MAAChB,KAAK,EAAEA;IAAM,EAAG;EAC/E;EAEA,IAAIK,cAAc,KAAK,MAAM,EAAE;IAC7B,oBAAOnB,MAAA,CAAAQ,OAAA,CAAAgB,aAAA,CAACpB,2BAAA,CAAAuB,IAAI;MAACC,IAAI,EAAE,UAAW;MAACF,IAAI,EAAEjB,IAAK;MAACoB,KAAK,EAAEZ,MAAM,CAACc,SAAU;MAACjB,KAAK,EAAEA;IAAM,EAAG;EACtF;EAEA,IAAIK,cAAc,KAAK,QAAQ,IAAIA,cAAc,KAAK,WAAW,EAAE;IACjE,oBAAOnB,MAAA,CAAAQ,OAAA,CAAAgB,aAAA,CAACpB,2BAAA,CAAAuB,IAAI;MAACC,IAAI,EAAE,UAAW;MAACF,IAAI,EAAEjB,IAAK;MAACoB,KAAK,EAAEZ,MAAM,CAACe,cAAe;MAAClB,KAAK,EAAEA;IAAM,EAAG;EAC3F;EAEA,IAAIK,cAAc,KAAK,aAAa,EAAE;IACpC,oBAAOnB,MAAA,CAAAQ,OAAA,CAAAgB,aAAA,CAACpB,2BAAA,CAAAuB,IAAI;MAACC,IAAI,EAAE,MAAO;MAACF,IAAI,EAAEjB,IAAK;MAACoB,KAAK,EAAEZ,MAAM,CAACe,cAAe;MAAClB,KAAK,EAAEA;IAAM,EAAG;EACvF;EAEA,OAAO,IAAI;AACb,CAAC;AAAC,IAAAmB,QAAA,gBAEaC,cAAK,CAACC,IAAI,CAACzB,iCAAiC,CAAC;AAAA0B,OAAA,CAAA5B,OAAA,GAAAyB,QAAA"}