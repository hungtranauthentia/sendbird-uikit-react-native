{"version":3,"names":["_react","_interopRequireWildcard","require","_uikitReactNativeFoundation","_uikitUtils","_constants","_moduleContext","_useContext","_SBUUtils","_interopRequireDefault","_types","_ReactionAddons","_GroupChannelMessageDateSeparator","_GroupChannelMessageFocusAnimation","_GroupChannelMessageOutgoingStatus","_GroupChannelMessageParentMessage","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_extends","assign","bind","target","i","arguments","length","source","apply","GroupChannelMessageRenderer","_ref","channel","message","onPress","onLongPress","onPressParentMessage","onShowUserProfile","enableMessageGrouping","focused","prevMessage","nextMessage","playerUnsubscribes","useRef","palette","useUIKitTheme","sbOptions","currentUser","mentionManager","useSendbirdChat","STRINGS","useLocalization","mediaService","playerService","usePlatformService","groupWithPrev","groupWithNext","calcMessageGrouping","Boolean","reactionChildren","useIIFE","configs","uikitWithAppInfo","groupChannel","shouldRenderReaction","isSuper","enableReactionsSupergroup","enableReactions","reactions","createElement","ReactionAddons","Message","resetPlayer","current","forEach","unsubscribe","reset","variant","isMyMessage","userId","messageProps","onPressURL","url","SBUUtils","openURL","onPressAvatar","sender","onPressMentionedUser","mentionedUser","onToggleVoiceMessage","state","setState","isVoiceMessage","sendingStatus","uri","pause","play","shouldSeekToTime","duration","currentTime","seekFinished","forPlayback","addPlaybackListener","_ref2","stopped","prevState","forState","addStateListener","status","push","seek","groupedWithPrev","groupedWithNext","children","parentMessage","shouldRenderParentMessage","childMessage","strings","edited","GROUP_CHANNEL","MESSAGE_BUBBLE_EDITED_POSTFIX","senderName","nickname","LABELS","USER_NO_NAME","sentDate","MESSAGE_BUBBLE_TIME","fileName","isFileMessage","MESSAGE_BUBBLE_FILE_TITLE","unknownTitle","MESSAGE_BUBBLE_UNKNOWN_TITLE","unknownDescription","MESSAGE_BUBBLE_UNKNOWN_DESC","userMessageProps","renderRegexTextChildren","shouldUseMentionedMessageTemplate","uikit","enableMention","mentionedMessageTemplate","regexTextPatterns","regex","templateRegex","replacer","_ref3","_message$mentionedUse","match","groups","parentProps","index","keyPrefix","user","mentionedUsers","find","it","mentionColor","onBackgroundLight01","color","Text","_messageProps$onPress","style","fontWeight","backgroundColor","highlight","asMentionedMessageText","renderMessage","getMessageType","GroupChannelMessage","Admin","ogMetaData","enableOgtag","OpenGraphUser","User","File","ImageFile","VideoFile","fetchThumbnailFromVideoSource","getVideoThumbnail","timeMills","VoiceFile","durationMetaArrayKey","VOICE_MESSAGE_META_ARRAY_DURATION_KEY","onUnmount","Unknown","messageGap","isAdminMessage","Box","paddingHorizontal","marginBottom","GroupChannelTypingIndicatorBubble","publish","useContext","GroupChannelContexts","PubSub","typingUsers","TypingIndicator","shouldRenderBubble","enableTypingIndicator","typingIndicatorTypes","TypingIndicatorType","Bubble","useEffect","type","marginTop","TypingIndicatorBubble","exports","_default","React","memo"],"sources":["index.tsx"],"sourcesContent":["import React, { useContext, useEffect, useRef } from 'react';\n\nimport type { GroupChannelMessageProps, RegexTextPattern } from '@sendbird/uikit-react-native-foundation';\nimport {\n  Box,\n  GroupChannelMessage,\n  Text,\n  TypingIndicatorBubble,\n  useUIKitTheme,\n} from '@sendbird/uikit-react-native-foundation';\nimport {\n  SendbirdAdminMessage,\n  SendbirdFileMessage,\n  SendbirdMessage,\n  SendbirdUserMessage,\n  calcMessageGrouping,\n  getMessageType,\n  isMyMessage,\n  isVoiceMessage,\n  shouldRenderParentMessage,\n  shouldRenderReaction,\n  useIIFE,\n} from '@sendbird/uikit-utils';\n\nimport { VOICE_MESSAGE_META_ARRAY_DURATION_KEY } from '../../constants';\nimport { GroupChannelContexts } from '../../domain/groupChannel/module/moduleContext';\nimport type { GroupChannelProps } from '../../domain/groupChannel/types';\nimport { useLocalization, usePlatformService, useSendbirdChat } from '../../hooks/useContext';\nimport SBUUtils from '../../libs/SBUUtils';\nimport { TypingIndicatorType } from '../../types';\nimport { ReactionAddons } from '../ReactionAddons';\nimport GroupChannelMessageDateSeparator from './GroupChannelMessageDateSeparator';\nimport GroupChannelMessageFocusAnimation from './GroupChannelMessageFocusAnimation';\nimport GroupChannelMessageOutgoingStatus from './GroupChannelMessageOutgoingStatus';\nimport GroupChannelMessageParentMessage from './GroupChannelMessageParentMessage';\n\nconst GroupChannelMessageRenderer: GroupChannelProps['Fragment']['renderMessage'] = ({\n  channel,\n  message,\n  onPress,\n  onLongPress,\n  onPressParentMessage,\n  onShowUserProfile,\n  enableMessageGrouping,\n  focused,\n  prevMessage,\n  nextMessage,\n}) => {\n  const playerUnsubscribes = useRef<(() => void)[]>([]);\n  const { palette } = useUIKitTheme();\n  const { sbOptions, currentUser, mentionManager } = useSendbirdChat();\n  const { STRINGS } = useLocalization();\n  const { mediaService, playerService } = usePlatformService();\n  const { groupWithPrev, groupWithNext } = calcMessageGrouping(\n    Boolean(enableMessageGrouping),\n    message,\n    prevMessage,\n    nextMessage,\n  );\n\n  const reactionChildren = useIIFE(() => {\n    const configs = sbOptions.uikitWithAppInfo.groupChannel.channel;\n    if (\n      shouldRenderReaction(channel, channel.isSuper ? configs.enableReactionsSupergroup : configs.enableReactions) &&\n      message.reactions &&\n      message.reactions.length > 0\n    ) {\n      return <ReactionAddons.Message channel={channel} message={message} />;\n    }\n    return null;\n  });\n\n  const resetPlayer = async () => {\n    playerUnsubscribes.current.forEach((unsubscribe) => {\n      try {\n        unsubscribe();\n      } catch {}\n    });\n    playerUnsubscribes.current.length = 0;\n    await playerService.reset();\n  };\n\n  const variant = isMyMessage(message, currentUser?.userId) ? 'outgoing' : 'incoming';\n\n  const messageProps: Omit<GroupChannelMessageProps<SendbirdMessage>, 'message'> = {\n    channel,\n    variant,\n    onPress,\n    onLongPress,\n    onPressURL: (url) => SBUUtils.openURL(url),\n    onPressAvatar: () => {\n      if ('sender' in message) onShowUserProfile?.(message.sender);\n    },\n    onPressMentionedUser: (mentionedUser) => {\n      if (mentionedUser) onShowUserProfile?.(mentionedUser);\n    },\n    onToggleVoiceMessage: async (state, setState) => {\n      if (isVoiceMessage(message) && message.sendingStatus === 'succeeded') {\n        if (playerService.uri === message.url) {\n          if (playerService.state === 'playing') {\n            await playerService.pause();\n          } else {\n            await playerService.play(message.url);\n          }\n        } else {\n          if (playerService.state !== 'idle') {\n            await resetPlayer();\n          }\n\n          const shouldSeekToTime = state.duration > state.currentTime && state.currentTime > 0;\n          let seekFinished = !shouldSeekToTime;\n\n          const forPlayback = playerService.addPlaybackListener(({ stopped, currentTime, duration }) => {\n            if (seekFinished) {\n              setState((prevState) => ({ ...prevState, currentTime: stopped ? 0 : currentTime, duration }));\n            }\n          });\n          const forState = playerService.addStateListener((state) => {\n            switch (state) {\n              case 'preparing':\n                setState((prevState) => ({ ...prevState, status: 'preparing' }));\n                break;\n              case 'playing':\n                setState((prevState) => ({ ...prevState, status: 'playing' }));\n                break;\n              case 'idle':\n              case 'paused': {\n                setState((prevState) => ({ ...prevState, status: 'paused' }));\n                break;\n              }\n              case 'stopped':\n                setState((prevState) => ({ ...prevState, status: 'paused' }));\n                break;\n            }\n          });\n          playerUnsubscribes.current.push(forPlayback, forState);\n\n          await playerService.play(message.url);\n          if (shouldSeekToTime) {\n            await playerService.seek(state.currentTime);\n            seekFinished = true;\n          }\n        }\n      }\n    },\n    groupedWithPrev: groupWithPrev,\n    groupedWithNext: groupWithNext,\n    children: reactionChildren,\n    sendingStatus: isMyMessage(message, currentUser?.userId) ? (\n      <GroupChannelMessageOutgoingStatus channel={channel} message={message} />\n    ) : null,\n    parentMessage: shouldRenderParentMessage(message) ? (\n      <GroupChannelMessageParentMessage\n        channel={channel}\n        message={message.parentMessage}\n        variant={variant}\n        childMessage={message}\n        onPress={onPressParentMessage}\n      />\n    ) : null,\n    strings: {\n      edited: STRINGS.GROUP_CHANNEL.MESSAGE_BUBBLE_EDITED_POSTFIX,\n      senderName: ('sender' in message && message.sender.nickname) || STRINGS.LABELS.USER_NO_NAME,\n      sentDate: STRINGS.GROUP_CHANNEL.MESSAGE_BUBBLE_TIME(message),\n      fileName: message.isFileMessage() ? STRINGS.GROUP_CHANNEL.MESSAGE_BUBBLE_FILE_TITLE(message) : '',\n      unknownTitle: STRINGS.GROUP_CHANNEL.MESSAGE_BUBBLE_UNKNOWN_TITLE(message),\n      unknownDescription: STRINGS.GROUP_CHANNEL.MESSAGE_BUBBLE_UNKNOWN_DESC(message),\n    },\n  };\n\n  const userMessageProps: {\n    renderRegexTextChildren: (message: SendbirdUserMessage) => string;\n    regexTextPatterns: RegexTextPattern[];\n  } = {\n    renderRegexTextChildren: (message) => {\n      if (\n        mentionManager.shouldUseMentionedMessageTemplate(message, sbOptions.uikit.groupChannel.channel.enableMention)\n      ) {\n        return message.mentionedMessageTemplate;\n      } else {\n        return message.message;\n      }\n    },\n    regexTextPatterns: [\n      {\n        regex: mentionManager.templateRegex,\n        replacer({ match, groups, parentProps, index, keyPrefix }) {\n          const user = message.mentionedUsers?.find((it) => it.userId === groups[2]);\n          if (user) {\n            const mentionColor =\n              !isMyMessage(message, currentUser?.userId) && user.userId === currentUser?.userId\n                ? palette.onBackgroundLight01\n                : parentProps?.color;\n\n            return (\n              <Text\n                {...parentProps}\n                key={`${keyPrefix}-${index}`}\n                color={mentionColor}\n                onPress={() => messageProps.onPressMentionedUser?.(user)}\n                onLongPress={messageProps.onLongPress}\n                style={[\n                  parentProps?.style,\n                  { fontWeight: '700' },\n                  user.userId === currentUser?.userId && { backgroundColor: palette.highlight },\n                ]}\n              >\n                {`${mentionManager.asMentionedMessageText(user)}`}\n              </Text>\n            );\n          }\n          return match;\n        },\n      },\n    ],\n  };\n\n  const renderMessage = () => {\n    switch (getMessageType(message)) {\n      case 'admin': {\n        return <GroupChannelMessage.Admin message={message as SendbirdAdminMessage} {...messageProps} />;\n      }\n      case 'user':\n      case 'user.opengraph': {\n        if (message.ogMetaData && sbOptions.uikitWithAppInfo.groupChannel.channel.enableOgtag) {\n          return (\n            <GroupChannelMessage.OpenGraphUser\n              message={message as SendbirdUserMessage}\n              {...userMessageProps}\n              {...messageProps}\n            />\n          );\n        } else {\n          return (\n            <GroupChannelMessage.User\n              message={message as SendbirdUserMessage}\n              {...userMessageProps}\n              {...messageProps}\n            />\n          );\n        }\n      }\n      case 'file':\n      case 'file.audio': {\n        return <GroupChannelMessage.File message={message as SendbirdFileMessage} {...messageProps} />;\n      }\n      case 'file.image': {\n        return <GroupChannelMessage.ImageFile message={message as SendbirdFileMessage} {...messageProps} />;\n      }\n      case 'file.video': {\n        return (\n          <GroupChannelMessage.VideoFile\n            message={message as SendbirdFileMessage}\n            fetchThumbnailFromVideoSource={(uri) => mediaService.getVideoThumbnail({ url: uri, timeMills: 1000 })}\n            {...messageProps}\n          />\n        );\n      }\n      case 'file.voice': {\n        return (\n          <GroupChannelMessage.VoiceFile\n            message={message as SendbirdFileMessage}\n            durationMetaArrayKey={VOICE_MESSAGE_META_ARRAY_DURATION_KEY}\n            onUnmount={() => {\n              if (isVoiceMessage(message) && playerService.uri === message.url) {\n                resetPlayer();\n              }\n            }}\n            {...messageProps}\n          />\n        );\n      }\n      case 'unknown':\n      default: {\n        return <GroupChannelMessage.Unknown message={message} {...messageProps} />;\n      }\n    }\n  };\n\n  const messageGap = useIIFE(() => {\n    if (message.isAdminMessage()) {\n      if (nextMessage?.isAdminMessage()) {\n        return 8;\n      } else {\n        return 16;\n      }\n    } else if (nextMessage && shouldRenderParentMessage(nextMessage)) {\n      return 16;\n    } else if (groupWithNext) {\n      return 2;\n    } else {\n      return 16;\n    }\n  });\n\n  return (\n    <Box paddingHorizontal={16} marginBottom={messageGap}>\n      <GroupChannelMessageDateSeparator message={message} prevMessage={prevMessage} />\n      <GroupChannelMessageFocusAnimation focused={focused}>{renderMessage()}</GroupChannelMessageFocusAnimation>\n    </Box>\n  );\n};\n\nexport const GroupChannelTypingIndicatorBubble = () => {\n  const { sbOptions } = useSendbirdChat();\n  const { publish } = useContext(GroupChannelContexts.PubSub);\n  const { typingUsers } = useContext(GroupChannelContexts.TypingIndicator);\n\n  const shouldRenderBubble = useIIFE(() => {\n    if (typingUsers.length === 0) return false;\n    if (!sbOptions.uikit.groupChannel.channel.enableTypingIndicator) return false;\n    if (!sbOptions.uikit.groupChannel.channel.typingIndicatorTypes.has(TypingIndicatorType.Bubble)) return false;\n    return true;\n  });\n\n  useEffect(() => {\n    if (shouldRenderBubble) publish({ type: 'TYPING_BUBBLE_RENDERED' });\n  }, [shouldRenderBubble]);\n\n  if (!shouldRenderBubble) return null;\n  return (\n    <Box paddingHorizontal={16} marginTop={4} marginBottom={16}>\n      <TypingIndicatorBubble typingUsers={typingUsers} />\n    </Box>\n  );\n};\n\nexport default React.memo(GroupChannelMessageRenderer);\n"],"mappings":"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"}