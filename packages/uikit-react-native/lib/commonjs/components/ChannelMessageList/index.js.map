{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_reactNativeSafeAreaContext","_uikitReactNativeFoundation","_uikitUtils","_useContext","_SBUUtils","_ChatFlatList","_ReactionAddons","obj","__esModule","default","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","ChannelMessageList","_ref","ref","searchItem","hasNext","channel","onEditMessage","onReplyMessage","onDeleteMessage","onResendFailedMessage","onPressMediaMessage","onPressParentMessage","currentUserId","renderNewMessagesButton","renderScrollToBottomButton","renderMessage","messages","newMessages","enableMessageGrouping","onScrolledAwayFromBottom","scrolledAwayFromBottom","onBottomReached","onTopReached","flatListProps","onPressNewMessagesButton","onPressScrollToBottomButton","STRINGS","useLocalization","colors","useUIKitTheme","show","useUserProfile","left","right","useSafeAreaInsets","createMessagePressActions","useCreateMessagePressActions","safeAreaLayout","paddingLeft","paddingRight","renderItem","useFreshCallback","_ref2","item","index","onPress","onLongPress","bottomSheetItem","message","prevMessage","nextMessage","onShowUserProfile","focused","startingPoint","createdAt","isFirstItem","createElement","View","style","flex","backgroundColor","background","isFrozen","ChannelFrozenBanner","styles","frozenBanner","text","LABELS","CHANNEL_MESSAGE_LIST_FROZEN","data","keyExtractor","messageKeyExtractor","contentContainerStyle","frozenListPadding","newMsgButton","visible","scrollButton","_ref3","toast","useToast","openSheet","useBottomSheet","alert","useAlert","clipboardService","fileService","usePlatformService","sbOptions","useSendbirdChat","onResendFailure","error","TOAST","RESEND_MSG_ERROR","Logger","onDeleteFailure","DELETE_MSG_ERROR","onCopyText","isUserMessage","setString","COPY_OK","onDownloadFile","isFileMessage","toMegabyte","size","DOWNLOAD_START","save","fileUrl","url","fileName","name","fileType","type","then","response","DOWNLOAD_OK","log","catch","err","DOWNLOAD_ERROR","onOpenFile","getFileType","getFileExtension","includes","getAvailableUriFromFileMessage","SBUUtils","openURL","openSheetForFailedMessage","sheetItems","title","CHANNEL_MESSAGE_FAILED_RETRY","CHANNEL_MESSAGE_FAILED_REMOVE","titleColor","ui","dialog","none","destructive","alertForMessageDelete","CHANNEL_MESSAGE_DELETE_CONFIRM_TITLE","buttons","CHANNEL_MESSAGE_DELETE_CONFIRM_CANCEL","CHANNEL_MESSAGE_DELETE_CONFIRM_OK","_ref4","menu","copy","icon","CHANNEL_MESSAGE_COPY","edit","CHANNEL_MESSAGE_EDIT","delete","disabled","threadInfo","replyCount","undefined","CHANNEL_MESSAGE_DELETE","reply","Boolean","parentMessageId","CHANNEL_MESSAGE_REPLY","download","CHANNEL_MESSAGE_SAVE","push","isEphemeral","isMyMessage","sendingStatus","isGroupChannel","uikit","groupChannel","replyType","isVoiceMessage","configs","uikitWithAppInfo","HeaderComponent","shouldRenderReaction","isSuper","enableReactionsSupergroup","enableReactions","_ref5","onClose","ReactionAddons","BottomSheet","createStyleSheet","position","zIndex","top","paddingBottom","bottom","alignSelf","_default","React","forwardRef","exports"],"sources":["index.tsx"],"sourcesContent":["import React, { Ref } from 'react';\nimport { FlatList, FlatListProps, ListRenderItem, View } from 'react-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport {\n  BottomSheetItem,\n  ChannelFrozenBanner,\n  createStyleSheet,\n  useAlert,\n  useBottomSheet,\n  useToast,\n  useUIKitTheme,\n} from '@sendbird/uikit-react-native-foundation';\nimport {\n  Logger,\n  SendbirdFileMessage,\n  SendbirdGroupChannel,\n  SendbirdMessage,\n  SendbirdOpenChannel,\n  SendbirdUserMessage,\n  getAvailableUriFromFileMessage,\n  getFileExtension,\n  getFileType,\n  isMyMessage,\n  isVoiceMessage,\n  messageKeyExtractor,\n  shouldRenderReaction,\n  toMegabyte,\n  useFreshCallback,\n} from '@sendbird/uikit-utils';\n\nimport type { UserProfileContextType } from '../../contexts/UserProfileCtx';\nimport { useLocalization, usePlatformService, useSendbirdChat, useUserProfile } from '../../hooks/useContext';\nimport SBUUtils from '../../libs/SBUUtils';\nimport ChatFlatList from '../ChatFlatList';\nimport { ReactionAddons } from '../ReactionAddons';\n\ntype PressActions = { onPress?: () => void; onLongPress?: () => void; bottomSheetItem?: BottomSheetItem };\ntype HandleableMessage = SendbirdUserMessage | SendbirdFileMessage;\ntype CreateMessagePressActions = (params: { message: SendbirdMessage }) => PressActions;\nexport type ChannelMessageListProps<T extends SendbirdGroupChannel | SendbirdOpenChannel> = {\n  enableMessageGrouping: boolean;\n  currentUserId?: string;\n  channel: T;\n  messages: SendbirdMessage[];\n  newMessages: SendbirdMessage[];\n  searchItem?: { startingPoint: number };\n\n  scrolledAwayFromBottom: boolean;\n  onScrolledAwayFromBottom: (value: boolean) => void;\n  onTopReached: () => void;\n  onBottomReached: () => void;\n  hasNext: () => boolean;\n\n  onPressNewMessagesButton: (animated?: boolean) => void;\n  onPressScrollToBottomButton: (animated?: boolean) => void;\n\n  onEditMessage: (message: HandleableMessage) => void;\n  onReplyMessage?: (message: HandleableMessage) => void; // only available on group channel\n  onDeleteMessage: (message: HandleableMessage) => Promise<void>;\n  onResendFailedMessage: (failedMessage: HandleableMessage) => Promise<HandleableMessage | void>;\n  onPressParentMessage?: (parentMessage: SendbirdMessage) => void;\n  onPressMediaMessage?: (message: SendbirdFileMessage, deleteMessage: () => Promise<void>, uri: string) => void;\n\n  renderMessage: (props: {\n    focused: boolean;\n    message: SendbirdMessage;\n    prevMessage?: SendbirdMessage;\n    nextMessage?: SendbirdMessage;\n    onPress?: () => void;\n    onLongPress?: () => void;\n    onPressParentMessage?: ChannelMessageListProps<T>['onPressParentMessage'];\n    onShowUserProfile?: UserProfileContextType['show'];\n    channel: T;\n    currentUserId?: ChannelMessageListProps<T>['currentUserId'];\n    enableMessageGrouping: ChannelMessageListProps<T>['enableMessageGrouping'];\n    bottomSheetItem?: BottomSheetItem;\n    isFirstItem: boolean;\n  }) => React.ReactElement | null;\n  renderNewMessagesButton:\n    | null\n    | ((props: { visible: boolean; onPress: () => void; newMessages: SendbirdMessage[] }) => React.ReactElement | null);\n  renderScrollToBottomButton: null | ((props: { visible: boolean; onPress: () => void }) => React.ReactElement | null);\n  flatListProps?: Omit<FlatListProps<SendbirdMessage>, 'data' | 'renderItem'>;\n} & {\n  ref?: Ref<FlatList<SendbirdMessage>> | undefined;\n};\n\nconst ChannelMessageList = <T extends SendbirdGroupChannel | SendbirdOpenChannel>(\n  {\n    searchItem,\n    hasNext,\n    channel,\n    onEditMessage,\n    onReplyMessage,\n    onDeleteMessage,\n    onResendFailedMessage,\n    onPressMediaMessage,\n    onPressParentMessage,\n    currentUserId,\n    renderNewMessagesButton,\n    renderScrollToBottomButton,\n    renderMessage,\n    messages,\n    newMessages,\n    enableMessageGrouping,\n    onScrolledAwayFromBottom,\n    scrolledAwayFromBottom,\n    onBottomReached,\n    onTopReached,\n    flatListProps,\n    onPressNewMessagesButton,\n    onPressScrollToBottomButton,\n  }: ChannelMessageListProps<T>,\n  ref: React.ForwardedRef<FlatList<SendbirdMessage>>,\n) => {\n  const { STRINGS } = useLocalization();\n  const { colors } = useUIKitTheme();\n  const { show } = useUserProfile();\n  const { left, right } = useSafeAreaInsets();\n  const createMessagePressActions = useCreateMessagePressActions({\n    channel,\n    currentUserId,\n    onEditMessage,\n    onReplyMessage,\n    onDeleteMessage,\n    onResendFailedMessage,\n    onPressMediaMessage,\n  });\n\n  const safeAreaLayout = { paddingLeft: left, paddingRight: right };\n\n  const renderItem: ListRenderItem<SendbirdMessage> = useFreshCallback(({ item, index }) => {\n    const { onPress, onLongPress, bottomSheetItem } = createMessagePressActions({ message: item });\n    return renderMessage({\n      message: item,\n      prevMessage: messages[index + 1],\n      nextMessage: messages[index - 1],\n      onPress,\n      onLongPress,\n      onPressParentMessage,\n      onShowUserProfile: show,\n      enableMessageGrouping,\n      channel,\n      currentUserId,\n      focused: (searchItem?.startingPoint ?? -1) === item.createdAt,\n      bottomSheetItem,\n      isFirstItem: index === 0,\n    });\n  });\n\n  return (\n    <View style={[{ flex: 1, backgroundColor: colors.background }, safeAreaLayout]}>\n      {channel.isFrozen && (\n        <ChannelFrozenBanner style={styles.frozenBanner} text={STRINGS.LABELS.CHANNEL_MESSAGE_LIST_FROZEN} />\n      )}\n      <ChatFlatList\n        {...flatListProps}\n        onTopReached={onTopReached}\n        onBottomReached={onBottomReached}\n        onScrolledAwayFromBottom={onScrolledAwayFromBottom}\n        ref={ref}\n        data={messages}\n        renderItem={renderItem}\n        keyExtractor={messageKeyExtractor}\n        contentContainerStyle={[\n          // { minHeight: '100%', justifyContent: 'flex-end' },\n          channel.isFrozen && styles.frozenListPadding,\n          flatListProps?.contentContainerStyle,\n        ]}\n      />\n      {renderNewMessagesButton && (\n        <View style={[styles.newMsgButton, safeAreaLayout]}>\n          {renderNewMessagesButton({\n            visible: newMessages.length > 0 && (hasNext() || scrolledAwayFromBottom),\n            onPress: () => onPressNewMessagesButton(),\n            newMessages,\n          })}\n        </View>\n      )}\n      {renderScrollToBottomButton && (\n        <View style={[styles.scrollButton, safeAreaLayout]}>\n          {renderScrollToBottomButton({\n            visible: hasNext() || scrolledAwayFromBottom,\n            onPress: () => onPressScrollToBottomButton(),\n          })}\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst useCreateMessagePressActions = <T extends SendbirdGroupChannel | SendbirdOpenChannel>({\n  channel,\n  currentUserId,\n  onResendFailedMessage,\n  onEditMessage,\n  onReplyMessage,\n  onDeleteMessage,\n  onPressMediaMessage,\n}: Pick<\n  ChannelMessageListProps<T>,\n  | 'channel'\n  | 'currentUserId'\n  | 'onEditMessage'\n  | 'onReplyMessage'\n  | 'onDeleteMessage'\n  | 'onResendFailedMessage'\n  | 'onPressMediaMessage'\n>): CreateMessagePressActions => {\n  const { colors } = useUIKitTheme();\n  const { STRINGS } = useLocalization();\n  const toast = useToast();\n  const { openSheet } = useBottomSheet();\n  const { alert } = useAlert();\n  const { clipboardService, fileService } = usePlatformService();\n  const { sbOptions } = useSendbirdChat();\n\n  const onResendFailure = (error: Error) => {\n    toast.show(STRINGS.TOAST.RESEND_MSG_ERROR, 'error');\n    Logger.error(STRINGS.TOAST.RESEND_MSG_ERROR, error);\n  };\n\n  const onDeleteFailure = (error: Error) => {\n    toast.show(STRINGS.TOAST.DELETE_MSG_ERROR, 'error');\n    Logger.error(STRINGS.TOAST.DELETE_MSG_ERROR, error);\n  };\n\n  const onCopyText = (message: HandleableMessage) => {\n    if (message.isUserMessage()) {\n      clipboardService.setString(message.message || '');\n      toast.show(STRINGS.TOAST.COPY_OK, 'success');\n    }\n  };\n\n  const onDownloadFile = (message: HandleableMessage) => {\n    if (message.isFileMessage()) {\n      if (toMegabyte(message.size) > 4) {\n        toast.show(STRINGS.TOAST.DOWNLOAD_START, 'success');\n      }\n\n      fileService\n        .save({ fileUrl: message.url, fileName: message.name, fileType: message.type })\n        .then((response) => {\n          toast.show(STRINGS.TOAST.DOWNLOAD_OK, 'success');\n          Logger.log('File saved to', response);\n        })\n        .catch((err) => {\n          toast.show(STRINGS.TOAST.DOWNLOAD_ERROR, 'error');\n          Logger.log('File save failure', err);\n        });\n    }\n  };\n\n  const onOpenFile = (message: HandleableMessage) => {\n    if (message.isFileMessage()) {\n      const fileType = getFileType(message.type || getFileExtension(message.name));\n      if (['image', 'video', 'audio'].includes(fileType)) {\n        onPressMediaMessage?.(message, () => onDeleteMessage(message), getAvailableUriFromFileMessage(message));\n      } else {\n        SBUUtils.openURL(message.url);\n      }\n    }\n  };\n\n  const openSheetForFailedMessage = (message: HandleableMessage) => {\n    openSheet({\n      sheetItems: [\n        {\n          title: STRINGS.LABELS.CHANNEL_MESSAGE_FAILED_RETRY,\n          onPress: () => onResendFailedMessage(message).catch(onResendFailure),\n        },\n        {\n          title: STRINGS.LABELS.CHANNEL_MESSAGE_FAILED_REMOVE,\n          titleColor: colors.ui.dialog.default.none.destructive,\n          onPress: () => alertForMessageDelete(message),\n        },\n      ],\n    });\n  };\n\n  const alertForMessageDelete = (message: HandleableMessage) => {\n    alert({\n      title: STRINGS.LABELS.CHANNEL_MESSAGE_DELETE_CONFIRM_TITLE,\n      buttons: [\n        { text: STRINGS.LABELS.CHANNEL_MESSAGE_DELETE_CONFIRM_CANCEL },\n        {\n          text: STRINGS.LABELS.CHANNEL_MESSAGE_DELETE_CONFIRM_OK,\n          style: 'destructive',\n          onPress: () => {\n            onDeleteMessage(message).catch(onDeleteFailure);\n          },\n        },\n      ],\n    });\n  };\n\n  return ({ message }) => {\n    if (!message.isUserMessage() && !message.isFileMessage()) return {};\n\n    const sheetItems: BottomSheetItem['sheetItems'] = [];\n    const menu = {\n      copy: (message: HandleableMessage) => ({\n        icon: 'copy' as const,\n        title: STRINGS.LABELS.CHANNEL_MESSAGE_COPY,\n        onPress: () => onCopyText(message),\n      }),\n      edit: (message: HandleableMessage) => ({\n        icon: 'edit' as const,\n        title: STRINGS.LABELS.CHANNEL_MESSAGE_EDIT,\n        onPress: () => onEditMessage(message),\n      }),\n      delete: (message: HandleableMessage) => ({\n        disabled: message.threadInfo ? message.threadInfo.replyCount > 0 : undefined,\n        icon: 'delete' as const,\n        title: STRINGS.LABELS.CHANNEL_MESSAGE_DELETE,\n        onPress: () => alertForMessageDelete(message),\n      }),\n      reply: (message: HandleableMessage) => ({\n        disabled: Boolean(message.parentMessageId),\n        icon: 'reply' as const,\n        title: STRINGS.LABELS.CHANNEL_MESSAGE_REPLY,\n        onPress: () => onReplyMessage?.(message),\n      }),\n      download: (message: HandleableMessage) => ({\n        icon: 'download' as const,\n        title: STRINGS.LABELS.CHANNEL_MESSAGE_SAVE,\n        onPress: () => onDownloadFile(message),\n      }),\n    };\n\n    if (message.isUserMessage()) {\n      sheetItems.push(menu.copy(message));\n      if (!channel.isEphemeral) {\n        if (isMyMessage(message, currentUserId) && message.sendingStatus === 'succeeded') {\n          sheetItems.push(menu.edit(message));\n          sheetItems.push(menu.delete(message));\n        }\n        if (channel.isGroupChannel() && sbOptions.uikit.groupChannel.channel.replyType === 'quote_reply') {\n          sheetItems.push(menu.reply(message));\n        }\n      }\n    }\n\n    if (message.isFileMessage()) {\n      if (!isVoiceMessage(message)) {\n        sheetItems.push(menu.download(message));\n      }\n      if (!channel.isEphemeral) {\n        if (isMyMessage(message, currentUserId) && message.sendingStatus === 'succeeded') {\n          sheetItems.push(menu.delete(message));\n        }\n        if (channel.isGroupChannel() && sbOptions.uikit.groupChannel.channel.replyType === 'quote_reply') {\n          sheetItems.push(menu.reply(message));\n        }\n      }\n    }\n\n    const configs = sbOptions.uikitWithAppInfo.groupChannel.channel;\n    const bottomSheetItem: BottomSheetItem = {\n      sheetItems,\n      HeaderComponent: shouldRenderReaction(\n        channel,\n        channel.isGroupChannel() && (channel.isSuper ? configs.enableReactionsSupergroup : configs.enableReactions),\n      )\n        ? ({ onClose }) => <ReactionAddons.BottomSheet message={message} channel={channel} onClose={onClose} />\n        : undefined,\n    };\n\n    switch (true) {\n      case message.sendingStatus === 'pending': {\n        return {\n          onPress: undefined,\n          onLongPress: undefined,\n          bottomSheetItem: undefined,\n        };\n      }\n\n      case message.sendingStatus === 'failed': {\n        return {\n          onPress: () => onResendFailedMessage(message).catch(onResendFailure),\n          onLongPress: () => openSheetForFailedMessage(message),\n          bottomSheetItem,\n        };\n      }\n\n      case message.isFileMessage(): {\n        return {\n          onPress: () => onOpenFile(message),\n          onLongPress: () => openSheet(bottomSheetItem),\n          bottomSheetItem,\n        };\n      }\n\n      default: {\n        return {\n          onPress: undefined,\n          onLongPress: () => openSheet(bottomSheetItem),\n          bottomSheetItem,\n        };\n      }\n    }\n  };\n};\n\nconst styles = createStyleSheet({\n  frozenBanner: {\n    position: 'absolute',\n    zIndex: 999,\n    top: 8,\n    left: 8,\n    right: 8,\n  },\n  frozenListPadding: {\n    paddingBottom: 32,\n  },\n  newMsgButton: {\n    position: 'absolute',\n    zIndex: 999,\n    bottom: 10,\n    alignSelf: 'center',\n  },\n  scrollButton: {\n    position: 'absolute',\n    zIndex: 998,\n    bottom: 10,\n    right: 16,\n  },\n});\n\n// NOTE: Due to Generic inference is not working on forwardRef, we need to cast it as typeof ChannelMessageList and implicit `ref` prop\nexport default React.forwardRef(ChannelMessageList) as typeof ChannelMessageList;\n"],"mappings":"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"}