{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_uikitReactNativeFoundation","_useContext","obj","__esModule","default","NewMessagesButton","_ref","newMessages","visible","onPress","STRINGS","useLocalization","select","palette","colors","useUIKitTheme","length","createElement","TouchableOpacity","activeOpacity","style","styles","container","backgroundColor","dark","background400","light","background50","Text","button","color","primary","GROUP_CHANNEL","LIST_BUTTON_NEW_MSG","createStyleSheet","paddingHorizontal","paddingVertical","borderRadius","Platform","android","elevation","ios","shadowColor","shadowRadius","shadowOffset","width","height","shadowOpacity","_default","React","memo","exports"],"sources":["NewMessagesButton.tsx"],"sourcesContent":["import React from 'react';\nimport { Platform, TouchableOpacity } from 'react-native';\n\nimport { Text, createStyleSheet, useUIKitTheme } from '@sendbird/uikit-react-native-foundation';\nimport type { SendbirdMessage } from '@sendbird/uikit-utils';\n\nimport { useLocalization } from '../hooks/useContext';\n\ntype Props = {\n  newMessages: SendbirdMessage[];\n  visible: boolean;\n  onPress: () => void;\n};\nconst NewMessagesButton = ({ newMessages, visible, onPress }: Props) => {\n  const { STRINGS } = useLocalization();\n  const { select, palette, colors } = useUIKitTheme();\n  if (newMessages.length === 0 || !visible) return null;\n  return (\n    <TouchableOpacity\n      activeOpacity={0.8}\n      onPress={onPress}\n      style={[\n        styles.container,\n        { backgroundColor: select({ dark: palette.background400, light: palette.background50 }) },\n      ]}\n    >\n      <Text button color={colors.primary}>\n        {STRINGS.GROUP_CHANNEL.LIST_BUTTON_NEW_MSG(newMessages)}\n      </Text>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = createStyleSheet({\n  container: {\n    paddingHorizontal: 12,\n    paddingVertical: 10,\n    borderRadius: 20,\n    ...Platform.select({\n      android: {\n        elevation: 4,\n      },\n      ios: {\n        shadowColor: 'black',\n        shadowRadius: 4,\n        shadowOffset: { width: 0, height: 4 },\n        shadowOpacity: 0.3,\n      },\n    }),\n  },\n});\nexport default React.memo(NewMessagesButton);\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AAEA,IAAAE,2BAAA,GAAAF,OAAA;AAGA,IAAAG,WAAA,GAAAH,OAAA;AAAsD,SAAAD,uBAAAK,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAOtD,MAAMG,iBAAiB,GAAGC,IAAA,IAA8C;EAAA,IAA7C;IAAEC,WAAW;IAAEC,OAAO;IAAEC;EAAe,CAAC,GAAAH,IAAA;EACjE,MAAM;IAAEI;EAAQ,CAAC,GAAG,IAAAC,2BAAe,GAAE;EACrC,MAAM;IAAEC,MAAM;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAG,IAAAC,yCAAa,GAAE;EACnD,IAAIR,WAAW,CAACS,MAAM,KAAK,CAAC,IAAI,CAACR,OAAO,EAAE,OAAO,IAAI;EACrD,oBACEZ,MAAA,CAAAQ,OAAA,CAAAa,aAAA,CAAClB,YAAA,CAAAmB,gBAAgB;IACfC,aAAa,EAAE,GAAI;IACnBV,OAAO,EAAEA,OAAQ;IACjBW,KAAK,EAAE,CACLC,MAAM,CAACC,SAAS,EAChB;MAAEC,eAAe,EAAEX,MAAM,CAAC;QAAEY,IAAI,EAAEX,OAAO,CAACY,aAAa;QAAEC,KAAK,EAAEb,OAAO,CAACc;MAAa,CAAC;IAAE,CAAC;EACzF,gBAEF/B,MAAA,CAAAQ,OAAA,CAAAa,aAAA,CAACjB,2BAAA,CAAA4B,IAAI;IAACC,MAAM;IAACC,KAAK,EAAEhB,MAAM,CAACiB;EAAQ,GAChCrB,OAAO,CAACsB,aAAa,CAACC,mBAAmB,CAAC1B,WAAW,CAAC,CAClD,CACU;AAEvB,CAAC;AAED,MAAMc,MAAM,GAAG,IAAAa,4CAAgB,EAAC;EAC9BZ,SAAS,EAAE;IACTa,iBAAiB,EAAE,EAAE;IACrBC,eAAe,EAAE,EAAE;IACnBC,YAAY,EAAE,EAAE;IAChB,GAAGC,qBAAQ,CAAC1B,MAAM,CAAC;MACjB2B,OAAO,EAAE;QACPC,SAAS,EAAE;MACb,CAAC;MACDC,GAAG,EAAE;QACHC,WAAW,EAAE,OAAO;QACpBC,YAAY,EAAE,CAAC;QACfC,YAAY,EAAE;UAAEC,KAAK,EAAE,CAAC;UAAEC,MAAM,EAAE;QAAE,CAAC;QACrCC,aAAa,EAAE;MACjB;IACF,CAAC;EACH;AACF,CAAC,CAAC;AAAC,IAAAC,QAAA,gBACYC,cAAK,CAACC,IAAI,CAAC7C,iBAAiB,CAAC;AAAA8C,OAAA,CAAA/C,OAAA,GAAA4C,QAAA"}