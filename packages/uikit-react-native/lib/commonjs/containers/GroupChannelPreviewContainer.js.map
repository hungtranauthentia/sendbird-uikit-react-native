{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_uikitChatHooks","_uikitReactNativeFoundation","_uikitUtils","_ChannelCover","_interopRequireDefault","_constants","_useContext","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","GroupChannelPreviewContainer","_ref","onPress","onLongPress","channel","currentUser","sdk","sbOptions","mentionManager","useSendbirdChat","STRINGS","useLocalization","colors","useUIKitTheme","typingUsers","setTypingUsers","useState","handlerId","useUniqHandlerId","useChannelHandler","onTypingStatusUpdated","eventChannel","isDifferentChannel","uikit","groupChannel","channelList","enableTypingIndicator","getTypingUsers","outgoingStatus","useMessageOutgoingStatus","lastMessage","bodyText","useIIFE","length","LABELS","TYPING_INDICATOR_TYPINGS","GROUP_CHANNEL_LIST","CHANNEL_PREVIEW_BODY","fileType","_channel$lastMessage","isFileMessage","undefined","isVoiceMessage","getFileTypeFromMessage","titleCaptionIcon","isEphemeral","enableMessageReceiptStatus","isMyMessage","userId","createElement","LoadingSpinner","size","style","styles","Icon","icon","color","error","onBackground03","containerStyle","secondary","unreadMessageCount","Pressable","delayLongPress","DEFAULT_LONG_PRESS_DELAY","GroupChannelPreview","customCover","coverUrl","title","CHANNEL_PREVIEW_TITLE","titleCaptionLeft","titleCaption","CHANNEL_PREVIEW_TITLE_CAPTION","body","bodyIcon","getFileIconFromMessageType","convertFileTypeToMessageType","badgeCount","mentioned","unreadMentionCount","mentionTrigger","config","trigger","memberCount","frozen","isFrozen","broadcast","isBroadcast","notificationOff","myPushTriggerOption","createStyleSheet","marginRight","broadcastCover","padding","borderRadius","_default","exports"],"sources":["GroupChannelPreviewContainer.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Pressable } from 'react-native';\n\nimport { useChannelHandler, useMessageOutgoingStatus } from '@sendbird/uikit-chat-hooks';\nimport {\n  GroupChannelPreview,\n  Icon,\n  LoadingSpinner,\n  createStyleSheet,\n  useUIKitTheme,\n} from '@sendbird/uikit-react-native-foundation';\nimport {\n  SendbirdGroupChannel,\n  SendbirdUser,\n  convertFileTypeToMessageType,\n  getFileIconFromMessageType,\n  getFileTypeFromMessage,\n  isDifferentChannel,\n  isMyMessage,\n  isVoiceMessage,\n  useIIFE,\n  useUniqHandlerId,\n} from '@sendbird/uikit-utils';\n\nimport ChannelCover from '../components/ChannelCover';\nimport { DEFAULT_LONG_PRESS_DELAY } from '../constants';\nimport { useLocalization, useSendbirdChat } from '../hooks/useContext';\n\ntype Props = {\n  channel: SendbirdGroupChannel;\n  onPress: () => void;\n  onLongPress: () => void;\n};\nconst GroupChannelPreviewContainer = ({ onPress, onLongPress, channel }: Props) => {\n  const { currentUser, sdk, sbOptions, mentionManager } = useSendbirdChat();\n  const { STRINGS } = useLocalization();\n  const { colors } = useUIKitTheme();\n\n  const [typingUsers, setTypingUsers] = useState<SendbirdUser[]>([]);\n\n  const handlerId = useUniqHandlerId('GroupChannelPreviewContainer_TypingIndicator');\n  useChannelHandler(sdk, handlerId, {\n    onTypingStatusUpdated(eventChannel) {\n      if (isDifferentChannel(channel, eventChannel)) return;\n      if (!sbOptions.uikit.groupChannel.channelList.enableTypingIndicator) return;\n      setTypingUsers(eventChannel.getTypingUsers());\n    },\n  });\n\n  const outgoingStatus = useMessageOutgoingStatus(sdk, channel, channel.lastMessage);\n\n  const bodyText = useIIFE(() => {\n    if (typingUsers.length > 0) return STRINGS.LABELS.TYPING_INDICATOR_TYPINGS(typingUsers) || '';\n    else return STRINGS.GROUP_CHANNEL_LIST.CHANNEL_PREVIEW_BODY(channel);\n  });\n\n  const fileType = useIIFE(() => {\n    if (!channel.lastMessage?.isFileMessage()) return undefined;\n    if (typingUsers.length > 0) return undefined;\n    if (isVoiceMessage(channel.lastMessage)) return undefined;\n    return getFileTypeFromMessage(channel.lastMessage);\n  });\n\n  const titleCaptionIcon = useIIFE(() => {\n    if (!channel.lastMessage || channel.isEphemeral) return undefined;\n    if (!sbOptions.uikit.groupChannel.channelList.enableMessageReceiptStatus) return undefined;\n    if (!isMyMessage(channel.lastMessage, currentUser?.userId)) return undefined;\n\n    if (outgoingStatus === 'PENDING') {\n      return <LoadingSpinner size={16} style={styles.titleCaptionIcon} />;\n    }\n\n    if (outgoingStatus === 'FAILED') {\n      return <Icon icon={'error'} size={16} color={colors.error} style={styles.titleCaptionIcon} />;\n    }\n\n    if (outgoingStatus === 'UNDELIVERED') {\n      return <Icon icon={'done'} size={16} color={colors.onBackground03} containerStyle={styles.titleCaptionIcon} />;\n    }\n\n    if (outgoingStatus === 'DELIVERED' || outgoingStatus === 'UNREAD') {\n      return <Icon icon={'done-all'} size={16} color={colors.onBackground03} style={styles.titleCaptionIcon} />;\n    }\n\n    if (outgoingStatus === 'READ') {\n      return <Icon icon={'done-all'} size={16} color={colors.secondary} style={styles.titleCaptionIcon} />;\n    }\n\n    return undefined;\n  });\n\n  const unreadMessageCount = useIIFE(() => (channel.isEphemeral ? 0 : channel.unreadMessageCount));\n\n  return (\n    <Pressable delayLongPress={DEFAULT_LONG_PRESS_DELAY} onPress={onPress} onLongPress={onLongPress}>\n      <GroupChannelPreview\n        customCover={<ChannelCover channel={channel} size={56} />}\n        coverUrl={channel.coverUrl}\n        title={STRINGS.GROUP_CHANNEL_LIST.CHANNEL_PREVIEW_TITLE(currentUser?.userId ?? '', channel)}\n        titleCaptionLeft={titleCaptionIcon}\n        titleCaption={STRINGS.GROUP_CHANNEL_LIST.CHANNEL_PREVIEW_TITLE_CAPTION(channel)}\n        body={bodyText}\n        bodyIcon={fileType && getFileIconFromMessageType(convertFileTypeToMessageType(fileType))}\n        badgeCount={unreadMessageCount}\n        mentioned={channel.unreadMentionCount > 0}\n        mentionTrigger={mentionManager.config.trigger}\n        memberCount={channel.memberCount > 2 ? channel.memberCount : undefined}\n        frozen={channel.isFrozen}\n        broadcast={channel.isBroadcast}\n        notificationOff={channel.myPushTriggerOption === 'off'}\n      />\n    </Pressable>\n  );\n};\n\nconst styles = createStyleSheet({\n  titleCaptionIcon: {\n    marginRight: 4,\n  },\n  broadcastCover: {\n    padding: 12,\n    borderRadius: 28,\n  },\n});\n\nexport default GroupChannelPreviewContainer;\n"],"mappings":"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"}