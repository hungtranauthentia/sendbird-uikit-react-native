{"version":3,"names":["_reactNative","require","_uikitUtils","_VoiceMessageConfig","_interopRequireDefault","_nativePermissionGranted","obj","__esModule","default","_defineProperty","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","createNativeRecorderService","_ref","audioRecorderModule","permissionModule","module","VoiceRecorder","constructor","minDuration","VoiceMessageConfig","DEFAULT","RECORDER","MIN_DURATION","maxDuration","MAX_DURATION","extension","EXTENSION","minWaitingTime","elapsedTime","Date","now","_recordStartedAt","Set","sampleRate","SAMPLE_RATE","bitRate","BIT_RATE","audioChannels","CHANNELS","Platform","select","android","AudioEncodingBitRateAndroid","audioSettings","AudioChannelsAndroid","AudioSamplingRateAndroid","AudioEncoderAndroid","AudioEncoderAndroidType","AAC","OutputFormatAndroid","OutputFormatAndroidType","MPEG_4","AudioSourceAndroid","AudioSourceAndroidType","VOICE_RECOGNITION","ios","AVEncoderBitRateKeyIOS","AVNumberOfChannelsKeyIOS","AVSampleRateKeyIOS","AVFormatIDKeyIOS","AVEncodingOption","mp4","AVEncoderAudioQualityKeyIOS","AVEncoderAudioQualityIOSType","high","state","stateSubscribers","forEach","callback","permission","PERMISSIONS","ANDROID","RECORD_AUDIO","IOS","MICROPHONE","windows","WINDOWS","OS","Version","push","WRITE_EXTERNAL_STORAGE","status","checkMultiple","nativePermissionGranted","requestMultiple","recordingSubscribers","add","delete","uri","matchesOneOf","setState","startRecorder","audioOptions","e","buffer","_getRecorderStopSafeBuffer","sleep","stopRecorder","stop","clear","setSubscriptionDuration","addRecordBackListener","data","completed","currentPosition","options","currentTime","_default","exports"],"sources":["createRecorderService.native.tsx"],"sourcesContent":["import { Platform } from 'react-native';\nimport * as RNAudioRecorder from 'react-native-audio-recorder-player';\nimport * as Permissions from 'react-native-permissions';\nimport { Permission } from 'react-native-permissions/src/types';\n\nimport { matchesOneOf, sleep } from '@sendbird/uikit-utils';\n\nimport VoiceMessageConfig from '../libs/VoiceMessageConfig';\nimport nativePermissionGranted from '../utils/nativePermissionGranted';\nimport type { RecorderServiceInterface, Unsubscribe } from './types';\n\ntype RecordingListener = Parameters<RecorderServiceInterface['addRecordingListener']>[number];\ntype StateListener = Parameters<RecorderServiceInterface['addStateListener']>[number];\ntype Modules = {\n  audioRecorderModule: typeof RNAudioRecorder;\n  permissionModule: typeof Permissions;\n};\nconst createNativeRecorderService = ({ audioRecorderModule, permissionModule }: Modules): RecorderServiceInterface => {\n  const module = new audioRecorderModule.default();\n\n  class VoiceRecorder implements RecorderServiceInterface {\n    public uri: RecorderServiceInterface['uri'] = undefined;\n    public state: RecorderServiceInterface['state'] = 'idle';\n    public options: RecorderServiceInterface['options'] = {\n      minDuration: VoiceMessageConfig.DEFAULT.RECORDER.MIN_DURATION,\n      maxDuration: VoiceMessageConfig.DEFAULT.RECORDER.MAX_DURATION,\n      extension: VoiceMessageConfig.DEFAULT.RECORDER.EXTENSION,\n    };\n\n    // NOTE: In Android, even when startRecorder() is awaited, if stop() is executed immediately afterward, an error occurs\n    private _recordStartedAt = 0;\n    private _getRecorderStopSafeBuffer = () => {\n      const minWaitingTime = 500;\n      const elapsedTime = Date.now() - this._recordStartedAt;\n      if (elapsedTime > minWaitingTime) return 0;\n      else return minWaitingTime - elapsedTime;\n    };\n\n    private readonly recordingSubscribers = new Set<RecordingListener>();\n    private readonly stateSubscribers = new Set<StateListener>();\n    private readonly audioSettings = {\n      sampleRate: VoiceMessageConfig.DEFAULT.RECORDER.SAMPLE_RATE,\n      bitRate: VoiceMessageConfig.DEFAULT.RECORDER.BIT_RATE,\n      audioChannels: VoiceMessageConfig.DEFAULT.RECORDER.CHANNELS,\n      // encoding: mpeg4_aac\n    };\n    private readonly audioOptions = Platform.select({\n      android: {\n        AudioEncodingBitRateAndroid: this.audioSettings.bitRate,\n        AudioChannelsAndroid: this.audioSettings.audioChannels,\n        AudioSamplingRateAndroid: this.audioSettings.sampleRate,\n        AudioEncoderAndroid: audioRecorderModule.AudioEncoderAndroidType.AAC,\n        OutputFormatAndroid: audioRecorderModule.OutputFormatAndroidType.MPEG_4,\n        AudioSourceAndroid: audioRecorderModule.AudioSourceAndroidType.VOICE_RECOGNITION,\n      },\n      ios: {\n        AVEncoderBitRateKeyIOS: this.audioSettings.bitRate,\n        AVNumberOfChannelsKeyIOS: this.audioSettings.audioChannels,\n        AVSampleRateKeyIOS: this.audioSettings.sampleRate,\n        AVFormatIDKeyIOS: audioRecorderModule.AVEncodingOption.mp4, // same with aac\n        AVEncoderAudioQualityKeyIOS: audioRecorderModule.AVEncoderAudioQualityIOSType.high,\n      },\n      default: {},\n    });\n\n    constructor() {\n      module.setSubscriptionDuration(0.1);\n      module.addRecordBackListener((data) => {\n        const completed = data.currentPosition >= this.options.maxDuration;\n\n        if (completed) this.stop();\n        if (this.state === 'recording') {\n          this.recordingSubscribers.forEach((callback) => {\n            callback({ currentTime: data.currentPosition, completed });\n          });\n        }\n      });\n    }\n\n    private setState = (state: RecorderServiceInterface['state']) => {\n      this.state = state;\n      this.stateSubscribers.forEach((callback) => {\n        callback(state);\n      });\n    };\n\n    public requestPermission = async (): Promise<boolean> => {\n      const permission: Permission[] | undefined = Platform.select({\n        android: [permissionModule.PERMISSIONS.ANDROID.RECORD_AUDIO],\n        ios: [permissionModule.PERMISSIONS.IOS.MICROPHONE],\n        windows: [permissionModule.PERMISSIONS.WINDOWS.MICROPHONE],\n        default: undefined,\n      });\n\n      if (Platform.OS === 'android' && Platform.Version <= 28) {\n        permission?.push(permissionModule.PERMISSIONS.ANDROID.WRITE_EXTERNAL_STORAGE);\n      }\n\n      if (permission) {\n        const status = await permissionModule.checkMultiple(permission);\n        if (nativePermissionGranted(status)) {\n          return true;\n        } else {\n          const status = await permissionModule.requestMultiple(permission);\n          return nativePermissionGranted(status);\n        }\n      } else {\n        return true;\n      }\n    };\n\n    public addRecordingListener = (callback: RecordingListener): Unsubscribe => {\n      this.recordingSubscribers.add(callback);\n      return () => {\n        this.recordingSubscribers.delete(callback);\n      };\n    };\n\n    public addStateListener = (callback: StateListener): Unsubscribe => {\n      this.stateSubscribers.add(callback);\n      return () => {\n        this.stateSubscribers.delete(callback);\n      };\n    };\n\n    public record = async (uri: string): Promise<void> => {\n      if (matchesOneOf(this.state, ['idle', 'completed'])) {\n        try {\n          this.setState('preparing');\n          await module.startRecorder(uri, {\n            ...this.audioOptions,\n          });\n\n          if (Platform.OS === 'android') {\n            this._recordStartedAt = Date.now();\n          }\n\n          this.uri = uri;\n          this.setState('recording');\n        } catch (e) {\n          this.setState('idle');\n          throw e;\n        }\n      }\n    };\n\n    public stop = async (): Promise<void> => {\n      if (matchesOneOf(this.state, ['recording'])) {\n        if (Platform.OS === 'android') {\n          const buffer = this._getRecorderStopSafeBuffer();\n          if (buffer > 0) await sleep(buffer);\n        }\n\n        await module.stopRecorder();\n        this.setState('completed');\n      }\n    };\n\n    public reset = async (): Promise<void> => {\n      await this.stop();\n      this.uri = undefined;\n      this.recordingSubscribers.clear();\n      this.setState('idle');\n    };\n  }\n\n  return new VoiceRecorder();\n};\n\nexport default createNativeRecorderService;\n"],"mappings":"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"}