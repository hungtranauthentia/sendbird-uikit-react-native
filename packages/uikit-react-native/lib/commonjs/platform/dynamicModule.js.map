{"version":3,"names":["_reactNative","require","_uikitUtils","checkLink","dmi","logLevel","nativeModule","isComponent","UIManager","getViewManagerConfig","nativeModuleNamespace","NativeModules","message","packageName","url","console","error","warn","SBUDynamicModuleRegistry","getPackage","e","SBUDynamicModule","register","mdi","getInfo","name","get","arguments","length","undefined","Logger","_default","exports","default"],"sources":["dynamicModule.ts"],"sourcesContent":["/* eslint-disable no-console */\nimport type * as RNCNetInfo from '@react-native-community/netinfo';\nimport { NativeModules, UIManager } from 'react-native';\n\nimport { Logger } from '@sendbird/uikit-utils';\n\nexport type SBUNativeModule = keyof DynamicModules;\n\ninterface SBUDynamicModuleInfo {\n  packageName: SBUNativeModule;\n  nativeModuleNamespace: string;\n  getPackage: <T>(logLevel: 'error' | 'warn' | 'none') => T;\n  url: string;\n  isComponent?: boolean;\n}\n\nfunction checkLink(dmi: SBUDynamicModuleInfo, logLevel: 'error' | 'warn' | 'none') {\n  const nativeModule = (() => {\n    if (dmi.isComponent) {\n      return UIManager.getViewManagerConfig(dmi.nativeModuleNamespace);\n    } else {\n      return NativeModules[dmi.nativeModuleNamespace];\n    }\n  })();\n\n  if (!nativeModule) {\n    const message = `[UIKit] Cannot use native module, you should install and link ${dmi.packageName} (${dmi.url})`;\n    if (logLevel === 'error') console.error(message);\n    if (logLevel === 'warn') console.warn(message);\n  }\n}\n\nexport interface DynamicModules {\n  '@react-native-community/netinfo': typeof RNCNetInfo;\n}\n\nconst SBUDynamicModuleRegistry: Record<SBUNativeModule, SBUDynamicModuleInfo> = {\n  '@react-native-community/netinfo': {\n    packageName: '@react-native-community/netinfo',\n    nativeModuleNamespace: 'RNCNetInfo',\n    url: 'https://github.com/react-native-netinfo/react-native-netinfo',\n    getPackage(logLevel) {\n      checkLink(this, logLevel);\n\n      try {\n        return require('@react-native-community/netinfo');\n      } catch (e) {\n        return null;\n      }\n    },\n  },\n};\n\nconst SBUDynamicModule = {\n  register(mdi: SBUDynamicModuleInfo) {\n    SBUDynamicModuleRegistry[mdi.nativeModuleNamespace as SBUNativeModule] = mdi;\n  },\n  getInfo(name: SBUNativeModule) {\n    return SBUDynamicModuleRegistry[name] ?? null;\n  },\n  get<K extends SBUNativeModule, T extends DynamicModules[K]>(name: K, logLevel: 'error' | 'warn' | 'none' = 'error') {\n    const dmi = this.getInfo(name);\n    if (!dmi) Logger.warn(`${name} doesn't exist in the dynamic module`);\n    return dmi?.getPackage<T>(logLevel);\n  },\n};\n\nexport default SBUDynamicModule;\n"],"mappings":";;;;;;AAEA,IAAAA,YAAA,GAAAC,OAAA;AAEA,IAAAC,WAAA,GAAAD,OAAA;AAJA;;AAgBA,SAASE,SAASA,CAACC,GAAyB,EAAEC,QAAmC,EAAE;EACjF,MAAMC,YAAY,GAAG,CAAC,MAAM;IAC1B,IAAIF,GAAG,CAACG,WAAW,EAAE;MACnB,OAAOC,sBAAS,CAACC,oBAAoB,CAACL,GAAG,CAACM,qBAAqB,CAAC;IAClE,CAAC,MAAM;MACL,OAAOC,0BAAa,CAACP,GAAG,CAACM,qBAAqB,CAAC;IACjD;EACF,CAAC,GAAG;EAEJ,IAAI,CAACJ,YAAY,EAAE;IACjB,MAAMM,OAAO,GAAI,iEAAgER,GAAG,CAACS,WAAY,KAAIT,GAAG,CAACU,GAAI,GAAE;IAC/G,IAAIT,QAAQ,KAAK,OAAO,EAAEU,OAAO,CAACC,KAAK,CAACJ,OAAO,CAAC;IAChD,IAAIP,QAAQ,KAAK,MAAM,EAAEU,OAAO,CAACE,IAAI,CAACL,OAAO,CAAC;EAChD;AACF;AAMA,MAAMM,wBAAuE,GAAG;EAC9E,iCAAiC,EAAE;IACjCL,WAAW,EAAE,iCAAiC;IAC9CH,qBAAqB,EAAE,YAAY;IACnCI,GAAG,EAAE,8DAA8D;IACnEK,UAAUA,CAACd,QAAQ,EAAE;MACnBF,SAAS,CAAC,IAAI,EAAEE,QAAQ,CAAC;MAEzB,IAAI;QACF,OAAOJ,OAAO,CAAC,iCAAiC,CAAC;MACnD,CAAC,CAAC,OAAOmB,CAAC,EAAE;QACV,OAAO,IAAI;MACb;IACF;EACF;AACF,CAAC;AAED,MAAMC,gBAAgB,GAAG;EACvBC,QAAQA,CAACC,GAAyB,EAAE;IAClCL,wBAAwB,CAACK,GAAG,CAACb,qBAAqB,CAAoB,GAAGa,GAAG;EAC9E,CAAC;EACDC,OAAOA,CAACC,IAAqB,EAAE;IAC7B,OAAOP,wBAAwB,CAACO,IAAI,CAAC,IAAI,IAAI;EAC/C,CAAC;EACDC,GAAGA,CAAyDD,IAAO,EAAiD;IAAA,IAA/CpB,QAAmC,GAAAsB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,OAAO;IAChH,MAAMvB,GAAG,GAAG,IAAI,CAACoB,OAAO,CAACC,IAAI,CAAC;IAC9B,IAAI,CAACrB,GAAG,EAAE0B,kBAAM,CAACb,IAAI,CAAE,GAAEQ,IAAK,sCAAqC,CAAC;IACpE,OAAOrB,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEe,UAAU,CAAId,QAAQ,CAAC;EACrC;AACF,CAAC;AAAC,IAAA0B,QAAA,GAEaV,gBAAgB;AAAAW,OAAA,CAAAC,OAAA,GAAAF,QAAA"}