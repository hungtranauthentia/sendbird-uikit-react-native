{"version":3,"names":["ReactNativeZoomableView","React","useLayoutEffect","useRef","useState","StyleSheet","useWindowDimensions","Box","Image","LoadingSpinner","createStyleSheet","useHeaderStyle","useUIKitTheme","useIIFE","usePlatformService","SBUUtils","FileViewerContent","_ref","type","src","topInset","bottomInset","maxZoom","minZoom","onPress","loading","setLoading","defaultHeight","mediaService","palette","source","uri","onLoadEnd","mediaViewer","createElement","ZoomableImageView","style","absoluteFill","resizeMode","zoomProps","onTouchEnd","VideoComponent","top","bottom","onLoad","styles","container","position","size","color","primary300","_ref2","props","width","height","imageSize","contentSizeProps","setContentSizeProps","contentWidth","contentHeight","safeRun","image","current","getImageSize","viewRatio","imageRatio","fitDirection","ratio","actualSize","_extends","visualTouchFeedbackEnabled","initialZoom","zIndex","flex","alignItems","justifyContent"],"sources":["FileViewerContent.tsx"],"sourcesContent":["import { ReactNativeZoomableView, ReactNativeZoomableViewProps } from '@openspacelabs/react-native-zoomable-view';\nimport React, { useLayoutEffect, useRef, useState } from 'react';\nimport { ImageProps, ImageStyle, ImageURISource, StyleProp, StyleSheet, useWindowDimensions } from 'react-native';\n\nimport {\n  Box,\n  Image,\n  LoadingSpinner,\n  createStyleSheet,\n  useHeaderStyle,\n  useUIKitTheme,\n} from '@sendbird/uikit-react-native-foundation';\nimport { FileType, useIIFE } from '@sendbird/uikit-utils';\n\nimport { usePlatformService } from '../../hooks/useContext';\nimport SBUUtils from '../../libs/SBUUtils';\n\ntype Props = {\n  type: FileType;\n  src: string;\n  topInset?: number;\n  bottomInset?: number;\n  maxZoom?: number;\n  minZoom?: number;\n  onPress?: () => void;\n};\nconst FileViewerContent = ({ type, src, topInset = 0, bottomInset = 0, maxZoom = 4, minZoom = 1, onPress }: Props) => {\n  const [loading, setLoading] = useState(true);\n\n  const { defaultHeight } = useHeaderStyle();\n  const { mediaService } = usePlatformService();\n  const { palette } = useUIKitTheme();\n\n  const source = { uri: src };\n  const onLoadEnd = () => setLoading(false);\n  const mediaViewer = useIIFE(() => {\n    switch (type) {\n      case 'image': {\n        return (\n          <ZoomableImageView\n            source={source}\n            style={StyleSheet.absoluteFill}\n            resizeMode={'contain'}\n            onLoadEnd={onLoadEnd}\n            zoomProps={{\n              minZoom,\n              maxZoom,\n              onTouchEnd: onPress,\n            }}\n          />\n        );\n      }\n\n      case 'video':\n      case 'audio': {\n        return (\n          <mediaService.VideoComponent\n            source={source}\n            style={[StyleSheet.absoluteFill, { top: topInset, bottom: defaultHeight + bottomInset }]}\n            resizeMode={'contain'}\n            onLoad={onLoadEnd}\n          />\n        );\n      }\n\n      default: {\n        return null;\n      }\n    }\n  });\n\n  return (\n    <Box style={styles.container}>\n      {mediaViewer}\n      {loading && <LoadingSpinner style={{ position: 'absolute' }} size={40} color={palette.primary300} />}\n    </Box>\n  );\n};\n\nconst ZoomableImageView = ({\n  zoomProps,\n  ...props\n}: {\n  source: ImageURISource;\n  style: StyleProp<ImageStyle>;\n  resizeMode: ImageProps['resizeMode'];\n  onLoadEnd: () => void;\n  zoomProps?: ReactNativeZoomableViewProps;\n}) => {\n  const { width, height } = useWindowDimensions();\n\n  const imageSize = useRef<{ width: number; height: number }>();\n  const [contentSizeProps, setContentSizeProps] = useState<ReactNativeZoomableViewProps>({\n    contentWidth: width,\n    contentHeight: height,\n  });\n\n  useLayoutEffect(() => {\n    SBUUtils.safeRun(async () => {\n      if (props.source.uri) {\n        const image = imageSize.current ?? (await SBUUtils.getImageSize(props.source.uri));\n        imageSize.current = image;\n\n        const viewRatio = width / height;\n        const imageRatio = image.width / image.height;\n\n        const fitDirection = viewRatio > imageRatio ? 'height' : 'width';\n        const ratio = fitDirection === 'height' ? height / image.height : width / image.width;\n        const actualSize = { width: image.width * ratio, height: image.height * ratio };\n\n        setContentSizeProps({\n          contentWidth: actualSize.width,\n          contentHeight: actualSize.height,\n        });\n      }\n    });\n  }, [props.source.uri, width, height]);\n\n  return (\n    <ReactNativeZoomableView\n      visualTouchFeedbackEnabled={false}\n      style={{ width, height }}\n      initialZoom={1}\n      {...contentSizeProps}\n      {...zoomProps}\n    >\n      <Image {...props} />\n    </ReactNativeZoomableView>\n  );\n};\n\nconst styles = createStyleSheet({\n  container: {\n    zIndex: -1,\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default FileViewerContent;\n"],"mappings":"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"}