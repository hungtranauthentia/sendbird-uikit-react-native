{"version":3,"names":["React","Platform","TouchableOpacity","Text","createStyleSheet","useUIKitTheme","useLocalization","NewMessagesButton","_ref","newMessages","visible","onPress","STRINGS","select","palette","colors","length","createElement","activeOpacity","style","styles","container","backgroundColor","dark","background400","light","background50","button","color","primary","GROUP_CHANNEL","LIST_BUTTON_NEW_MSG","paddingHorizontal","paddingVertical","borderRadius","android","elevation","ios","shadowColor","shadowRadius","shadowOffset","width","height","shadowOpacity","memo"],"sources":["NewMessagesButton.tsx"],"sourcesContent":["import React from 'react';\nimport { Platform, TouchableOpacity } from 'react-native';\n\nimport { Text, createStyleSheet, useUIKitTheme } from '@sendbird/uikit-react-native-foundation';\nimport type { SendbirdMessage } from '@sendbird/uikit-utils';\n\nimport { useLocalization } from '../hooks/useContext';\n\ntype Props = {\n  newMessages: SendbirdMessage[];\n  visible: boolean;\n  onPress: () => void;\n};\nconst NewMessagesButton = ({ newMessages, visible, onPress }: Props) => {\n  const { STRINGS } = useLocalization();\n  const { select, palette, colors } = useUIKitTheme();\n  if (newMessages.length === 0 || !visible) return null;\n  return (\n    <TouchableOpacity\n      activeOpacity={0.8}\n      onPress={onPress}\n      style={[\n        styles.container,\n        { backgroundColor: select({ dark: palette.background400, light: palette.background50 }) },\n      ]}\n    >\n      <Text button color={colors.primary}>\n        {STRINGS.GROUP_CHANNEL.LIST_BUTTON_NEW_MSG(newMessages)}\n      </Text>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = createStyleSheet({\n  container: {\n    paddingHorizontal: 12,\n    paddingVertical: 10,\n    borderRadius: 20,\n    ...Platform.select({\n      android: {\n        elevation: 4,\n      },\n      ios: {\n        shadowColor: 'black',\n        shadowRadius: 4,\n        shadowOffset: { width: 0, height: 4 },\n        shadowOpacity: 0.3,\n      },\n    }),\n  },\n});\nexport default React.memo(NewMessagesButton);\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,gBAAgB,QAAQ,cAAc;AAEzD,SAASC,IAAI,EAAEC,gBAAgB,EAAEC,aAAa,QAAQ,yCAAyC;AAG/F,SAASC,eAAe,QAAQ,qBAAqB;AAOrD,MAAMC,iBAAiB,GAAGC,IAAA,IAA8C;EAAA,IAA7C;IAAEC,WAAW;IAAEC,OAAO;IAAEC;EAAe,CAAC,GAAAH,IAAA;EACjE,MAAM;IAAEI;EAAQ,CAAC,GAAGN,eAAe,EAAE;EACrC,MAAM;IAAEO,MAAM;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAGV,aAAa,EAAE;EACnD,IAAII,WAAW,CAACO,MAAM,KAAK,CAAC,IAAI,CAACN,OAAO,EAAE,OAAO,IAAI;EACrD,oBACEV,KAAA,CAAAiB,aAAA,CAACf,gBAAgB;IACfgB,aAAa,EAAE,GAAI;IACnBP,OAAO,EAAEA,OAAQ;IACjBQ,KAAK,EAAE,CACLC,MAAM,CAACC,SAAS,EAChB;MAAEC,eAAe,EAAET,MAAM,CAAC;QAAEU,IAAI,EAAET,OAAO,CAACU,aAAa;QAAEC,KAAK,EAAEX,OAAO,CAACY;MAAa,CAAC;IAAE,CAAC;EACzF,gBAEF1B,KAAA,CAAAiB,aAAA,CAACd,IAAI;IAACwB,MAAM;IAACC,KAAK,EAAEb,MAAM,CAACc;EAAQ,GAChCjB,OAAO,CAACkB,aAAa,CAACC,mBAAmB,CAACtB,WAAW,CAAC,CAClD,CACU;AAEvB,CAAC;AAED,MAAMW,MAAM,GAAGhB,gBAAgB,CAAC;EAC9BiB,SAAS,EAAE;IACTW,iBAAiB,EAAE,EAAE;IACrBC,eAAe,EAAE,EAAE;IACnBC,YAAY,EAAE,EAAE;IAChB,GAAGjC,QAAQ,CAACY,MAAM,CAAC;MACjBsB,OAAO,EAAE;QACPC,SAAS,EAAE;MACb,CAAC;MACDC,GAAG,EAAE;QACHC,WAAW,EAAE,OAAO;QACpBC,YAAY,EAAE,CAAC;QACfC,YAAY,EAAE;UAAEC,KAAK,EAAE,CAAC;UAAEC,MAAM,EAAE;QAAE,CAAC;QACrCC,aAAa,EAAE;MACjB;IACF,CAAC;EACH;AACF,CAAC,CAAC;AACF,4BAAe3C,KAAK,CAAC4C,IAAI,CAACrC,iBAAiB,CAAC"}