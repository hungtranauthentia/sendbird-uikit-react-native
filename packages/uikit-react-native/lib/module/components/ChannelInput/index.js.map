{"version":3,"names":["React","useEffect","useMemo","useState","Platform","StyleSheet","View","KeyboardAvoidingView","useSafeAreaInsets","createStyleSheet","useUIKitTheme","replace","useIIFE","useSendbirdChat","useMentionTextInput","AttachmentsButton","EditInput","MessageToReplyPreview","SendInput","VoiceMessageInput","AUTO_FOCUS","select","ios","android","default","GET_INPUT_KEY","shouldReset","ChannelInput","props","channel","keyboardAvoidOffset","messageToEdit","setMessageToEdit","top","left","right","bottom","colors","typography","sbOptions","mentionManager","selection","onSelectionChange","textInputRef","text","onChangeText","mentionedUsers","inputMode","isFileMessage","mentionAvailable","uikit","groupChannel","enableMention","isGroupChannel","isBroadcast","inputKeyToRemount","length","inputHeight","setInputHeight","styles","inputDefault","height","fontStyle","body3","fontSize","lineHeight","textAlignVertical","textInputStyle","flatten","input","style","useTypingTrigger","useTextClearOnDisabled","inputDisabled","useAutoFocusOnEditMode","onPressToMention","user","searchStringRange","mentionedMessageText","asMentionedMessageText","range","start","end","shouldRenderInput","createElement","SafeAreaBottom","console","log","Fragment","keyboardVerticalOffset","behavior","paddingLeft","paddingRight","backgroundColor","background","onLayout","e","nativeEvent","layout","inputContainer","_extends","key","ref","autoFocus","SuggestedMentionList","topInset","bottomInset","endTyping","startTyping","setText","chatDisabled","isUserMessage","setTimeout","_textInputRef$current","current","focus","_ref","justifyContent","width","flex","marginRight","borderRadius","paddingTop","paddingBottom","minHeight","maxHeight","memo"],"sources":["index.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { Platform, StyleProp, StyleSheet, TextInput, TextStyle, View } from 'react-native';\nimport { KeyboardAvoidingView } from 'react-native-keyboard-controller';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport { createStyleSheet, useUIKitTheme } from '@sendbird/uikit-react-native-foundation';\nimport {\n  SendbirdBaseChannel,\n  SendbirdBaseMessage,\n  SendbirdFileMessage,\n  SendbirdFileMessageCreateParams,\n  SendbirdFileMessageUpdateParams,\n  SendbirdMember,\n  SendbirdUserMessage,\n  SendbirdUserMessageCreateParams,\n  SendbirdUserMessageUpdateParams,\n  replace,\n  useIIFE,\n} from '@sendbird/uikit-utils';\n\nimport { useSendbirdChat } from '../../hooks/useContext';\nimport useMentionTextInput from '../../hooks/useMentionTextInput';\nimport type { CommonComponent, MentionedUser, Range } from '../../types';\nimport type { AttachmentsButtonProps } from './AttachmentsButton';\nimport AttachmentsButton from './AttachmentsButton';\nimport EditInput from './EditInput';\nimport type { MessageToReplyPreviewProps } from './MessageToReplyPreview';\nimport { MessageToReplyPreview } from './MessageToReplyPreview';\nimport SendInput from './SendInput';\nimport VoiceMessageInput, { VoiceMessageInputProps } from './VoiceMessageInput';\n\nexport type SuggestedMentionListProps = {\n  text: string;\n  selection: Range;\n  topInset: number;\n  bottomInset: number;\n  inputHeight: number;\n  onPressToMention: (user: SendbirdMember, searchStringRange: Range) => void;\n  mentionedUsers: MentionedUser[];\n};\n\nexport type ChannelInputProps = {\n  // style\n  style?: StyleProp<TextStyle>;\n\n  // default\n  channel: SendbirdBaseChannel;\n  shouldRenderInput: boolean;\n  keyboardAvoidOffset: number;\n\n  // default actions\n  onPressSendUserMessage: (params: SendbirdUserMessageCreateParams) => Promise<void>;\n  onPressSendFileMessage: (params: SendbirdFileMessageCreateParams) => Promise<void>;\n  onPressUpdateUserMessage: (message: SendbirdUserMessage, params: SendbirdUserMessageUpdateParams) => Promise<void>;\n  onPressUpdateFileMessage: (message: SendbirdFileMessage, params: SendbirdFileMessageUpdateParams) => Promise<void>;\n\n  // input status\n  inputFrozen: boolean;\n  inputMuted: boolean;\n  inputDisabled: boolean;\n\n  // edit\n  messageToEdit: undefined | SendbirdUserMessage | SendbirdFileMessage;\n  setMessageToEdit: (message?: undefined | SendbirdUserMessage | SendbirdFileMessage) => void;\n\n  // reply - only available on group channel\n  messageToReply?: undefined | SendbirdUserMessage | SendbirdFileMessage;\n  setMessageToReply?: (message?: undefined | SendbirdUserMessage | SendbirdFileMessage) => void;\n\n  // mention\n  SuggestedMentionList?: CommonComponent<SuggestedMentionListProps>;\n\n  // sub-components\n  AttachmentsButton?: (props: AttachmentsButtonProps) => React.ReactNode | null;\n  MessageToReplyPreview?: (props: MessageToReplyPreviewProps) => React.ReactNode | null;\n  VoiceMessageInput?: (props: VoiceMessageInputProps) => React.ReactNode | null;\n};\n\nconst AUTO_FOCUS = Platform.select({ ios: false, android: true, default: false });\n\n// FIXME(iOS): Dynamic style does not work properly when typing the CJK. (https://github.com/facebook/react-native/issues/26107)\n//  To workaround temporarily, change the key for re-mount the component.\n//  -> This will affect to keyboard blur when add/remove first mentioned user.\nconst GET_INPUT_KEY = (shouldReset: boolean) => (shouldReset ? 'uikit-input-clear' : 'uikit-input');\n\n// TODO: Refactor 'Edit' mode to clearly\nconst ChannelInput = (props: ChannelInputProps) => {\n  const { channel, keyboardAvoidOffset, messageToEdit, setMessageToEdit } = props;\n\n  const { top, left, right, bottom } = useSafeAreaInsets();\n  const { colors, typography } = useUIKitTheme();\n  const { sbOptions, mentionManager } = useSendbirdChat();\n\n  const { selection, onSelectionChange, textInputRef, text, onChangeText, mentionedUsers } = useMentionTextInput({\n    messageToEdit,\n  });\n  const inputMode = useIIFE(() => {\n    if (messageToEdit && !messageToEdit.isFileMessage()) return 'edit';\n    else return 'send';\n  });\n\n  const mentionAvailable =\n    sbOptions.uikit.groupChannel.channel.enableMention && channel.isGroupChannel() && !channel.isBroadcast;\n  const inputKeyToRemount = GET_INPUT_KEY(mentionAvailable ? mentionedUsers.length === 0 : false);\n\n  const [inputHeight, setInputHeight] = useState(styles.inputDefault.height);\n\n  const fontStyle = useMemo(() => {\n    if (!typography.body3.fontSize) return typography.body3;\n    // NOTE: iOS does not support textAlignVertical, so we should adjust lineHeight to center the text in multiline TextInput.\n    return { ...typography.body3, lineHeight: typography.body3.fontSize * 1.275, textAlignVertical: 'center' };\n  }, [typography.body3.fontSize]);\n\n  const textInputStyle = StyleSheet.flatten([styles.input, fontStyle, props.style]);\n\n  useTypingTrigger(text, channel);\n  useTextClearOnDisabled(onChangeText, props.inputDisabled);\n  useAutoFocusOnEditMode(textInputRef, messageToEdit);\n\n  const onPressToMention = (user: SendbirdMember, searchStringRange: Range) => {\n    const mentionedMessageText = mentionManager.asMentionedMessageText(user, true);\n    const range = { start: searchStringRange.start, end: searchStringRange.start + mentionedMessageText.length - 1 };\n\n    onChangeText(replace(text, searchStringRange.start, searchStringRange.end, mentionedMessageText), { user, range });\n  };\n\n  if (!props.shouldRenderInput) {\n    return <SafeAreaBottom height={bottom} />;\n  }\n\n  console.log('KeyboardAvoidingView 2');\n\n  return (\n    <>\n      <KeyboardAvoidingView keyboardVerticalOffset={keyboardAvoidOffset} behavior=\"padding\">\n        <View style={{ paddingLeft: left, paddingRight: right, backgroundColor: colors.background }}>\n          <View onLayout={(e) => setInputHeight(e.nativeEvent.layout.height)} style={styles.inputContainer}>\n            {inputMode === 'send' && (\n              <SendInput\n                {...props}\n                key={inputKeyToRemount}\n                ref={textInputRef as never}\n                text={text}\n                onChangeText={onChangeText}\n                onSelectionChange={onSelectionChange}\n                mentionedUsers={mentionedUsers}\n                VoiceMessageInput={props.VoiceMessageInput ?? VoiceMessageInput}\n                AttachmentsButton={props.AttachmentsButton ?? AttachmentsButton}\n                MessageToReplyPreview={props.MessageToReplyPreview ?? MessageToReplyPreview}\n                style={textInputStyle}\n              />\n            )}\n            {inputMode === 'edit' && messageToEdit && (\n              <EditInput\n                {...props}\n                key={inputKeyToRemount}\n                ref={textInputRef as never}\n                text={text}\n                onChangeText={onChangeText}\n                autoFocus={AUTO_FOCUS}\n                onSelectionChange={onSelectionChange}\n                mentionedUsers={mentionedUsers}\n                messageToEdit={messageToEdit}\n                setMessageToEdit={setMessageToEdit}\n                style={textInputStyle}\n              />\n            )}\n          </View>\n          <SafeAreaBottom height={bottom} />\n        </View>\n      </KeyboardAvoidingView>\n      {mentionAvailable && props.SuggestedMentionList && (\n        <props.SuggestedMentionList\n          text={text}\n          selection={selection}\n          inputHeight={inputHeight}\n          topInset={top}\n          bottomInset={bottom}\n          onPressToMention={onPressToMention}\n          mentionedUsers={mentionedUsers}\n        />\n      )}\n    </>\n  );\n};\n\nconst useTypingTrigger = (text: string, channel: SendbirdBaseChannel) => {\n  if (channel.isGroupChannel()) {\n    useEffect(() => {\n      if (text.length === 0) channel.endTyping();\n      else channel.startTyping();\n    }, [text]);\n  }\n};\n\nconst useTextClearOnDisabled = (setText: (val: string) => void, chatDisabled: boolean) => {\n  useEffect(() => {\n    if (chatDisabled) setText('');\n  }, [chatDisabled]);\n};\n\nconst useAutoFocusOnEditMode = (\n  textInputRef: React.MutableRefObject<TextInput | undefined>,\n  messageToEdit?: SendbirdBaseMessage,\n) => {\n  useEffect(() => {\n    if (messageToEdit?.isUserMessage()) {\n      if (!AUTO_FOCUS) setTimeout(() => textInputRef.current?.focus(), 500);\n    }\n  }, [messageToEdit]);\n};\n\nconst SafeAreaBottom = ({ height }: { height: number }) => {\n  return <View style={{ height }} />;\n};\n\nconst styles = createStyleSheet({\n  inputContainer: {\n    justifyContent: 'center',\n    width: '100%',\n  },\n  inputDefault: {\n    height: 56,\n  },\n  input: {\n    flex: 1,\n    marginRight: 4,\n    borderRadius: 20,\n    paddingTop: 8,\n    paddingBottom: 8,\n    minHeight: 36,\n    // Android - padding area is hidden\n    // iOS - padding area is visible\n    maxHeight: Platform.select({ ios: 36 * 2 + 16, android: 36 * 2 }),\n  },\n});\n\nexport default React.memo(ChannelInput);\n"],"mappings":"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"}