{"version":3,"names":["React","useMessageOutgoingStatus","Icon","LoadingSpinner","useUIKitTheme","useSendbirdChat","SIZE","GroupChannelMessageOutgoingStatus","_ref","channel","message","style","sdk","colors","outgoingStatus","isUserMessage","isFileMessage","isEphemeral","createElement","size","icon","color","error","secondary","onBackground03","memo"],"sources":["GroupChannelMessageOutgoingStatus.tsx"],"sourcesContent":["import React from 'react';\nimport type { ImageStyle, StyleProp } from 'react-native';\n\nimport { useMessageOutgoingStatus } from '@sendbird/uikit-chat-hooks';\nimport { Icon, LoadingSpinner, useUIKitTheme } from '@sendbird/uikit-react-native-foundation';\nimport type { SendbirdGroupChannel, SendbirdMessage } from '@sendbird/uikit-utils';\n\nimport { useSendbirdChat } from '../../hooks/useContext';\n\nconst SIZE = 16;\n\ntype Props = {\n  channel: SendbirdGroupChannel;\n  message: SendbirdMessage;\n  style?: StyleProp<ImageStyle>;\n};\nconst GroupChannelMessageOutgoingStatus = ({ channel, message, style }: Props) => {\n  const { sdk } = useSendbirdChat();\n  const { colors } = useUIKitTheme();\n  const outgoingStatus = useMessageOutgoingStatus(sdk, channel, message);\n\n  if (!message.isUserMessage() && !message.isFileMessage()) return null;\n  if (channel.isEphemeral) return null;\n\n  if (outgoingStatus === 'PENDING') {\n    return <LoadingSpinner size={SIZE} style={style} />;\n  }\n\n  if (outgoingStatus === 'FAILED') {\n    return <Icon icon={'error'} size={SIZE} color={colors.error} style={style} />;\n  }\n\n  if (outgoingStatus === 'READ') {\n    return <Icon icon={'done-all'} size={SIZE} color={colors.secondary} style={style} />;\n  }\n\n  if (outgoingStatus === 'UNREAD' || outgoingStatus === 'DELIVERED') {\n    return <Icon icon={'done-all'} size={SIZE} color={colors.onBackground03} style={style} />;\n  }\n\n  if (outgoingStatus === 'UNDELIVERED') {\n    return <Icon icon={'done'} size={SIZE} color={colors.onBackground03} style={style} />;\n  }\n\n  return null;\n};\n\nexport default React.memo(GroupChannelMessageOutgoingStatus);\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,SAASC,wBAAwB,QAAQ,4BAA4B;AACrE,SAASC,IAAI,EAAEC,cAAc,EAAEC,aAAa,QAAQ,yCAAyC;AAG7F,SAASC,eAAe,QAAQ,wBAAwB;AAExD,MAAMC,IAAI,GAAG,EAAE;AAOf,MAAMC,iCAAiC,GAAGC,IAAA,IAAwC;EAAA,IAAvC;IAAEC,OAAO;IAAEC,OAAO;IAAEC;EAAa,CAAC,GAAAH,IAAA;EAC3E,MAAM;IAAEI;EAAI,CAAC,GAAGP,eAAe,EAAE;EACjC,MAAM;IAAEQ;EAAO,CAAC,GAAGT,aAAa,EAAE;EAClC,MAAMU,cAAc,GAAGb,wBAAwB,CAACW,GAAG,EAAEH,OAAO,EAAEC,OAAO,CAAC;EAEtE,IAAI,CAACA,OAAO,CAACK,aAAa,EAAE,IAAI,CAACL,OAAO,CAACM,aAAa,EAAE,EAAE,OAAO,IAAI;EACrE,IAAIP,OAAO,CAACQ,WAAW,EAAE,OAAO,IAAI;EAEpC,IAAIH,cAAc,KAAK,SAAS,EAAE;IAChC,oBAAOd,KAAA,CAAAkB,aAAA,CAACf,cAAc;MAACgB,IAAI,EAAEb,IAAK;MAACK,KAAK,EAAEA;IAAM,EAAG;EACrD;EAEA,IAAIG,cAAc,KAAK,QAAQ,EAAE;IAC/B,oBAAOd,KAAA,CAAAkB,aAAA,CAAChB,IAAI;MAACkB,IAAI,EAAE,OAAQ;MAACD,IAAI,EAAEb,IAAK;MAACe,KAAK,EAAER,MAAM,CAACS,KAAM;MAACX,KAAK,EAAEA;IAAM,EAAG;EAC/E;EAEA,IAAIG,cAAc,KAAK,MAAM,EAAE;IAC7B,oBAAOd,KAAA,CAAAkB,aAAA,CAAChB,IAAI;MAACkB,IAAI,EAAE,UAAW;MAACD,IAAI,EAAEb,IAAK;MAACe,KAAK,EAAER,MAAM,CAACU,SAAU;MAACZ,KAAK,EAAEA;IAAM,EAAG;EACtF;EAEA,IAAIG,cAAc,KAAK,QAAQ,IAAIA,cAAc,KAAK,WAAW,EAAE;IACjE,oBAAOd,KAAA,CAAAkB,aAAA,CAAChB,IAAI;MAACkB,IAAI,EAAE,UAAW;MAACD,IAAI,EAAEb,IAAK;MAACe,KAAK,EAAER,MAAM,CAACW,cAAe;MAACb,KAAK,EAAEA;IAAM,EAAG;EAC3F;EAEA,IAAIG,cAAc,KAAK,aAAa,EAAE;IACpC,oBAAOd,KAAA,CAAAkB,aAAA,CAAChB,IAAI;MAACkB,IAAI,EAAE,MAAO;MAACD,IAAI,EAAEb,IAAK;MAACe,KAAK,EAAER,MAAM,CAACW,cAAe;MAACb,KAAK,EAAEA;IAAM,EAAG;EACvF;EAEA,OAAO,IAAI;AACb,CAAC;AAED,4BAAeX,KAAK,CAACyB,IAAI,CAAClB,iCAAiC,CAAC"}