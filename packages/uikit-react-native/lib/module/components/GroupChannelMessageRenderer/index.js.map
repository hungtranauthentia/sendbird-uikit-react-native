{"version":3,"names":["React","useContext","useEffect","useRef","Box","GroupChannelMessage","Text","TypingIndicatorBubble","useUIKitTheme","calcMessageGrouping","getMessageType","isMyMessage","isVoiceMessage","shouldRenderParentMessage","shouldRenderReaction","useIIFE","VOICE_MESSAGE_META_ARRAY_DURATION_KEY","GroupChannelContexts","useLocalization","usePlatformService","useSendbirdChat","SBUUtils","TypingIndicatorType","ReactionAddons","GroupChannelMessageDateSeparator","GroupChannelMessageFocusAnimation","GroupChannelMessageOutgoingStatus","GroupChannelMessageParentMessage","GroupChannelMessageRenderer","_ref","channel","message","onPress","onLongPress","onPressParentMessage","onShowUserProfile","enableMessageGrouping","focused","prevMessage","nextMessage","playerUnsubscribes","palette","sbOptions","currentUser","mentionManager","STRINGS","mediaService","playerService","groupWithPrev","groupWithNext","Boolean","reactionChildren","configs","uikitWithAppInfo","groupChannel","isSuper","enableReactionsSupergroup","enableReactions","reactions","length","createElement","Message","resetPlayer","current","forEach","unsubscribe","reset","variant","userId","messageProps","onPressURL","url","openURL","onPressAvatar","sender","onPressMentionedUser","mentionedUser","onToggleVoiceMessage","state","setState","sendingStatus","uri","pause","play","shouldSeekToTime","duration","currentTime","seekFinished","forPlayback","addPlaybackListener","_ref2","stopped","prevState","forState","addStateListener","status","push","seek","groupedWithPrev","groupedWithNext","children","parentMessage","childMessage","strings","edited","GROUP_CHANNEL","MESSAGE_BUBBLE_EDITED_POSTFIX","senderName","nickname","LABELS","USER_NO_NAME","sentDate","MESSAGE_BUBBLE_TIME","fileName","isFileMessage","MESSAGE_BUBBLE_FILE_TITLE","unknownTitle","MESSAGE_BUBBLE_UNKNOWN_TITLE","unknownDescription","MESSAGE_BUBBLE_UNKNOWN_DESC","userMessageProps","renderRegexTextChildren","shouldUseMentionedMessageTemplate","uikit","enableMention","mentionedMessageTemplate","regexTextPatterns","regex","templateRegex","replacer","_ref3","_message$mentionedUse","match","groups","parentProps","index","keyPrefix","user","mentionedUsers","find","it","mentionColor","onBackgroundLight01","color","_extends","key","_messageProps$onPress","call","style","fontWeight","backgroundColor","highlight","asMentionedMessageText","renderMessage","Admin","ogMetaData","enableOgtag","OpenGraphUser","User","File","ImageFile","VideoFile","fetchThumbnailFromVideoSource","getVideoThumbnail","timeMills","VoiceFile","durationMetaArrayKey","onUnmount","Unknown","messageGap","isAdminMessage","paddingHorizontal","marginBottom","GroupChannelTypingIndicatorBubble","publish","PubSub","typingUsers","TypingIndicator","shouldRenderBubble","enableTypingIndicator","typingIndicatorTypes","has","Bubble","type","marginTop","memo"],"sources":["index.tsx"],"sourcesContent":["import React, { useContext, useEffect, useRef } from 'react';\n\nimport type { GroupChannelMessageProps, RegexTextPattern } from '@sendbird/uikit-react-native-foundation';\nimport {\n  Box,\n  GroupChannelMessage,\n  Text,\n  TypingIndicatorBubble,\n  useUIKitTheme,\n} from '@sendbird/uikit-react-native-foundation';\nimport {\n  SendbirdAdminMessage,\n  SendbirdFileMessage,\n  SendbirdMessage,\n  SendbirdUserMessage,\n  calcMessageGrouping,\n  getMessageType,\n  isMyMessage,\n  isVoiceMessage,\n  shouldRenderParentMessage,\n  shouldRenderReaction,\n  useIIFE,\n} from '@sendbird/uikit-utils';\n\nimport { VOICE_MESSAGE_META_ARRAY_DURATION_KEY } from '../../constants';\nimport { GroupChannelContexts } from '../../domain/groupChannel/module/moduleContext';\nimport type { GroupChannelProps } from '../../domain/groupChannel/types';\nimport { useLocalization, usePlatformService, useSendbirdChat } from '../../hooks/useContext';\nimport SBUUtils from '../../libs/SBUUtils';\nimport { TypingIndicatorType } from '../../types';\nimport { ReactionAddons } from '../ReactionAddons';\nimport GroupChannelMessageDateSeparator from './GroupChannelMessageDateSeparator';\nimport GroupChannelMessageFocusAnimation from './GroupChannelMessageFocusAnimation';\nimport GroupChannelMessageOutgoingStatus from './GroupChannelMessageOutgoingStatus';\nimport GroupChannelMessageParentMessage from './GroupChannelMessageParentMessage';\n\nconst GroupChannelMessageRenderer: GroupChannelProps['Fragment']['renderMessage'] = ({\n  channel,\n  message,\n  onPress,\n  onLongPress,\n  onPressParentMessage,\n  onShowUserProfile,\n  enableMessageGrouping,\n  focused,\n  prevMessage,\n  nextMessage,\n}) => {\n  const playerUnsubscribes = useRef<(() => void)[]>([]);\n  const { palette } = useUIKitTheme();\n  const { sbOptions, currentUser, mentionManager } = useSendbirdChat();\n  const { STRINGS } = useLocalization();\n  const { mediaService, playerService } = usePlatformService();\n  const { groupWithPrev, groupWithNext } = calcMessageGrouping(\n    Boolean(enableMessageGrouping),\n    message,\n    prevMessage,\n    nextMessage,\n  );\n\n  const reactionChildren = useIIFE(() => {\n    const configs = sbOptions.uikitWithAppInfo.groupChannel.channel;\n    if (\n      shouldRenderReaction(channel, channel.isSuper ? configs.enableReactionsSupergroup : configs.enableReactions) &&\n      message.reactions &&\n      message.reactions.length > 0\n    ) {\n      return <ReactionAddons.Message channel={channel} message={message} />;\n    }\n    return null;\n  });\n\n  const resetPlayer = async () => {\n    playerUnsubscribes.current.forEach((unsubscribe) => {\n      try {\n        unsubscribe();\n      } catch {}\n    });\n    playerUnsubscribes.current.length = 0;\n    await playerService.reset();\n  };\n\n  const variant = isMyMessage(message, currentUser?.userId) ? 'outgoing' : 'incoming';\n\n  const messageProps: Omit<GroupChannelMessageProps<SendbirdMessage>, 'message'> = {\n    channel,\n    variant,\n    onPress,\n    onLongPress,\n    onPressURL: (url) => SBUUtils.openURL(url),\n    onPressAvatar: () => {\n      if ('sender' in message) onShowUserProfile?.(message.sender);\n    },\n    onPressMentionedUser: (mentionedUser) => {\n      if (mentionedUser) onShowUserProfile?.(mentionedUser);\n    },\n    onToggleVoiceMessage: async (state, setState) => {\n      if (isVoiceMessage(message) && message.sendingStatus === 'succeeded') {\n        if (playerService.uri === message.url) {\n          if (playerService.state === 'playing') {\n            await playerService.pause();\n          } else {\n            await playerService.play(message.url);\n          }\n        } else {\n          if (playerService.state !== 'idle') {\n            await resetPlayer();\n          }\n\n          const shouldSeekToTime = state.duration > state.currentTime && state.currentTime > 0;\n          let seekFinished = !shouldSeekToTime;\n\n          const forPlayback = playerService.addPlaybackListener(({ stopped, currentTime, duration }) => {\n            if (seekFinished) {\n              setState((prevState) => ({ ...prevState, currentTime: stopped ? 0 : currentTime, duration }));\n            }\n          });\n          const forState = playerService.addStateListener((state) => {\n            switch (state) {\n              case 'preparing':\n                setState((prevState) => ({ ...prevState, status: 'preparing' }));\n                break;\n              case 'playing':\n                setState((prevState) => ({ ...prevState, status: 'playing' }));\n                break;\n              case 'idle':\n              case 'paused': {\n                setState((prevState) => ({ ...prevState, status: 'paused' }));\n                break;\n              }\n              case 'stopped':\n                setState((prevState) => ({ ...prevState, status: 'paused' }));\n                break;\n            }\n          });\n          playerUnsubscribes.current.push(forPlayback, forState);\n\n          await playerService.play(message.url);\n          if (shouldSeekToTime) {\n            await playerService.seek(state.currentTime);\n            seekFinished = true;\n          }\n        }\n      }\n    },\n    groupedWithPrev: groupWithPrev,\n    groupedWithNext: groupWithNext,\n    children: reactionChildren,\n    sendingStatus: isMyMessage(message, currentUser?.userId) ? (\n      <GroupChannelMessageOutgoingStatus channel={channel} message={message} />\n    ) : null,\n    parentMessage: shouldRenderParentMessage(message) ? (\n      <GroupChannelMessageParentMessage\n        channel={channel}\n        message={message.parentMessage}\n        variant={variant}\n        childMessage={message}\n        onPress={onPressParentMessage}\n      />\n    ) : null,\n    strings: {\n      edited: STRINGS.GROUP_CHANNEL.MESSAGE_BUBBLE_EDITED_POSTFIX,\n      senderName: ('sender' in message && message.sender.nickname) || STRINGS.LABELS.USER_NO_NAME,\n      sentDate: STRINGS.GROUP_CHANNEL.MESSAGE_BUBBLE_TIME(message),\n      fileName: message.isFileMessage() ? STRINGS.GROUP_CHANNEL.MESSAGE_BUBBLE_FILE_TITLE(message) : '',\n      unknownTitle: STRINGS.GROUP_CHANNEL.MESSAGE_BUBBLE_UNKNOWN_TITLE(message),\n      unknownDescription: STRINGS.GROUP_CHANNEL.MESSAGE_BUBBLE_UNKNOWN_DESC(message),\n    },\n  };\n\n  const userMessageProps: {\n    renderRegexTextChildren: (message: SendbirdUserMessage) => string;\n    regexTextPatterns: RegexTextPattern[];\n  } = {\n    renderRegexTextChildren: (message) => {\n      if (\n        mentionManager.shouldUseMentionedMessageTemplate(message, sbOptions.uikit.groupChannel.channel.enableMention)\n      ) {\n        return message.mentionedMessageTemplate;\n      } else {\n        return message.message;\n      }\n    },\n    regexTextPatterns: [\n      {\n        regex: mentionManager.templateRegex,\n        replacer({ match, groups, parentProps, index, keyPrefix }) {\n          const user = message.mentionedUsers?.find((it) => it.userId === groups[2]);\n          if (user) {\n            const mentionColor =\n              !isMyMessage(message, currentUser?.userId) && user.userId === currentUser?.userId\n                ? palette.onBackgroundLight01\n                : parentProps?.color;\n\n            return (\n              <Text\n                {...parentProps}\n                key={`${keyPrefix}-${index}`}\n                color={mentionColor}\n                onPress={() => messageProps.onPressMentionedUser?.(user)}\n                onLongPress={messageProps.onLongPress}\n                style={[\n                  parentProps?.style,\n                  { fontWeight: '700' },\n                  user.userId === currentUser?.userId && { backgroundColor: palette.highlight },\n                ]}\n              >\n                {`${mentionManager.asMentionedMessageText(user)}`}\n              </Text>\n            );\n          }\n          return match;\n        },\n      },\n    ],\n  };\n\n  const renderMessage = () => {\n    switch (getMessageType(message)) {\n      case 'admin': {\n        return <GroupChannelMessage.Admin message={message as SendbirdAdminMessage} {...messageProps} />;\n      }\n      case 'user':\n      case 'user.opengraph': {\n        if (message.ogMetaData && sbOptions.uikitWithAppInfo.groupChannel.channel.enableOgtag) {\n          return (\n            <GroupChannelMessage.OpenGraphUser\n              message={message as SendbirdUserMessage}\n              {...userMessageProps}\n              {...messageProps}\n            />\n          );\n        } else {\n          return (\n            <GroupChannelMessage.User\n              message={message as SendbirdUserMessage}\n              {...userMessageProps}\n              {...messageProps}\n            />\n          );\n        }\n      }\n      case 'file':\n      case 'file.audio': {\n        return <GroupChannelMessage.File message={message as SendbirdFileMessage} {...messageProps} />;\n      }\n      case 'file.image': {\n        return <GroupChannelMessage.ImageFile message={message as SendbirdFileMessage} {...messageProps} />;\n      }\n      case 'file.video': {\n        return (\n          <GroupChannelMessage.VideoFile\n            message={message as SendbirdFileMessage}\n            fetchThumbnailFromVideoSource={(uri) => mediaService.getVideoThumbnail({ url: uri, timeMills: 1000 })}\n            {...messageProps}\n          />\n        );\n      }\n      case 'file.voice': {\n        return (\n          <GroupChannelMessage.VoiceFile\n            message={message as SendbirdFileMessage}\n            durationMetaArrayKey={VOICE_MESSAGE_META_ARRAY_DURATION_KEY}\n            onUnmount={() => {\n              if (isVoiceMessage(message) && playerService.uri === message.url) {\n                resetPlayer();\n              }\n            }}\n            {...messageProps}\n          />\n        );\n      }\n      case 'unknown':\n      default: {\n        return <GroupChannelMessage.Unknown message={message} {...messageProps} />;\n      }\n    }\n  };\n\n  const messageGap = useIIFE(() => {\n    if (message.isAdminMessage()) {\n      if (nextMessage?.isAdminMessage()) {\n        return 8;\n      } else {\n        return 16;\n      }\n    } else if (nextMessage && shouldRenderParentMessage(nextMessage)) {\n      return 16;\n    } else if (groupWithNext) {\n      return 2;\n    } else {\n      return 16;\n    }\n  });\n\n  return (\n    <Box paddingHorizontal={16} marginBottom={messageGap}>\n      <GroupChannelMessageDateSeparator message={message} prevMessage={prevMessage} />\n      <GroupChannelMessageFocusAnimation focused={focused}>{renderMessage()}</GroupChannelMessageFocusAnimation>\n    </Box>\n  );\n};\n\nexport const GroupChannelTypingIndicatorBubble = () => {\n  const { sbOptions } = useSendbirdChat();\n  const { publish } = useContext(GroupChannelContexts.PubSub);\n  const { typingUsers } = useContext(GroupChannelContexts.TypingIndicator);\n\n  const shouldRenderBubble = useIIFE(() => {\n    if (typingUsers.length === 0) return false;\n    if (!sbOptions.uikit.groupChannel.channel.enableTypingIndicator) return false;\n    if (!sbOptions.uikit.groupChannel.channel.typingIndicatorTypes.has(TypingIndicatorType.Bubble)) return false;\n    return true;\n  });\n\n  useEffect(() => {\n    if (shouldRenderBubble) publish({ type: 'TYPING_BUBBLE_RENDERED' });\n  }, [shouldRenderBubble]);\n\n  if (!shouldRenderBubble) return null;\n  return (\n    <Box paddingHorizontal={16} marginTop={4} marginBottom={16}>\n      <TypingIndicatorBubble typingUsers={typingUsers} />\n    </Box>\n  );\n};\n\nexport default React.memo(GroupChannelMessageRenderer);\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAG5D,SACEC,GAAG,EACHC,mBAAmB,EACnBC,IAAI,EACJC,qBAAqB,EACrBC,aAAa,QACR,yCAAyC;AAChD,SAKEC,mBAAmB,EACnBC,cAAc,EACdC,WAAW,EACXC,cAAc,EACdC,yBAAyB,EACzBC,oBAAoB,EACpBC,OAAO,QACF,uBAAuB;AAE9B,SAASC,qCAAqC,QAAQ,iBAAiB;AACvE,SAASC,oBAAoB,QAAQ,gDAAgD;AAErF,SAASC,eAAe,EAAEC,kBAAkB,EAAEC,eAAe,QAAQ,wBAAwB;AAC7F,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,SAASC,mBAAmB,QAAQ,aAAa;AACjD,SAASC,cAAc,QAAQ,mBAAmB;AAClD,OAAOC,gCAAgC,MAAM,oCAAoC;AACjF,OAAOC,iCAAiC,MAAM,qCAAqC;AACnF,OAAOC,iCAAiC,MAAM,qCAAqC;AACnF,OAAOC,gCAAgC,MAAM,oCAAoC;AAEjF,MAAMC,2BAA2E,GAAGC,IAAA,IAW9E;EAAA,IAX+E;IACnFC,OAAO;IACPC,OAAO;IACPC,OAAO;IACPC,WAAW;IACXC,oBAAoB;IACpBC,iBAAiB;IACjBC,qBAAqB;IACrBC,OAAO;IACPC,WAAW;IACXC;EACF,CAAC,GAAAV,IAAA;EACC,MAAMW,kBAAkB,GAAGrC,MAAM,CAAiB,EAAE,CAAC;EACrD,MAAM;IAAEsC;EAAQ,CAAC,GAAGjC,aAAa,EAAE;EACnC,MAAM;IAAEkC,SAAS;IAAEC,WAAW;IAAEC;EAAe,CAAC,GAAGxB,eAAe,EAAE;EACpE,MAAM;IAAEyB;EAAQ,CAAC,GAAG3B,eAAe,EAAE;EACrC,MAAM;IAAE4B,YAAY;IAAEC;EAAc,CAAC,GAAG5B,kBAAkB,EAAE;EAC5D,MAAM;IAAE6B,aAAa;IAAEC;EAAc,CAAC,GAAGxC,mBAAmB,CAC1DyC,OAAO,CAACd,qBAAqB,CAAC,EAC9BL,OAAO,EACPO,WAAW,EACXC,WAAW,CACZ;EAED,MAAMY,gBAAgB,GAAGpC,OAAO,CAAC,MAAM;IACrC,MAAMqC,OAAO,GAAGV,SAAS,CAACW,gBAAgB,CAACC,YAAY,CAACxB,OAAO;IAC/D,IACEhB,oBAAoB,CAACgB,OAAO,EAAEA,OAAO,CAACyB,OAAO,GAAGH,OAAO,CAACI,yBAAyB,GAAGJ,OAAO,CAACK,eAAe,CAAC,IAC5G1B,OAAO,CAAC2B,SAAS,IACjB3B,OAAO,CAAC2B,SAAS,CAACC,MAAM,GAAG,CAAC,EAC5B;MACA,oBAAO3D,KAAA,CAAA4D,aAAA,CAACrC,cAAc,CAACsC,OAAO;QAAC/B,OAAO,EAAEA,OAAQ;QAACC,OAAO,EAAEA;MAAQ,EAAG;IACvE;IACA,OAAO,IAAI;EACb,CAAC,CAAC;EAEF,MAAM+B,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9BtB,kBAAkB,CAACuB,OAAO,CAACC,OAAO,CAAEC,WAAW,IAAK;MAClD,IAAI;QACFA,WAAW,EAAE;MACf,CAAC,CAAC,MAAM,CAAC;IACX,CAAC,CAAC;IACFzB,kBAAkB,CAACuB,OAAO,CAACJ,MAAM,GAAG,CAAC;IACrC,MAAMZ,aAAa,CAACmB,KAAK,EAAE;EAC7B,CAAC;EAED,MAAMC,OAAO,GAAGxD,WAAW,CAACoB,OAAO,EAAEY,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEyB,MAAM,CAAC,GAAG,UAAU,GAAG,UAAU;EAEnF,MAAMC,YAAwE,GAAG;IAC/EvC,OAAO;IACPqC,OAAO;IACPnC,OAAO;IACPC,WAAW;IACXqC,UAAU,EAAGC,GAAG,IAAKlD,QAAQ,CAACmD,OAAO,CAACD,GAAG,CAAC;IAC1CE,aAAa,EAAEA,CAAA,KAAM;MACnB,IAAI,QAAQ,IAAI1C,OAAO,EAAEI,iBAAiB,aAAjBA,iBAAiB,uBAAjBA,iBAAiB,CAAGJ,OAAO,CAAC2C,MAAM,CAAC;IAC9D,CAAC;IACDC,oBAAoB,EAAGC,aAAa,IAAK;MACvC,IAAIA,aAAa,EAAEzC,iBAAiB,aAAjBA,iBAAiB,uBAAjBA,iBAAiB,CAAGyC,aAAa,CAAC;IACvD,CAAC;IACDC,oBAAoB,EAAE,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;MAC/C,IAAInE,cAAc,CAACmB,OAAO,CAAC,IAAIA,OAAO,CAACiD,aAAa,KAAK,WAAW,EAAE;QACpE,IAAIjC,aAAa,CAACkC,GAAG,KAAKlD,OAAO,CAACwC,GAAG,EAAE;UACrC,IAAIxB,aAAa,CAAC+B,KAAK,KAAK,SAAS,EAAE;YACrC,MAAM/B,aAAa,CAACmC,KAAK,EAAE;UAC7B,CAAC,MAAM;YACL,MAAMnC,aAAa,CAACoC,IAAI,CAACpD,OAAO,CAACwC,GAAG,CAAC;UACvC;QACF,CAAC,MAAM;UACL,IAAIxB,aAAa,CAAC+B,KAAK,KAAK,MAAM,EAAE;YAClC,MAAMhB,WAAW,EAAE;UACrB;UAEA,MAAMsB,gBAAgB,GAAGN,KAAK,CAACO,QAAQ,GAAGP,KAAK,CAACQ,WAAW,IAAIR,KAAK,CAACQ,WAAW,GAAG,CAAC;UACpF,IAAIC,YAAY,GAAG,CAACH,gBAAgB;UAEpC,MAAMI,WAAW,GAAGzC,aAAa,CAAC0C,mBAAmB,CAACC,KAAA,IAAwC;YAAA,IAAvC;cAAEC,OAAO;cAAEL,WAAW;cAAED;YAAS,CAAC,GAAAK,KAAA;YACvF,IAAIH,YAAY,EAAE;cAChBR,QAAQ,CAAEa,SAAS,KAAM;gBAAE,GAAGA,SAAS;gBAAEN,WAAW,EAAEK,OAAO,GAAG,CAAC,GAAGL,WAAW;gBAAED;cAAS,CAAC,CAAC,CAAC;YAC/F;UACF,CAAC,CAAC;UACF,MAAMQ,QAAQ,GAAG9C,aAAa,CAAC+C,gBAAgB,CAAEhB,KAAK,IAAK;YACzD,QAAQA,KAAK;cACX,KAAK,WAAW;gBACdC,QAAQ,CAAEa,SAAS,KAAM;kBAAE,GAAGA,SAAS;kBAAEG,MAAM,EAAE;gBAAY,CAAC,CAAC,CAAC;gBAChE;cACF,KAAK,SAAS;gBACZhB,QAAQ,CAAEa,SAAS,KAAM;kBAAE,GAAGA,SAAS;kBAAEG,MAAM,EAAE;gBAAU,CAAC,CAAC,CAAC;gBAC9D;cACF,KAAK,MAAM;cACX,KAAK,QAAQ;gBAAE;kBACbhB,QAAQ,CAAEa,SAAS,KAAM;oBAAE,GAAGA,SAAS;oBAAEG,MAAM,EAAE;kBAAS,CAAC,CAAC,CAAC;kBAC7D;gBACF;cACA,KAAK,SAAS;gBACZhB,QAAQ,CAAEa,SAAS,KAAM;kBAAE,GAAGA,SAAS;kBAAEG,MAAM,EAAE;gBAAS,CAAC,CAAC,CAAC;gBAC7D;YAAM;UAEZ,CAAC,CAAC;UACFvD,kBAAkB,CAACuB,OAAO,CAACiC,IAAI,CAACR,WAAW,EAAEK,QAAQ,CAAC;UAEtD,MAAM9C,aAAa,CAACoC,IAAI,CAACpD,OAAO,CAACwC,GAAG,CAAC;UACrC,IAAIa,gBAAgB,EAAE;YACpB,MAAMrC,aAAa,CAACkD,IAAI,CAACnB,KAAK,CAACQ,WAAW,CAAC;YAC3CC,YAAY,GAAG,IAAI;UACrB;QACF;MACF;IACF,CAAC;IACDW,eAAe,EAAElD,aAAa;IAC9BmD,eAAe,EAAElD,aAAa;IAC9BmD,QAAQ,EAAEjD,gBAAgB;IAC1B6B,aAAa,EAAErE,WAAW,CAACoB,OAAO,EAAEY,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEyB,MAAM,CAAC,gBACtDpE,KAAA,CAAA4D,aAAA,CAAClC,iCAAiC;MAACI,OAAO,EAAEA,OAAQ;MAACC,OAAO,EAAEA;IAAQ,EAAG,GACvE,IAAI;IACRsE,aAAa,EAAExF,yBAAyB,CAACkB,OAAO,CAAC,gBAC/C/B,KAAA,CAAA4D,aAAA,CAACjC,gCAAgC;MAC/BG,OAAO,EAAEA,OAAQ;MACjBC,OAAO,EAAEA,OAAO,CAACsE,aAAc;MAC/BlC,OAAO,EAAEA,OAAQ;MACjBmC,YAAY,EAAEvE,OAAQ;MACtBC,OAAO,EAAEE;IAAqB,EAC9B,GACA,IAAI;IACRqE,OAAO,EAAE;MACPC,MAAM,EAAE3D,OAAO,CAAC4D,aAAa,CAACC,6BAA6B;MAC3DC,UAAU,EAAG,QAAQ,IAAI5E,OAAO,IAAIA,OAAO,CAAC2C,MAAM,CAACkC,QAAQ,IAAK/D,OAAO,CAACgE,MAAM,CAACC,YAAY;MAC3FC,QAAQ,EAAElE,OAAO,CAAC4D,aAAa,CAACO,mBAAmB,CAACjF,OAAO,CAAC;MAC5DkF,QAAQ,EAAElF,OAAO,CAACmF,aAAa,EAAE,GAAGrE,OAAO,CAAC4D,aAAa,CAACU,yBAAyB,CAACpF,OAAO,CAAC,GAAG,EAAE;MACjGqF,YAAY,EAAEvE,OAAO,CAAC4D,aAAa,CAACY,4BAA4B,CAACtF,OAAO,CAAC;MACzEuF,kBAAkB,EAAEzE,OAAO,CAAC4D,aAAa,CAACc,2BAA2B,CAACxF,OAAO;IAC/E;EACF,CAAC;EAED,MAAMyF,gBAGL,GAAG;IACFC,uBAAuB,EAAG1F,OAAO,IAAK;MACpC,IACEa,cAAc,CAAC8E,iCAAiC,CAAC3F,OAAO,EAAEW,SAAS,CAACiF,KAAK,CAACrE,YAAY,CAACxB,OAAO,CAAC8F,aAAa,CAAC,EAC7G;QACA,OAAO7F,OAAO,CAAC8F,wBAAwB;MACzC,CAAC,MAAM;QACL,OAAO9F,OAAO,CAACA,OAAO;MACxB;IACF,CAAC;IACD+F,iBAAiB,EAAE,CACjB;MACEC,KAAK,EAAEnF,cAAc,CAACoF,aAAa;MACnCC,QAAQA,CAAAC,KAAA,EAAmD;QAAA,IAAAC,qBAAA;QAAA,IAAlD;UAAEC,KAAK;UAAEC,MAAM;UAAEC,WAAW;UAAEC,KAAK;UAAEC;QAAU,CAAC,GAAAN,KAAA;QACvD,MAAMO,IAAI,IAAAN,qBAAA,GAAGpG,OAAO,CAAC2G,cAAc,cAAAP,qBAAA,uBAAtBA,qBAAA,CAAwBQ,IAAI,CAAEC,EAAE,IAAKA,EAAE,CAACxE,MAAM,KAAKiE,MAAM,CAAC,CAAC,CAAC,CAAC;QAC1E,IAAII,IAAI,EAAE;UACR,MAAMI,YAAY,GAChB,CAAClI,WAAW,CAACoB,OAAO,EAAEY,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEyB,MAAM,CAAC,IAAIqE,IAAI,CAACrE,MAAM,MAAKzB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEyB,MAAM,IAC7E3B,OAAO,CAACqG,mBAAmB,GAC3BR,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAES,KAAK;UAExB,oBACE/I,KAAA,CAAA4D,aAAA,CAACtD,IAAI,EAAA0I,QAAA,KACCV,WAAW;YACfW,GAAG,EAAG,GAAET,SAAU,IAAGD,KAAM,EAAE;YAC7BQ,KAAK,EAAEF,YAAa;YACpB7G,OAAO,EAAEA,CAAA;cAAA,IAAAkH,qBAAA;cAAA,QAAAA,qBAAA,GAAM7E,YAAY,CAACM,oBAAoB,cAAAuE,qBAAA,uBAAjCA,qBAAA,CAAAC,IAAA,CAAA9E,YAAY,EAAwBoE,IAAI,CAAC;YAAA,CAAC;YACzDxG,WAAW,EAAEoC,YAAY,CAACpC,WAAY;YACtCmH,KAAK,EAAE,CACLd,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEc,KAAK,EAClB;cAAEC,UAAU,EAAE;YAAM,CAAC,EACrBZ,IAAI,CAACrE,MAAM,MAAKzB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEyB,MAAM,KAAI;cAAEkF,eAAe,EAAE7G,OAAO,CAAC8G;YAAU,CAAC;UAC7E,IAEA,GAAE3G,cAAc,CAAC4G,sBAAsB,CAACf,IAAI,CAAE,EAAC,CAC5C;QAEX;QACA,OAAOL,KAAK;MACd;IACF,CAAC;EAEL,CAAC;EAED,MAAMqB,aAAa,GAAGA,CAAA,KAAM;IAC1B,QAAQ/I,cAAc,CAACqB,OAAO,CAAC;MAC7B,KAAK,OAAO;QAAE;UACZ,oBAAO/B,KAAA,CAAA4D,aAAA,CAACvD,mBAAmB,CAACqJ,KAAK,EAAAV,QAAA;YAACjH,OAAO,EAAEA;UAAgC,GAAKsC,YAAY,EAAI;QAClG;MACA,KAAK,MAAM;MACX,KAAK,gBAAgB;QAAE;UACrB,IAAItC,OAAO,CAAC4H,UAAU,IAAIjH,SAAS,CAACW,gBAAgB,CAACC,YAAY,CAACxB,OAAO,CAAC8H,WAAW,EAAE;YACrF,oBACE5J,KAAA,CAAA4D,aAAA,CAACvD,mBAAmB,CAACwJ,aAAa,EAAAb,QAAA;cAChCjH,OAAO,EAAEA;YAA+B,GACpCyF,gBAAgB,EAChBnD,YAAY,EAChB;UAEN,CAAC,MAAM;YACL,oBACErE,KAAA,CAAA4D,aAAA,CAACvD,mBAAmB,CAACyJ,IAAI,EAAAd,QAAA;cACvBjH,OAAO,EAAEA;YAA+B,GACpCyF,gBAAgB,EAChBnD,YAAY,EAChB;UAEN;QACF;MACA,KAAK,MAAM;MACX,KAAK,YAAY;QAAE;UACjB,oBAAOrE,KAAA,CAAA4D,aAAA,CAACvD,mBAAmB,CAAC0J,IAAI,EAAAf,QAAA;YAACjH,OAAO,EAAEA;UAA+B,GAAKsC,YAAY,EAAI;QAChG;MACA,KAAK,YAAY;QAAE;UACjB,oBAAOrE,KAAA,CAAA4D,aAAA,CAACvD,mBAAmB,CAAC2J,SAAS,EAAAhB,QAAA;YAACjH,OAAO,EAAEA;UAA+B,GAAKsC,YAAY,EAAI;QACrG;MACA,KAAK,YAAY;QAAE;UACjB,oBACErE,KAAA,CAAA4D,aAAA,CAACvD,mBAAmB,CAAC4J,SAAS,EAAAjB,QAAA;YAC5BjH,OAAO,EAAEA,OAA+B;YACxCmI,6BAA6B,EAAGjF,GAAG,IAAKnC,YAAY,CAACqH,iBAAiB,CAAC;cAAE5F,GAAG,EAAEU,GAAG;cAAEmF,SAAS,EAAE;YAAK,CAAC;UAAE,GAClG/F,YAAY,EAChB;QAEN;MACA,KAAK,YAAY;QAAE;UACjB,oBACErE,KAAA,CAAA4D,aAAA,CAACvD,mBAAmB,CAACgK,SAAS,EAAArB,QAAA;YAC5BjH,OAAO,EAAEA,OAA+B;YACxCuI,oBAAoB,EAAEtJ,qCAAsC;YAC5DuJ,SAAS,EAAEA,CAAA,KAAM;cACf,IAAI3J,cAAc,CAACmB,OAAO,CAAC,IAAIgB,aAAa,CAACkC,GAAG,KAAKlD,OAAO,CAACwC,GAAG,EAAE;gBAChET,WAAW,EAAE;cACf;YACF;UAAE,GACEO,YAAY,EAChB;QAEN;MACA,KAAK,SAAS;MACd;QAAS;UACP,oBAAOrE,KAAA,CAAA4D,aAAA,CAACvD,mBAAmB,CAACmK,OAAO,EAAAxB,QAAA;YAACjH,OAAO,EAAEA;UAAQ,GAAKsC,YAAY,EAAI;QAC5E;IAAC;EAEL,CAAC;EAED,MAAMoG,UAAU,GAAG1J,OAAO,CAAC,MAAM;IAC/B,IAAIgB,OAAO,CAAC2I,cAAc,EAAE,EAAE;MAC5B,IAAInI,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAEmI,cAAc,EAAE,EAAE;QACjC,OAAO,CAAC;MACV,CAAC,MAAM;QACL,OAAO,EAAE;MACX;IACF,CAAC,MAAM,IAAInI,WAAW,IAAI1B,yBAAyB,CAAC0B,WAAW,CAAC,EAAE;MAChE,OAAO,EAAE;IACX,CAAC,MAAM,IAAIU,aAAa,EAAE;MACxB,OAAO,CAAC;IACV,CAAC,MAAM;MACL,OAAO,EAAE;IACX;EACF,CAAC,CAAC;EAEF,oBACEjD,KAAA,CAAA4D,aAAA,CAACxD,GAAG;IAACuK,iBAAiB,EAAE,EAAG;IAACC,YAAY,EAAEH;EAAW,gBACnDzK,KAAA,CAAA4D,aAAA,CAACpC,gCAAgC;IAACO,OAAO,EAAEA,OAAQ;IAACO,WAAW,EAAEA;EAAY,EAAG,eAChFtC,KAAA,CAAA4D,aAAA,CAACnC,iCAAiC;IAACY,OAAO,EAAEA;EAAQ,GAAEoH,aAAa,EAAE,CAAqC,CACtG;AAEV,CAAC;AAED,OAAO,MAAMoB,iCAAiC,GAAGA,CAAA,KAAM;EACrD,MAAM;IAAEnI;EAAU,CAAC,GAAGtB,eAAe,EAAE;EACvC,MAAM;IAAE0J;EAAQ,CAAC,GAAG7K,UAAU,CAACgB,oBAAoB,CAAC8J,MAAM,CAAC;EAC3D,MAAM;IAAEC;EAAY,CAAC,GAAG/K,UAAU,CAACgB,oBAAoB,CAACgK,eAAe,CAAC;EAExE,MAAMC,kBAAkB,GAAGnK,OAAO,CAAC,MAAM;IACvC,IAAIiK,WAAW,CAACrH,MAAM,KAAK,CAAC,EAAE,OAAO,KAAK;IAC1C,IAAI,CAACjB,SAAS,CAACiF,KAAK,CAACrE,YAAY,CAACxB,OAAO,CAACqJ,qBAAqB,EAAE,OAAO,KAAK;IAC7E,IAAI,CAACzI,SAAS,CAACiF,KAAK,CAACrE,YAAY,CAACxB,OAAO,CAACsJ,oBAAoB,CAACC,GAAG,CAAC/J,mBAAmB,CAACgK,MAAM,CAAC,EAAE,OAAO,KAAK;IAC5G,OAAO,IAAI;EACb,CAAC,CAAC;EAEFpL,SAAS,CAAC,MAAM;IACd,IAAIgL,kBAAkB,EAAEJ,OAAO,CAAC;MAAES,IAAI,EAAE;IAAyB,CAAC,CAAC;EACrE,CAAC,EAAE,CAACL,kBAAkB,CAAC,CAAC;EAExB,IAAI,CAACA,kBAAkB,EAAE,OAAO,IAAI;EACpC,oBACElL,KAAA,CAAA4D,aAAA,CAACxD,GAAG;IAACuK,iBAAiB,EAAE,EAAG;IAACa,SAAS,EAAE,CAAE;IAACZ,YAAY,EAAE;EAAG,gBACzD5K,KAAA,CAAA4D,aAAA,CAACrD,qBAAqB;IAACyK,WAAW,EAAEA;EAAY,EAAG,CAC/C;AAEV,CAAC;AAED,4BAAehL,KAAK,CAACyL,IAAI,CAAC7J,2BAA2B,CAAC"}