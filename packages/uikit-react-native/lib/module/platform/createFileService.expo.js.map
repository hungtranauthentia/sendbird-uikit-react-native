{"version":3,"names":["getFileType","SBUError","expoBackwardUtils","expoPermissionGranted","createExpoFileService","_ref","imagePickerModule","documentPickerModule","mediaLibraryModule","fsModule","ExpoFileServiceInterface","hasCameraPermission","res","getCameraPermissionsAsync","requestCameraPermission","requestCameraPermissionsAsync","hasMediaLibraryPermission","type","perms","getMediaLibraryPermissionsAsync","requestMediaLibraryPermission","requestMediaLibraryPermissionsAsync","openCamera","options","hasPermission","granted","_options$onOpenFailur","onOpenFailure","call","PERMISSIONS_DENIED","response","launchCameraAsync","mediaTypes","mediaType","MediaTypeOptions","Images","Videos","All","imagePicker","isCanceled","file","toFilePickerResponses","openMediaLibrary","_options$onOpenFailur2","selectionLimit","launchImageLibraryAsync","openDocument","getDocumentAsync","documentPicker","e","_options$onOpenFailur3","UNKNOWN","save","Error","basePath","documentDirectory","cacheDirectory","downloadPath","fileName","downloadAsync","fileUrl","fileType","match","saveToLibraryAsync","uri","createRecordFilePath","customExtension","arguments","length","undefined","filename","Date","now","recordFilePath"],"sources":["createFileService.expo.ts"],"sourcesContent":["import type * as ExpoDocumentPicker from 'expo-document-picker';\nimport type * as ExpoFs from 'expo-file-system';\nimport type * as ExpoImagePicker from 'expo-image-picker';\nimport type * as ExpoMediaLibrary from 'expo-media-library';\n\nimport { getFileType } from '@sendbird/uikit-utils';\n\nimport SBUError from '../libs/SBUError';\nimport expoBackwardUtils from '../utils/expoBackwardUtils';\nimport type { ExpoMediaLibraryPermissionResponse, ExpoPermissionResponse } from '../utils/expoPermissionGranted';\nimport expoPermissionGranted from '../utils/expoPermissionGranted';\nimport type {\n  FilePickerResponse,\n  FileServiceInterface,\n  OpenCameraOptions,\n  OpenDocumentOptions,\n  OpenMediaLibraryOptions,\n  SaveOptions,\n} from './types';\n\nconst createExpoFileService = ({\n  imagePickerModule,\n  documentPickerModule,\n  mediaLibraryModule,\n  fsModule,\n}: {\n  imagePickerModule: typeof ExpoImagePicker;\n  documentPickerModule: typeof ExpoDocumentPicker;\n  mediaLibraryModule: typeof ExpoMediaLibrary;\n  fsModule: typeof ExpoFs;\n}): FileServiceInterface => {\n  class ExpoFileServiceInterface implements FileServiceInterface {\n    async hasCameraPermission(): Promise<boolean> {\n      const res = (await imagePickerModule.getCameraPermissionsAsync()) as ExpoPermissionResponse;\n      return expoPermissionGranted([res]);\n    }\n    async requestCameraPermission(): Promise<boolean> {\n      const res = (await imagePickerModule.requestCameraPermissionsAsync()) as ExpoPermissionResponse;\n      return expoPermissionGranted([res]);\n    }\n    async hasMediaLibraryPermission(type: 'write' | 'read'): Promise<boolean> {\n      const perms = (await imagePickerModule.getMediaLibraryPermissionsAsync(\n        type === 'write',\n      )) as ExpoMediaLibraryPermissionResponse;\n      return expoPermissionGranted([perms]);\n    }\n    async requestMediaLibraryPermission(type: 'write' | 'read'): Promise<boolean> {\n      const perms = (await imagePickerModule.requestMediaLibraryPermissionsAsync(\n        type === 'write',\n      )) as ExpoMediaLibraryPermissionResponse;\n      return expoPermissionGranted([perms]);\n    }\n\n    async openCamera(options?: OpenCameraOptions): Promise<FilePickerResponse> {\n      const hasPermission = await this.hasCameraPermission();\n      if (!hasPermission) {\n        const granted = await this.requestCameraPermission();\n        if (!granted) {\n          options?.onOpenFailure?.(SBUError.PERMISSIONS_DENIED);\n          return null;\n        }\n      }\n\n      const response = await imagePickerModule.launchCameraAsync({\n        mediaTypes: (() => {\n          switch (options?.mediaType) {\n            case 'photo':\n              return imagePickerModule.MediaTypeOptions.Images;\n            case 'video':\n              return imagePickerModule.MediaTypeOptions.Videos;\n            case 'all':\n              return imagePickerModule.MediaTypeOptions.All;\n            default:\n              return imagePickerModule.MediaTypeOptions.Images;\n          }\n        })(),\n      });\n\n      if (expoBackwardUtils.imagePicker.isCanceled(response)) return null;\n\n      const [file] = await expoBackwardUtils.imagePicker.toFilePickerResponses(response, fsModule);\n      return file;\n    }\n    async openMediaLibrary(options: OpenMediaLibraryOptions) {\n      const hasPermission = await this.hasMediaLibraryPermission('read');\n      if (!hasPermission) {\n        const granted = await this.requestMediaLibraryPermission('read');\n        if (!granted) {\n          options?.onOpenFailure?.(SBUError.PERMISSIONS_DENIED);\n          return null;\n        }\n      }\n\n      const selectionLimit = options?.selectionLimit || 1;\n      const response = await imagePickerModule.launchImageLibraryAsync({\n        selectionLimit,\n        mediaTypes: (() => {\n          switch (options?.mediaType) {\n            case 'photo':\n              return imagePickerModule.MediaTypeOptions.Images;\n            case 'video':\n              return imagePickerModule.MediaTypeOptions.Videos;\n            case 'all':\n              return imagePickerModule.MediaTypeOptions.All;\n            default:\n              return imagePickerModule.MediaTypeOptions.Images;\n          }\n        })(),\n      });\n      if (expoBackwardUtils.imagePicker.isCanceled(response)) return null;\n      return expoBackwardUtils.imagePicker.toFilePickerResponses(response, fsModule);\n    }\n\n    async openDocument(options?: OpenDocumentOptions): Promise<FilePickerResponse> {\n      try {\n        const response = await documentPickerModule.getDocumentAsync({ type: '*/*' });\n        if (expoBackwardUtils.documentPicker.isCanceled(response)) return null;\n\n        const [file] = await expoBackwardUtils.documentPicker.toFilePickerResponses(response);\n        return file;\n      } catch (e) {\n        options?.onOpenFailure?.(SBUError.UNKNOWN, e);\n        return null;\n      }\n    }\n\n    async save(options: SaveOptions): Promise<string> {\n      const hasPermission = await this.hasMediaLibraryPermission('write');\n      if (!hasPermission) {\n        const granted = await this.requestMediaLibraryPermission('write');\n        if (!granted) throw new Error('Permission not granted');\n      }\n\n      const basePath = fsModule.documentDirectory || fsModule.cacheDirectory;\n      if (!basePath) throw new Error('Cannot determine directory');\n\n      const downloadPath = `${basePath}/${options.fileName}`;\n\n      const response = await fsModule.downloadAsync(options.fileUrl, downloadPath);\n      if (getFileType(options.fileType || '').match(/video|image/)) {\n        await mediaLibraryModule.saveToLibraryAsync(response.uri);\n      }\n      return response.uri;\n    }\n    createRecordFilePath(customExtension = 'm4a'): { recordFilePath: string; uri: string } {\n      const basePath = fsModule.cacheDirectory;\n      if (!basePath) throw new Error('Cannot determine directory');\n\n      const filename = `record-${Date.now()}.${customExtension}`;\n      return {\n        uri: `${basePath}/${filename}`,\n        recordFilePath: `${basePath}/${filename}`,\n      };\n    }\n  }\n\n  return new ExpoFileServiceInterface();\n};\n\nexport default createExpoFileService;\n"],"mappings":"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"}