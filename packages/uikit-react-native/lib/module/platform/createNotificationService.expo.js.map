{"version":3,"names":["createExpoNotificationService","messagingModule","authorizedStatus","IosAuthorizationStatus","AUTHORIZED","PROVISIONAL","getAPNSToken","response","getDevicePushTokenAsync","data","getFCMToken","hasPushPermission","_status$ios","status","getPermissionsAsync","Boolean","granted","ios","includes","requestPushPermission","_status$ios2","requestPermissionsAsync","onTokenRefresh","handler","subscription","addPushTokenListener","_ref","removePushTokenSubscription"],"sources":["createNotificationService.expo.ts"],"sourcesContent":["import type * as ExpoNotification from 'expo-notifications';\n\nimport type { ExpoPushPermissionResponse } from '../utils/expoPermissionGranted';\nimport type { NotificationServiceInterface } from './types';\n\nconst createExpoNotificationService = (messagingModule: typeof ExpoNotification): NotificationServiceInterface => {\n  const authorizedStatus = [\n    messagingModule.IosAuthorizationStatus.AUTHORIZED,\n    messagingModule.IosAuthorizationStatus.PROVISIONAL,\n  ];\n\n  return {\n    async getAPNSToken(): Promise<string | null> {\n      const response = await messagingModule.getDevicePushTokenAsync();\n      return response.data;\n    },\n    async getFCMToken(): Promise<string | null> {\n      const response = await messagingModule.getDevicePushTokenAsync();\n      return response.data;\n    },\n    async hasPushPermission(): Promise<boolean> {\n      const status = (await messagingModule.getPermissionsAsync()) as ExpoPushPermissionResponse;\n      return Boolean(status.granted || (status.ios?.status && authorizedStatus.includes(status.ios.status)));\n    },\n    async requestPushPermission(): Promise<boolean> {\n      const status = (await messagingModule.requestPermissionsAsync()) as ExpoPushPermissionResponse;\n      return Boolean(status.granted || (status.ios?.status && authorizedStatus.includes(status.ios.status)));\n    },\n    onTokenRefresh(handler: (token: string) => void): () => void | undefined {\n      const subscription = messagingModule.addPushTokenListener(({ data }) => handler(data));\n      return () => messagingModule.removePushTokenSubscription(subscription);\n    },\n  };\n};\n\nexport default createExpoNotificationService;\n"],"mappings":"AAKA,MAAMA,6BAA6B,GAAIC,eAAwC,IAAmC;EAChH,MAAMC,gBAAgB,GAAG,CACvBD,eAAe,CAACE,sBAAsB,CAACC,UAAU,EACjDH,eAAe,CAACE,sBAAsB,CAACE,WAAW,CACnD;EAED,OAAO;IACL,MAAMC,YAAYA,CAAA,EAA2B;MAC3C,MAAMC,QAAQ,GAAG,MAAMN,eAAe,CAACO,uBAAuB,EAAE;MAChE,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC;IACD,MAAMC,WAAWA,CAAA,EAA2B;MAC1C,MAAMH,QAAQ,GAAG,MAAMN,eAAe,CAACO,uBAAuB,EAAE;MAChE,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC;IACD,MAAME,iBAAiBA,CAAA,EAAqB;MAAA,IAAAC,WAAA;MAC1C,MAAMC,MAAM,GAAI,MAAMZ,eAAe,CAACa,mBAAmB,EAAiC;MAC1F,OAAOC,OAAO,CAACF,MAAM,CAACG,OAAO,IAAK,EAAAJ,WAAA,GAAAC,MAAM,CAACI,GAAG,cAAAL,WAAA,uBAAVA,WAAA,CAAYC,MAAM,KAAIX,gBAAgB,CAACgB,QAAQ,CAACL,MAAM,CAACI,GAAG,CAACJ,MAAM,CAAE,CAAC;IACxG,CAAC;IACD,MAAMM,qBAAqBA,CAAA,EAAqB;MAAA,IAAAC,YAAA;MAC9C,MAAMP,MAAM,GAAI,MAAMZ,eAAe,CAACoB,uBAAuB,EAAiC;MAC9F,OAAON,OAAO,CAACF,MAAM,CAACG,OAAO,IAAK,EAAAI,YAAA,GAAAP,MAAM,CAACI,GAAG,cAAAG,YAAA,uBAAVA,YAAA,CAAYP,MAAM,KAAIX,gBAAgB,CAACgB,QAAQ,CAACL,MAAM,CAACI,GAAG,CAACJ,MAAM,CAAE,CAAC;IACxG,CAAC;IACDS,cAAcA,CAACC,OAAgC,EAA0B;MACvE,MAAMC,YAAY,GAAGvB,eAAe,CAACwB,oBAAoB,CAACC,IAAA;QAAA,IAAC;UAAEjB;QAAK,CAAC,GAAAiB,IAAA;QAAA,OAAKH,OAAO,CAACd,IAAI,CAAC;MAAA,EAAC;MACtF,OAAO,MAAMR,eAAe,CAAC0B,2BAA2B,CAACH,YAAY,CAAC;IACxE;EACF,CAAC;AACH,CAAC;AAED,eAAexB,6BAA6B"}