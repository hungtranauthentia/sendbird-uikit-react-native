{"version":3,"names":["React","useRef","useChannelHandler","useUserList","Icon","useActionMenu","ifOperator","ifThenOr","isDifferentChannel","useFreshCallback","useUniqHandlerId","StatusComposition","UserActionBar","createUserListModule","useLocalization","useSendbirdChat","useUserProfile","RETURN_EMPTY_STRING","createGroupChannelMembersFragment","initModule","UserListModule","_ref","channel","onPressHeaderLeft","onPressHeaderRight","renderUser","sortComparator","queryCreator","createMemberListQuery","limit","handlerId","refreshSchedule","STRINGS","sdk","currentUser","openMenu","show","users","refresh","loading","next","error","upsertUser","deleteUser","onUserLeft","eventChannel","user","userId","onUserBanned","onOperatorUpdated","current","clearTimeout","setTimeout","onUserMuted","isGroupChannel","memberFromChannel","members","find","it","memberFromList","isMuted","onUserUnmuted","_renderUser","selectedUsers","setSelectedUsers","createElement","muted","uri","profileUrl","label","role","LABELS","USER_BAR_OPERATOR","name","nickname","USER_NO_NAME","USER_BAR_ME_POSTFIX","disabled","onPressActionMenu","myRole","menuItems","push","title","UNREGISTER_OPERATOR","REGISTER_AS_OPERATOR","onPress","removeOperators","addOperators","isBroadcast","UNMUTE","MUTE","unmuteUser","muteUser","BAN","style","banUser","onPressAvatar","Provider","headerRight","headerTitle","GROUP_CHANNEL_MEMBERS","HEADER_TITLE","Header","shouldActivateHeaderRight","right","icon","LoadingComponent","StatusLoading","Boolean","ErrorComponent","StatusError","onPressRetry","List","onLoadNext","ListEmptyComponent","StatusEmpty"],"sources":["createGroupChannelMembersFragment.tsx"],"sourcesContent":["import React, { useRef } from 'react';\n\nimport { useChannelHandler, useUserList } from '@sendbird/uikit-chat-hooks';\nimport type { ActionMenuItem } from '@sendbird/uikit-react-native-foundation';\nimport { Icon, useActionMenu } from '@sendbird/uikit-react-native-foundation';\nimport type { SendbirdMember } from '@sendbird/uikit-utils';\nimport { ifOperator, ifThenOr, isDifferentChannel, useFreshCallback, useUniqHandlerId } from '@sendbird/uikit-utils';\n\nimport StatusComposition from '../components/StatusComposition';\nimport UserActionBar from '../components/UserActionBar';\nimport type { GroupChannelMembersFragment } from '../domain/groupChannelUserList/types';\nimport createUserListModule from '../domain/userList/module/createUserListModule';\nimport type { UserListModule } from '../domain/userList/types';\nimport { useLocalization, useSendbirdChat, useUserProfile } from '../hooks/useContext';\n\nconst RETURN_EMPTY_STRING = () => '';\n\nconst createGroupChannelMembersFragment = (\n  initModule?: Partial<UserListModule<SendbirdMember>>,\n): GroupChannelMembersFragment => {\n  const UserListModule = createUserListModule<SendbirdMember>(initModule);\n\n  return ({\n    channel,\n    onPressHeaderLeft,\n    onPressHeaderRight,\n    renderUser,\n    sortComparator,\n    queryCreator = () => channel.createMemberListQuery({ limit: 20 }),\n  }) => {\n    const handlerId = useUniqHandlerId('GroupChannelMembersFragment');\n\n    const refreshSchedule = useRef<NodeJS.Timeout>();\n    const { STRINGS } = useLocalization();\n    const { sdk, currentUser } = useSendbirdChat();\n    const { openMenu } = useActionMenu();\n    const { show } = useUserProfile();\n\n    const { users, refresh, loading, next, error, upsertUser, deleteUser } = useUserList(sdk, {\n      queryCreator,\n      sortComparator,\n    });\n\n    useChannelHandler(sdk, handlerId, {\n      onUserLeft(eventChannel, user) {\n        if (isDifferentChannel(eventChannel, channel)) return;\n        deleteUser(user.userId);\n      },\n      onUserBanned(eventChannel, user) {\n        if (isDifferentChannel(eventChannel, channel)) return;\n        deleteUser(user.userId);\n      },\n      onOperatorUpdated(eventChannel) {\n        if (isDifferentChannel(eventChannel, channel)) return;\n        if (refreshSchedule.current) clearTimeout(refreshSchedule.current);\n        refreshSchedule.current = setTimeout(() => refresh(), 500);\n      },\n      onUserMuted(eventChannel, user) {\n        if (isDifferentChannel(eventChannel, channel) || !eventChannel.isGroupChannel()) return;\n\n        const memberFromChannel = eventChannel.members.find((it) => it.userId === user.userId);\n        if (memberFromChannel) return upsertUser(memberFromChannel);\n\n        const memberFromList = users.find((it) => it.userId === user.userId);\n        if (memberFromList) {\n          memberFromList.isMuted = true;\n          upsertUser(memberFromList);\n        }\n      },\n      onUserUnmuted(eventChannel, user) {\n        if (isDifferentChannel(eventChannel, channel) || !eventChannel.isGroupChannel()) return;\n\n        const memberFromChannel = eventChannel.members.find((it) => it.userId === user.userId);\n        if (memberFromChannel) return upsertUser(memberFromChannel);\n\n        const memberFromList = users.find((it) => it.userId === user.userId);\n        if (memberFromList) {\n          memberFromList.isMuted = false;\n          upsertUser(memberFromList);\n        }\n      },\n    });\n\n    const _renderUser: NonNullable<typeof renderUser> = useFreshCallback((user, selectedUsers, setSelectedUsers) => {\n      if (renderUser) return renderUser(user, selectedUsers, setSelectedUsers);\n\n      return (\n        <UserActionBar\n          muted={user.isMuted}\n          uri={user.profileUrl}\n          label={user.role === 'operator' ? STRINGS.LABELS.USER_BAR_OPERATOR : ''}\n          name={\n            (user.nickname || STRINGS.LABELS.USER_NO_NAME) +\n            (user.userId === currentUser?.userId ? STRINGS.LABELS.USER_BAR_ME_POSTFIX : '')\n          }\n          disabled={user.userId === currentUser?.userId}\n          onPressActionMenu={ifOperator(channel.myRole, () => {\n            const menuItems: ActionMenuItem['menuItems'] = [];\n\n            menuItems.push({\n              title: ifOperator(user.role, STRINGS.LABELS.UNREGISTER_OPERATOR, STRINGS.LABELS.REGISTER_AS_OPERATOR),\n              onPress: ifOperator(\n                user.role,\n                () => channel.removeOperators([user.userId]),\n                () => channel.addOperators([user.userId]),\n              ),\n            });\n\n            if (!channel.isBroadcast) {\n              menuItems.push({\n                title: ifThenOr(user.isMuted, STRINGS.LABELS.UNMUTE, STRINGS.LABELS.MUTE),\n                onPress: ifThenOr(\n                  user.isMuted,\n                  () => channel.unmuteUser(user),\n                  () => channel.muteUser(user),\n                ),\n              });\n            }\n\n            menuItems.push({\n              title: STRINGS.LABELS.BAN,\n              style: 'destructive',\n              onPress: () => channel.banUser(user),\n            });\n\n            openMenu({ title: user.nickname || STRINGS.LABELS.USER_NO_NAME, menuItems });\n          })}\n          onPressAvatar={() => show(user)}\n        />\n      );\n    });\n\n    return (\n      <UserListModule.Provider\n        headerRight={RETURN_EMPTY_STRING}\n        headerTitle={STRINGS.GROUP_CHANNEL_MEMBERS.HEADER_TITLE}\n      >\n        <UserListModule.Header\n          shouldActivateHeaderRight={() => true}\n          onPressHeaderLeft={onPressHeaderLeft}\n          right={<Icon icon={'plus'} />}\n          onPressHeaderRight={async () => onPressHeaderRight()}\n        />\n        <StatusComposition\n          loading={loading}\n          LoadingComponent={<UserListModule.StatusLoading />}\n          error={Boolean(error)}\n          ErrorComponent={<UserListModule.StatusError onPressRetry={refresh} />}\n        >\n          <UserListModule.List\n            users={users}\n            renderUser={_renderUser}\n            onLoadNext={next}\n            ListEmptyComponent={<UserListModule.StatusEmpty />}\n          />\n        </StatusComposition>\n      </UserListModule.Provider>\n    );\n  };\n};\n\nexport default createGroupChannelMembersFragment;\n"],"mappings":"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"}