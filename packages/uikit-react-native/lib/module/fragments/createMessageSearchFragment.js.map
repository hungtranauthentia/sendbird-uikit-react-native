{"version":3,"names":["React","useRef","useState","MessageSearchOrder","Logger","NOOP","useFreshCallback","useSafeAreaPadding","MessageSearchResultItem","StatusComposition","createMessageSearchModule","useSendbirdChat","getMessageSearchQuery","sdk","options","queryCreator","createMessageSearchQuery","createMessageSearchFragment","initModule","MessageSearchModule","_ref","onPressHeaderLeft","channel","renderSearchResultItem","onPressSearchResultItem","padding","keyword","setKeyword","search","searchResults","loading","next","error","query","useMessageSearch","renderItem","props","createElement","Provider","Header","onChangeKeyword","onPressHeaderRight","LoadingComponent","StatusLoading","Boolean","ErrorComponent","StatusError","onPressRetry","List","messages","flatListProps","keyboardDismissMode","keyboardShouldPersistTaps","onEndReached","ListEmptyComponent","StatusEmpty","contentContainerStyle","flexGrow","_ref2","setQuery","setLoading","setError","setSearchResults","queryInProgress","length","current","channelUrl","url","messageTimestampFrom","messageOffsetTimestamp","order","TIMESTAMP","result","err","warn","hasNext","prev"],"sources":["createMessageSearchFragment.tsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\n\nimport { MessageSearchOrder } from '@sendbird/chat/message';\nimport {\n  Logger,\n  NOOP,\n  SendbirdBaseMessage,\n  SendbirdChatSDK,\n  SendbirdGroupChannel,\n  SendbirdMessageSearchQuery,\n  useFreshCallback,\n  useSafeAreaPadding,\n} from '@sendbird/uikit-utils';\n\nimport MessageSearchResultItem from '../components/MessageSearchResultItem';\nimport StatusComposition from '../components/StatusComposition';\nimport { createMessageSearchModule } from '../domain/messageSearch';\nimport type { MessageSearchFragment, MessageSearchModule, MessageSearchProps } from '../domain/messageSearch/types';\nimport { useSendbirdChat } from '../hooks/useContext';\n\ntype DefaultMessageSearchQueryParams = {\n  keyword: string;\n  channelUrl: string;\n  messageTimestampFrom: number;\n  order: MessageSearchOrder;\n};\n\ntype SearchQueryOptions = DefaultMessageSearchQueryParams & {\n  queryCreator?: (params: DefaultMessageSearchQueryParams) => SendbirdMessageSearchQuery;\n};\n\nfunction getMessageSearchQuery(sdk: SendbirdChatSDK, options: SearchQueryOptions) {\n  if (options.queryCreator) return options.queryCreator(options);\n  return sdk.createMessageSearchQuery(options);\n}\n\nconst createMessageSearchFragment = (initModule?: Partial<MessageSearchModule>): MessageSearchFragment => {\n  const MessageSearchModule = createMessageSearchModule(initModule);\n\n  return ({ onPressHeaderLeft = NOOP, channel, queryCreator, renderSearchResultItem, onPressSearchResultItem }) => {\n    const padding = useSafeAreaPadding(['left', 'right', 'bottom']);\n\n    const { sdk } = useSendbirdChat();\n    const { keyword, setKeyword, search, searchResults, loading, next, error, query } = useMessageSearch(sdk, {\n      channel,\n      queryCreator,\n    });\n\n    const renderItem: MessageSearchProps['List']['renderSearchResultItem'] = useFreshCallback((props) => {\n      if (renderSearchResultItem) return renderSearchResultItem(props);\n      return <MessageSearchResultItem {...props} />;\n    });\n\n    return (\n      <MessageSearchModule.Provider>\n        <MessageSearchModule.Header\n          keyword={keyword}\n          onChangeKeyword={setKeyword}\n          onPressHeaderLeft={onPressHeaderLeft}\n          onPressHeaderRight={search}\n        />\n        <StatusComposition\n          loading={loading}\n          LoadingComponent={<MessageSearchModule.StatusLoading />}\n          error={Boolean(error)}\n          ErrorComponent={<MessageSearchModule.StatusError onPressRetry={search} />}\n        >\n          {query && (\n            <MessageSearchModule.List\n              channel={channel}\n              onPressSearchResultItem={onPressSearchResultItem}\n              messages={searchResults}\n              renderSearchResultItem={renderItem}\n              flatListProps={{\n                keyboardDismissMode: 'on-drag',\n                keyboardShouldPersistTaps: 'handled',\n                onEndReached: next,\n                ListEmptyComponent: MessageSearchModule.StatusEmpty,\n                contentContainerStyle: { flexGrow: 1, ...padding },\n              }}\n            />\n          )}\n        </StatusComposition>\n      </MessageSearchModule.Provider>\n    );\n  };\n};\n\nconst useMessageSearch = (\n  sdk: SendbirdChatSDK,\n  { channel, queryCreator }: { channel: SendbirdGroupChannel; queryCreator: SearchQueryOptions['queryCreator'] },\n) => {\n  const [query, setQuery] = useState<SendbirdMessageSearchQuery>();\n  const [keyword, setKeyword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<unknown>(null);\n  const [searchResults, setSearchResults] = useState<SendbirdBaseMessage[]>([]);\n  const queryInProgress = useRef(false);\n\n  const search = useFreshCallback(async () => {\n    if (keyword.length <= 0) return;\n    if (queryInProgress.current) return;\n\n    const query = getMessageSearchQuery(sdk, {\n      keyword,\n      channelUrl: channel.url,\n      messageTimestampFrom: channel.messageOffsetTimestamp,\n      order: MessageSearchOrder.TIMESTAMP,\n      queryCreator,\n    });\n\n    setQuery(query);\n    setLoading(true);\n    setError(null);\n\n    try {\n      queryInProgress.current = true;\n      const result = await query.next();\n      setSearchResults(result);\n    } catch (err) {\n      Logger.warn('[MessageSearchFragment] search failure', err);\n      setError(err);\n    } finally {\n      queryInProgress.current = false;\n      setLoading(false);\n    }\n  });\n\n  const next = useFreshCallback(async () => {\n    if (!query?.hasNext) return;\n    if (queryInProgress.current) return;\n\n    try {\n      queryInProgress.current = true;\n      const result = await query.next();\n      setSearchResults((prev) => [...prev, ...result]);\n    } catch (err) {\n      Logger.warn('[MessageSearchFragment] next failure', err);\n      setError(err);\n    } finally {\n      queryInProgress.current = false;\n    }\n  });\n\n  return {\n    keyword,\n    setKeyword,\n\n    query,\n    loading,\n    error,\n    searchResults,\n\n    search,\n    next,\n  };\n};\n\nexport default createMessageSearchFragment;\n"],"mappings":"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"}