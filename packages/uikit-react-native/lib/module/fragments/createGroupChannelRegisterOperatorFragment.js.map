{"version":3,"names":["React","useCallback","TouchableOpacity","useUserList","StatusComposition","UserSelectableBar","createUserListModule","useLocalization","useSendbirdChat","createGroupChannelRegisterOperatorFragment","initModule","UserListModule","_ref","channel","onPressHeaderLeft","sortComparator","renderUser","onPressHeaderRight","queryCreator","createMemberListQuery","limit","sdk","currentUser","STRINGS","users","refreshing","refresh","next","error","loading","_renderUser","user","selectedUsers","setSelectedUsers","userIdx","findIndex","u","userId","isSelected","isOperator","role","createElement","activeOpacity","disabled","onPress","_ref2","draft","splice","push","uri","profileUrl","name","nickname","LABELS","USER_NO_NAME","USER_BAR_ME_POSTFIX","selected","Provider","headerRight","GROUP_CHANNEL_REGISTER_OPERATOR","HEADER_RIGHT","headerTitle","HEADER_TITLE","Header","shouldActivateHeaderRight","length","addOperators","map","it","Boolean","LoadingComponent","StatusLoading","ErrorComponent","StatusError","onPressRetry","List","onLoadNext","onRefresh","ListEmptyComponent","StatusEmpty"],"sources":["createGroupChannelRegisterOperatorFragment.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { TouchableOpacity } from 'react-native';\n\nimport { useUserList } from '@sendbird/uikit-chat-hooks';\nimport type { SendbirdMember } from '@sendbird/uikit-utils';\n\nimport StatusComposition from '../components/StatusComposition';\nimport UserSelectableBar from '../components/UserSelectableBar';\nimport type { GroupChannelRegisterOperatorFragment } from '../domain/groupChannelUserList/types';\nimport createUserListModule from '../domain/userList/module/createUserListModule';\nimport type { UserListModule } from '../domain/userList/types';\nimport { useLocalization, useSendbirdChat } from '../hooks/useContext';\n\nconst createGroupChannelRegisterOperatorFragment = (\n  initModule?: Partial<UserListModule<SendbirdMember>>,\n): GroupChannelRegisterOperatorFragment => {\n  const UserListModule = createUserListModule<SendbirdMember>(initModule);\n\n  return ({\n    channel,\n    onPressHeaderLeft,\n    sortComparator,\n    renderUser,\n    onPressHeaderRight,\n    queryCreator = () => channel.createMemberListQuery({ limit: 20 }),\n  }) => {\n    const { sdk, currentUser } = useSendbirdChat();\n    const { STRINGS } = useLocalization();\n    const { users, refreshing, refresh, next, error, loading } = useUserList(sdk, { queryCreator, sortComparator });\n\n    const _renderUser: NonNullable<typeof renderUser> = useCallback(\n      (user, selectedUsers, setSelectedUsers) => {\n        if (renderUser) return renderUser(user, selectedUsers, setSelectedUsers);\n\n        const userIdx = selectedUsers.findIndex((u) => u.userId === user.userId);\n        const isSelected = userIdx > -1;\n        const isOperator = user.role === 'operator';\n\n        return (\n          <TouchableOpacity\n            activeOpacity={0.7}\n            disabled={isOperator}\n            onPress={() => {\n              setSelectedUsers(([...draft]) => {\n                if (isSelected) draft.splice(userIdx, 1);\n                else draft.push(user);\n                return draft;\n              });\n            }}\n          >\n            <UserSelectableBar\n              uri={user.profileUrl}\n              name={\n                (user.nickname || STRINGS.LABELS.USER_NO_NAME) +\n                (user.userId === currentUser?.userId ? STRINGS.LABELS.USER_BAR_ME_POSTFIX : '')\n              }\n              selected={isOperator || isSelected}\n              disabled={isOperator}\n            />\n          </TouchableOpacity>\n        );\n      },\n      [channel, renderUser],\n    );\n    return (\n      <UserListModule.Provider\n        headerRight={(selectedUsers) => STRINGS.GROUP_CHANNEL_REGISTER_OPERATOR.HEADER_RIGHT({ selectedUsers })}\n        headerTitle={STRINGS.GROUP_CHANNEL_REGISTER_OPERATOR.HEADER_TITLE}\n      >\n        <UserListModule.Header\n          shouldActivateHeaderRight={(selectedUsers) => selectedUsers.length > 0}\n          onPressHeaderLeft={onPressHeaderLeft}\n          onPressHeaderRight={async (users) => {\n            await channel.addOperators(users.map((it) => it.userId));\n            onPressHeaderRight(channel);\n          }}\n        />\n        <StatusComposition\n          loading={loading}\n          error={Boolean(error)}\n          LoadingComponent={<UserListModule.StatusLoading />}\n          ErrorComponent={<UserListModule.StatusError onPressRetry={() => refresh()} />}\n        >\n          <UserListModule.List\n            onLoadNext={next}\n            users={users}\n            renderUser={_renderUser}\n            onRefresh={refresh}\n            refreshing={refreshing}\n            ListEmptyComponent={<UserListModule.StatusEmpty />}\n          />\n        </StatusComposition>\n      </UserListModule.Provider>\n    );\n  };\n};\n\nexport default createGroupChannelRegisterOperatorFragment;\n"],"mappings":"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"}