{"version":3,"names":["React","GroupChannelFilter","useGroupChannelList","PASS","confirmAndMarkAsDelivered","useAppState","useFreshCallback","StatusComposition","GroupChannelPreviewContainer","createGroupChannelListModule","useSendbirdChat","createGroupChannelListFragment","initModule","GroupChannelListModule","_ref","onPressChannel","onPressCreateChannel","renderGroupChannelPreview","skipTypeSelection","flatListProps","menuItemCreator","channelListQueryParams","collectionCreator","sdk","sbOptions","markAsDeliveredWithChannel","groupChannels","loadMore","initialized","getCollectionCreator","markAsDelivered","status","appInfo","deliveryReceiptEnabled","forEach","_renderGroupChannelPreview","props","createElement","isChannelTypeAvailable","broadcastChannelEnabled","superGroupChannelEnabled","Provider","Header","loading","LoadingComponent","StatusLoading","List","onLoadNext","ListEmptyComponent","StatusEmpty","contentContainerStyle","flexGrow","TypeSelector","onSelectType","deprecatedCreatorProp","defaultParams","params","groupChannel","createGroupChannelCollection","filter"],"sources":["createGroupChannelListFragment.tsx"],"sourcesContent":["import React from 'react';\n\nimport { GroupChannelCollection, GroupChannelFilter } from '@sendbird/chat/groupChannel';\nimport { useGroupChannelList } from '@sendbird/uikit-tools';\nimport { PASS, SendbirdChatSDK, confirmAndMarkAsDelivered, useAppState, useFreshCallback } from '@sendbird/uikit-utils';\n\nimport StatusComposition from '../components/StatusComposition';\nimport GroupChannelPreviewContainer from '../containers/GroupChannelPreviewContainer';\nimport createGroupChannelListModule from '../domain/groupChannelList/module/createGroupChannelListModule';\nimport type {\n  GroupChannelListFragment,\n  GroupChannelListModule,\n  GroupChannelListProps,\n} from '../domain/groupChannelList/types';\nimport { useSendbirdChat } from '../hooks/useContext';\n\nconst createGroupChannelListFragment = (initModule?: Partial<GroupChannelListModule>): GroupChannelListFragment => {\n  const GroupChannelListModule = createGroupChannelListModule(initModule);\n  return ({\n    onPressChannel,\n    onPressCreateChannel,\n    renderGroupChannelPreview,\n    skipTypeSelection = false,\n    flatListProps = {},\n    menuItemCreator = PASS,\n    channelListQueryParams,\n    collectionCreator,\n  }) => {\n    const { sdk, sbOptions, markAsDeliveredWithChannel } = useSendbirdChat();\n    const { groupChannels, loadMore, initialized } = useGroupChannelList(sdk, {\n      collectionCreator: getCollectionCreator(sdk, channelListQueryParams, collectionCreator),\n      markAsDelivered: confirmAndMarkAsDelivered,\n    });\n\n    useAppState('change', (status) => {\n      if (sbOptions.appInfo.deliveryReceiptEnabled) {\n        if (status === 'active') groupChannels.forEach(markAsDeliveredWithChannel);\n      }\n    });\n\n    const _renderGroupChannelPreview: GroupChannelListProps['List']['renderGroupChannelPreview'] = useFreshCallback(\n      (props) => {\n        if (renderGroupChannelPreview) return renderGroupChannelPreview(props);\n        return <GroupChannelPreviewContainer {...props} />;\n      },\n    );\n\n    const isChannelTypeAvailable =\n      sbOptions.appInfo.broadcastChannelEnabled || sbOptions.appInfo.superGroupChannelEnabled;\n\n    return (\n      <GroupChannelListModule.Provider>\n        <GroupChannelListModule.Header />\n        <StatusComposition loading={!initialized} LoadingComponent={<GroupChannelListModule.StatusLoading />}>\n          <GroupChannelListModule.List\n            onPressChannel={onPressChannel}\n            menuItemCreator={menuItemCreator}\n            renderGroupChannelPreview={_renderGroupChannelPreview}\n            groupChannels={groupChannels}\n            onLoadNext={loadMore}\n            flatListProps={{\n              ListEmptyComponent: <GroupChannelListModule.StatusEmpty />,\n              contentContainerStyle: { flexGrow: 1 },\n              ...flatListProps,\n            }}\n          />\n        </StatusComposition>\n        <GroupChannelListModule.TypeSelector\n          skipTypeSelection={isChannelTypeAvailable ? skipTypeSelection : true}\n          onSelectType={onPressCreateChannel}\n        />\n      </GroupChannelListModule.Provider>\n    );\n  };\n};\n\nfunction getCollectionCreator(\n  sdk: SendbirdChatSDK,\n  channelListQueryParams?: GroupChannelListProps['Fragment']['channelListQueryParams'],\n  deprecatedCreatorProp?: () => GroupChannelCollection,\n) {\n  if (!channelListQueryParams && deprecatedCreatorProp) return deprecatedCreatorProp;\n\n  return (defaultParams: GroupChannelListProps['Fragment']['channelListQueryParams']) => {\n    const params = { ...defaultParams, ...channelListQueryParams };\n    return sdk.groupChannel.createGroupChannelCollection({\n      ...params,\n      filter: new GroupChannelFilter(params),\n    });\n  };\n}\n\nexport default createGroupChannelListFragment;\n"],"mappings":"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"}