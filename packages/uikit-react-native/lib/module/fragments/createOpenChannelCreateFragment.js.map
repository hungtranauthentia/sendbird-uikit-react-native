{"version":3,"names":["React","useState","StyleSheet","Box","useUIKitTheme","NOOP","PASS","createOpenChannelCreateModule","useSendbirdChat","createOpenChannelCreateFragment","initModule","OpenChannelCreateModule","_ref","onPressHeaderLeft","onBeforeCreateChannel","onCreateChannel","sdk","currentUser","palette","loading","setLoading","channelName","setChannelName","channelCoverFile","setChannelCoverFile","undefined","shouldActivateHeaderRight","Boolean","trim","onPressHeaderRight","params","name","operatorUserIds","userId","coverUrlOrImage","processedParams","channel","openChannel","createChannel","createElement","Provider","Header","ProfileInput","onChangeChannelName","onChangeChannelCoverFile","backgroundColor","transparent","style","absoluteFill","alignItems","justifyContent","StatusLoading"],"sources":["createOpenChannelCreateFragment.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet } from 'react-native';\n\nimport { Box, useUIKitTheme } from '@sendbird/uikit-react-native-foundation';\nimport { NOOP, PASS, SendbirdOpenChannelCreateParams } from '@sendbird/uikit-utils';\n\nimport { createOpenChannelCreateModule } from '../domain/openChannelCreate';\nimport type { OpenChannelCreateFragment, OpenChannelCreateModule } from '../domain/openChannelCreate/types';\nimport { useSendbirdChat } from '../hooks/useContext';\nimport type { FileType } from '../platform/types';\n\nconst createOpenChannelCreateFragment = (initModule?: Partial<OpenChannelCreateModule>): OpenChannelCreateFragment => {\n  const OpenChannelCreateModule = createOpenChannelCreateModule(initModule);\n\n  return ({ onPressHeaderLeft = NOOP, onBeforeCreateChannel = PASS, onCreateChannel }) => {\n    const { sdk, currentUser } = useSendbirdChat();\n    const { palette } = useUIKitTheme();\n\n    const [loading, setLoading] = useState(false);\n    const [channelName, setChannelName] = useState('');\n    const [channelCoverFile, setChannelCoverFile] = useState<FileType | undefined>(undefined);\n\n    const shouldActivateHeaderRight = () => {\n      return Boolean(currentUser) && channelName.trim() !== '';\n    };\n\n    const onPressHeaderRight = async () => {\n      if (currentUser) {\n        try {\n          setLoading(true);\n          const params: SendbirdOpenChannelCreateParams = {\n            name: channelName,\n            operatorUserIds: [currentUser.userId],\n          };\n\n          if (channelCoverFile) params.coverUrlOrImage = channelCoverFile;\n\n          const processedParams = await onBeforeCreateChannel(params);\n          const channel = await sdk.openChannel.createChannel(processedParams);\n\n          setLoading(false);\n          onCreateChannel(channel);\n        } catch {\n          setLoading(false);\n        }\n      }\n    };\n\n    return (\n      <OpenChannelCreateModule.Provider>\n        <OpenChannelCreateModule.Header\n          onPressHeaderLeft={onPressHeaderLeft}\n          onPressHeaderRight={onPressHeaderRight}\n          shouldActivateHeaderRight={shouldActivateHeaderRight}\n        />\n        <OpenChannelCreateModule.ProfileInput\n          channelName={channelName}\n          onChangeChannelName={setChannelName}\n          channelCoverFile={channelCoverFile}\n          onChangeChannelCoverFile={setChannelCoverFile}\n        />\n        {loading && (\n          <Box\n            backgroundColor={palette.transparent}\n            style={StyleSheet.absoluteFill}\n            alignItems={'center'}\n            justifyContent={'center'}\n          >\n            <OpenChannelCreateModule.StatusLoading />\n          </Box>\n        )}\n      </OpenChannelCreateModule.Provider>\n    );\n  };\n};\n\nexport default createOpenChannelCreateFragment;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,cAAc;AAEzC,SAASC,GAAG,EAAEC,aAAa,QAAQ,yCAAyC;AAC5E,SAASC,IAAI,EAAEC,IAAI,QAAyC,uBAAuB;AAEnF,SAASC,6BAA6B,QAAQ,6BAA6B;AAE3E,SAASC,eAAe,QAAQ,qBAAqB;AAGrD,MAAMC,+BAA+B,GAAIC,UAA6C,IAAgC;EACpH,MAAMC,uBAAuB,GAAGJ,6BAA6B,CAACG,UAAU,CAAC;EAEzE,OAAOE,IAAA,IAAiF;IAAA,IAAhF;MAAEC,iBAAiB,GAAGR,IAAI;MAAES,qBAAqB,GAAGR,IAAI;MAAES;IAAgB,CAAC,GAAAH,IAAA;IACjF,MAAM;MAAEI,GAAG;MAAEC;IAAY,CAAC,GAAGT,eAAe,EAAE;IAC9C,MAAM;MAAEU;IAAQ,CAAC,GAAGd,aAAa,EAAE;IAEnC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;IAC7C,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;IAClD,MAAM,CAACsB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGvB,QAAQ,CAAuBwB,SAAS,CAAC;IAEzF,MAAMC,yBAAyB,GAAGA,CAAA,KAAM;MACtC,OAAOC,OAAO,CAACV,WAAW,CAAC,IAAII,WAAW,CAACO,IAAI,EAAE,KAAK,EAAE;IAC1D,CAAC;IAED,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAIZ,WAAW,EAAE;QACf,IAAI;UACFG,UAAU,CAAC,IAAI,CAAC;UAChB,MAAMU,MAAuC,GAAG;YAC9CC,IAAI,EAAEV,WAAW;YACjBW,eAAe,EAAE,CAACf,WAAW,CAACgB,MAAM;UACtC,CAAC;UAED,IAAIV,gBAAgB,EAAEO,MAAM,CAACI,eAAe,GAAGX,gBAAgB;UAE/D,MAAMY,eAAe,GAAG,MAAMrB,qBAAqB,CAACgB,MAAM,CAAC;UAC3D,MAAMM,OAAO,GAAG,MAAMpB,GAAG,CAACqB,WAAW,CAACC,aAAa,CAACH,eAAe,CAAC;UAEpEf,UAAU,CAAC,KAAK,CAAC;UACjBL,eAAe,CAACqB,OAAO,CAAC;QAC1B,CAAC,CAAC,MAAM;UACNhB,UAAU,CAAC,KAAK,CAAC;QACnB;MACF;IACF,CAAC;IAED,oBACEpB,KAAA,CAAAuC,aAAA,CAAC5B,uBAAuB,CAAC6B,QAAQ,qBAC/BxC,KAAA,CAAAuC,aAAA,CAAC5B,uBAAuB,CAAC8B,MAAM;MAC7B5B,iBAAiB,EAAEA,iBAAkB;MACrCgB,kBAAkB,EAAEA,kBAAmB;MACvCH,yBAAyB,EAAEA;IAA0B,EACrD,eACF1B,KAAA,CAAAuC,aAAA,CAAC5B,uBAAuB,CAAC+B,YAAY;MACnCrB,WAAW,EAAEA,WAAY;MACzBsB,mBAAmB,EAAErB,cAAe;MACpCC,gBAAgB,EAAEA,gBAAiB;MACnCqB,wBAAwB,EAAEpB;IAAoB,EAC9C,EACDL,OAAO,iBACNnB,KAAA,CAAAuC,aAAA,CAACpC,GAAG;MACF0C,eAAe,EAAE3B,OAAO,CAAC4B,WAAY;MACrCC,KAAK,EAAE7C,UAAU,CAAC8C,YAAa;MAC/BC,UAAU,EAAE,QAAS;MACrBC,cAAc,EAAE;IAAS,gBAEzBlD,KAAA,CAAAuC,aAAA,CAAC5B,uBAAuB,CAACwC,aAAa,OAAG,CAE5C,CACgC;EAEvC,CAAC;AACH,CAAC;AAED,eAAe1C,+BAA+B"}