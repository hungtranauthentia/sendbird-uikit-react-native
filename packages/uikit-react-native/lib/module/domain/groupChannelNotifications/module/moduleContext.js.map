{"version":3,"names":["React","createContext","ProviderLayout","useLocalization","GroupChannelNotificationsContexts","Fragment","headerTitle","channel","GroupChannelNotificationsContextsProvider","_ref","children","STRINGS","createElement","Provider","value","GROUP_CHANNEL_NOTIFICATIONS","HEADER_TITLE"],"sources":["moduleContext.tsx"],"sourcesContent":["import React, { createContext } from 'react';\n\nimport type { SendbirdGroupChannel } from '@sendbird/uikit-utils';\n\nimport ProviderLayout from '../../../components/ProviderLayout';\nimport { useLocalization } from '../../../hooks/useContext';\nimport type { GroupChannelNotificationsContextsType, GroupChannelNotificationsModule } from '../types';\n\nexport const GroupChannelNotificationsContexts: GroupChannelNotificationsContextsType = {\n  Fragment: createContext({\n    headerTitle: '',\n    channel: {} as SendbirdGroupChannel,\n  }),\n};\n\nexport const GroupChannelNotificationsContextsProvider: GroupChannelNotificationsModule['Provider'] = ({\n  children,\n  channel,\n}) => {\n  const { STRINGS } = useLocalization();\n\n  return (\n    <ProviderLayout>\n      <GroupChannelNotificationsContexts.Fragment.Provider\n        value={{ channel, headerTitle: STRINGS.GROUP_CHANNEL_NOTIFICATIONS.HEADER_TITLE }}\n      >\n        {children}\n      </GroupChannelNotificationsContexts.Fragment.Provider>\n    </ProviderLayout>\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,aAAa,QAAQ,OAAO;AAI5C,OAAOC,cAAc,MAAM,oCAAoC;AAC/D,SAASC,eAAe,QAAQ,2BAA2B;AAG3D,OAAO,MAAMC,iCAAwE,GAAG;EACtFC,QAAQ,eAAEJ,aAAa,CAAC;IACtBK,WAAW,EAAE,EAAE;IACfC,OAAO,EAAE,CAAC;EACZ,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,yCAAsF,GAAGC,IAAA,IAGhG;EAAA,IAHiG;IACrGC,QAAQ;IACRH;EACF,CAAC,GAAAE,IAAA;EACC,MAAM;IAAEE;EAAQ,CAAC,GAAGR,eAAe,EAAE;EAErC,oBACEH,KAAA,CAAAY,aAAA,CAACV,cAAc,qBACbF,KAAA,CAAAY,aAAA,CAACR,iCAAiC,CAACC,QAAQ,CAACQ,QAAQ;IAClDC,KAAK,EAAE;MAAEP,OAAO;MAAED,WAAW,EAAEK,OAAO,CAACI,2BAA2B,CAACC;IAAa;EAAE,GAEjFN,QAAQ,CAC2C,CACvC;AAErB,CAAC"}