{"version":3,"names":["React","createContext","ProviderLayout","useLocalization","OpenChannelModerationContexts","Fragment","headerTitle","channel","OpenChannelModerationContextsProvider","_ref","children","STRINGS","createElement","Provider","value","OPEN_CHANNEL_MODERATION","HEADER_TITLE"],"sources":["moduleContext.tsx"],"sourcesContent":["import React, { createContext } from 'react';\n\nimport type { SendbirdOpenChannel } from '@sendbird/uikit-utils';\n\nimport ProviderLayout from '../../../components/ProviderLayout';\nimport { useLocalization } from '../../../hooks/useContext';\nimport type { OpenChannelModerationContextsType, OpenChannelModerationModule } from '../types';\n\nexport const OpenChannelModerationContexts: OpenChannelModerationContextsType = {\n  Fragment: createContext({\n    headerTitle: '',\n    channel: {} as SendbirdOpenChannel,\n  }),\n};\n\nexport const OpenChannelModerationContextsProvider: OpenChannelModerationModule['Provider'] = ({\n  children,\n  channel,\n}) => {\n  const { STRINGS } = useLocalization();\n  return (\n    <ProviderLayout>\n      <OpenChannelModerationContexts.Fragment.Provider\n        value={{\n          headerTitle: STRINGS.OPEN_CHANNEL_MODERATION.HEADER_TITLE,\n          channel,\n        }}\n      >\n        {children}\n      </OpenChannelModerationContexts.Fragment.Provider>\n    </ProviderLayout>\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,aAAa,QAAQ,OAAO;AAI5C,OAAOC,cAAc,MAAM,oCAAoC;AAC/D,SAASC,eAAe,QAAQ,2BAA2B;AAG3D,OAAO,MAAMC,6BAAgE,GAAG;EAC9EC,QAAQ,eAAEJ,aAAa,CAAC;IACtBK,WAAW,EAAE,EAAE;IACfC,OAAO,EAAE,CAAC;EACZ,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,qCAA8E,GAAGC,IAAA,IAGxF;EAAA,IAHyF;IAC7FC,QAAQ;IACRH;EACF,CAAC,GAAAE,IAAA;EACC,MAAM;IAAEE;EAAQ,CAAC,GAAGR,eAAe,EAAE;EACrC,oBACEH,KAAA,CAAAY,aAAA,CAACV,cAAc,qBACbF,KAAA,CAAAY,aAAA,CAACR,6BAA6B,CAACC,QAAQ,CAACQ,QAAQ;IAC9CC,KAAK,EAAE;MACLR,WAAW,EAAEK,OAAO,CAACI,uBAAuB,CAACC,YAAY;MACzDT;IACF;EAAE,GAEDG,QAAQ,CACuC,CACnC;AAErB,CAAC"}