{"version":3,"names":["React","useContext","Box","Divider","Text","createStyleSheet","useUIKitTheme","getOpenChannelTitle","ChannelCover","useLocalization","OpenChannelSettingsContexts","OpenChannelSettingsInfo","_","channel","Fragment","STRINGS","colors","createElement","paddingVertical","alignItems","size","containerStyle","styles","avatarContainer","h1","numberOfLines","body2","color","onBackground02","style","infoUrl","OPEN_CHANNEL_SETTINGS","INFO_URL","body3","onBackground01","url","marginBottom"],"sources":["OpenChannelSettingsInfo.tsx"],"sourcesContent":["import React, { useContext } from 'react';\n\nimport { Box, Divider, Text, createStyleSheet, useUIKitTheme } from '@sendbird/uikit-react-native-foundation';\nimport { getOpenChannelTitle } from '@sendbird/uikit-utils';\n\nimport ChannelCover from '../../../components/ChannelCover';\nimport { useLocalization } from '../../../hooks/useContext';\nimport { OpenChannelSettingsContexts } from '../module/moduleContext';\nimport type { OpenChannelSettingsProps } from '../types';\n\nconst OpenChannelSettingsInfo = (_: OpenChannelSettingsProps['Info']) => {\n  const { channel } = useContext(OpenChannelSettingsContexts.Fragment);\n  const { STRINGS } = useLocalization();\n  const { colors } = useUIKitTheme();\n\n  return (\n    <Box>\n      <Box paddingVertical={24} alignItems={'center'}>\n        <ChannelCover channel={channel} size={80} containerStyle={styles.avatarContainer} />\n        <Text h1 numberOfLines={1}>\n          {getOpenChannelTitle(channel) || ' '}\n        </Text>\n      </Box>\n      <Divider />\n\n      <Box paddingVertical={16}>\n        <Text body2 color={colors.onBackground02} style={styles.infoUrl}>\n          {STRINGS.OPEN_CHANNEL_SETTINGS.INFO_URL}\n        </Text>\n        <Text body3 color={colors.onBackground01}>\n          {channel.url}\n        </Text>\n      </Box>\n      <Divider />\n    </Box>\n  );\n};\n\nconst styles = createStyleSheet({\n  avatarContainer: {\n    marginBottom: 12,\n  },\n  infoUrl: {\n    marginBottom: 4,\n  },\n});\nexport default OpenChannelSettingsInfo;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AAEzC,SAASC,GAAG,EAAEC,OAAO,EAAEC,IAAI,EAAEC,gBAAgB,EAAEC,aAAa,QAAQ,yCAAyC;AAC7G,SAASC,mBAAmB,QAAQ,uBAAuB;AAE3D,OAAOC,YAAY,MAAM,kCAAkC;AAC3D,SAASC,eAAe,QAAQ,2BAA2B;AAC3D,SAASC,2BAA2B,QAAQ,yBAAyB;AAGrE,MAAMC,uBAAuB,GAAIC,CAAmC,IAAK;EACvE,MAAM;IAAEC;EAAQ,CAAC,GAAGZ,UAAU,CAACS,2BAA2B,CAACI,QAAQ,CAAC;EACpE,MAAM;IAAEC;EAAQ,CAAC,GAAGN,eAAe,EAAE;EACrC,MAAM;IAAEO;EAAO,CAAC,GAAGV,aAAa,EAAE;EAElC,oBACEN,KAAA,CAAAiB,aAAA,CAACf,GAAG,qBACFF,KAAA,CAAAiB,aAAA,CAACf,GAAG;IAACgB,eAAe,EAAE,EAAG;IAACC,UAAU,EAAE;EAAS,gBAC7CnB,KAAA,CAAAiB,aAAA,CAACT,YAAY;IAACK,OAAO,EAAEA,OAAQ;IAACO,IAAI,EAAE,EAAG;IAACC,cAAc,EAAEC,MAAM,CAACC;EAAgB,EAAG,eACpFvB,KAAA,CAAAiB,aAAA,CAACb,IAAI;IAACoB,EAAE;IAACC,aAAa,EAAE;EAAE,GACvBlB,mBAAmB,CAACM,OAAO,CAAC,IAAI,GAAG,CAC/B,CACH,eACNb,KAAA,CAAAiB,aAAA,CAACd,OAAO,OAAG,eAEXH,KAAA,CAAAiB,aAAA,CAACf,GAAG;IAACgB,eAAe,EAAE;EAAG,gBACvBlB,KAAA,CAAAiB,aAAA,CAACb,IAAI;IAACsB,KAAK;IAACC,KAAK,EAAEX,MAAM,CAACY,cAAe;IAACC,KAAK,EAAEP,MAAM,CAACQ;EAAQ,GAC7Df,OAAO,CAACgB,qBAAqB,CAACC,QAAQ,CAClC,eACPhC,KAAA,CAAAiB,aAAA,CAACb,IAAI;IAAC6B,KAAK;IAACN,KAAK,EAAEX,MAAM,CAACkB;EAAe,GACtCrB,OAAO,CAACsB,GAAG,CACP,CACH,eACNnC,KAAA,CAAAiB,aAAA,CAACd,OAAO,OAAG,CACP;AAEV,CAAC;AAED,MAAMmB,MAAM,GAAGjB,gBAAgB,CAAC;EAC9BkB,eAAe,EAAE;IACfa,YAAY,EAAE;EAChB,CAAC;EACDN,OAAO,EAAE;IACPM,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AACF,eAAezB,uBAAuB"}