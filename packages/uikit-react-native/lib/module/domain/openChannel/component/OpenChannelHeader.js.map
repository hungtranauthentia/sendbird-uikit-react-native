{"version":3,"names":["React","useContext","Box","Header","Icon","createStyleSheet","useHeaderStyle","useLocalization","ChannelCover","OpenChannelContexts","OpenChannelHeader","_ref","onPressHeaderLeft","onPressHeaderRight","rightIconName","headerTitle","channel","Fragment","HeaderComponent","STRINGS","createElement","clearTitleMargin","title","flexDirection","alignItems","style","styles","titleContainer","size","containerStyle","avatarGroup","flexShrink","Title","h2","Subtitle","subtitle","OPEN_CHANNEL","HEADER_SUBTITLE","left","icon","onPressLeft","right","onPressRight","maxWidth","marginRight","marginTop","memo"],"sources":["OpenChannelHeader.tsx"],"sourcesContent":["import React, { useContext } from 'react';\n\nimport { Box, Header, Icon, createStyleSheet, useHeaderStyle } from '@sendbird/uikit-react-native-foundation';\n\nimport { useLocalization } from '../../..//hooks/useContext';\nimport ChannelCover from '../../../components/ChannelCover';\nimport { OpenChannelContexts } from '../module/moduleContext';\nimport type { OpenChannelProps } from '../types';\n\nconst OpenChannelHeader = ({ onPressHeaderLeft, onPressHeaderRight, rightIconName }: OpenChannelProps['Header']) => {\n  const { headerTitle, channel } = useContext(OpenChannelContexts.Fragment);\n  const { HeaderComponent } = useHeaderStyle();\n  const { STRINGS } = useLocalization();\n\n  return (\n    <HeaderComponent\n      clearTitleMargin\n      title={\n        <Box flexDirection={'row'} alignItems={'center'} style={styles.titleContainer}>\n          <ChannelCover channel={channel} size={34} containerStyle={styles.avatarGroup} />\n          <Box flexShrink={1}>\n            <Header.Title h2>{headerTitle}</Header.Title>\n            <Header.Subtitle style={styles.subtitle}>{STRINGS.OPEN_CHANNEL.HEADER_SUBTITLE(channel)}</Header.Subtitle>\n          </Box>\n        </Box>\n      }\n      left={<Icon icon={'arrow-left'} />}\n      onPressLeft={onPressHeaderLeft}\n      right={<Icon icon={rightIconName} />}\n      onPressRight={onPressHeaderRight}\n    />\n  );\n};\n\nconst styles = createStyleSheet({\n  titleContainer: {\n    maxWidth: '100%',\n  },\n  avatarGroup: {\n    marginRight: 8,\n  },\n  subtitle: {\n    marginTop: 2,\n  },\n});\n\nexport default React.memo(OpenChannelHeader);\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AAEzC,SAASC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEC,gBAAgB,EAAEC,cAAc,QAAQ,yCAAyC;AAE7G,SAASC,eAAe,QAAQ,4BAA4B;AAC5D,OAAOC,YAAY,MAAM,kCAAkC;AAC3D,SAASC,mBAAmB,QAAQ,yBAAyB;AAG7D,MAAMC,iBAAiB,GAAGC,IAAA,IAA0F;EAAA,IAAzF;IAAEC,iBAAiB;IAAEC,kBAAkB;IAAEC;EAA0C,CAAC,GAAAH,IAAA;EAC7G,MAAM;IAAEI,WAAW;IAAEC;EAAQ,CAAC,GAAGf,UAAU,CAACQ,mBAAmB,CAACQ,QAAQ,CAAC;EACzE,MAAM;IAAEC;EAAgB,CAAC,GAAGZ,cAAc,EAAE;EAC5C,MAAM;IAAEa;EAAQ,CAAC,GAAGZ,eAAe,EAAE;EAErC,oBACEP,KAAA,CAAAoB,aAAA,CAACF,eAAe;IACdG,gBAAgB;IAChBC,KAAK,eACHtB,KAAA,CAAAoB,aAAA,CAAClB,GAAG;MAACqB,aAAa,EAAE,KAAM;MAACC,UAAU,EAAE,QAAS;MAACC,KAAK,EAAEC,MAAM,CAACC;IAAe,gBAC5E3B,KAAA,CAAAoB,aAAA,CAACZ,YAAY;MAACQ,OAAO,EAAEA,OAAQ;MAACY,IAAI,EAAE,EAAG;MAACC,cAAc,EAAEH,MAAM,CAACI;IAAY,EAAG,eAChF9B,KAAA,CAAAoB,aAAA,CAAClB,GAAG;MAAC6B,UAAU,EAAE;IAAE,gBACjB/B,KAAA,CAAAoB,aAAA,CAACjB,MAAM,CAAC6B,KAAK;MAACC,EAAE;IAAA,GAAElB,WAAW,CAAgB,eAC7Cf,KAAA,CAAAoB,aAAA,CAACjB,MAAM,CAAC+B,QAAQ;MAACT,KAAK,EAAEC,MAAM,CAACS;IAAS,GAAEhB,OAAO,CAACiB,YAAY,CAACC,eAAe,CAACrB,OAAO,CAAC,CAAmB,CACtG,CAET;IACDsB,IAAI,eAAEtC,KAAA,CAAAoB,aAAA,CAAChB,IAAI;MAACmC,IAAI,EAAE;IAAa,EAAI;IACnCC,WAAW,EAAE5B,iBAAkB;IAC/B6B,KAAK,eAAEzC,KAAA,CAAAoB,aAAA,CAAChB,IAAI;MAACmC,IAAI,EAAEzB;IAAc,EAAI;IACrC4B,YAAY,EAAE7B;EAAmB,EACjC;AAEN,CAAC;AAED,MAAMa,MAAM,GAAGrB,gBAAgB,CAAC;EAC9BsB,cAAc,EAAE;IACdgB,QAAQ,EAAE;EACZ,CAAC;EACDb,WAAW,EAAE;IACXc,WAAW,EAAE;EACf,CAAC;EACDT,QAAQ,EAAE;IACRU,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AAEF,4BAAe7C,KAAK,CAAC8C,IAAI,CAACpC,iBAAiB,CAAC"}