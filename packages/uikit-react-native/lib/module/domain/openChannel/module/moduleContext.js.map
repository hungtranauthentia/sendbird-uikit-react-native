{"version":3,"names":["React","createContext","useState","NOOP","ProviderLayout","useLocalization","OpenChannelContexts","Fragment","headerTitle","channel","setMessageToEdit","PubSub","publish","subscribe","OpenChannelContextsProvider","_ref","children","keyboardAvoidOffset","openChannelPubSub","STRINGS","messageToEdit","createElement","Provider","value","OPEN_CHANNEL","HEADER_TITLE"],"sources":["moduleContext.tsx"],"sourcesContent":["import React, { createContext, useState } from 'react';\n\nimport type { SendbirdOpenChannel } from '@sendbird/uikit-utils';\nimport { NOOP, SendbirdFileMessage, SendbirdUserMessage } from '@sendbird/uikit-utils';\n\nimport ProviderLayout from '../../../components/ProviderLayout';\nimport { useLocalization } from '../../../hooks/useContext';\nimport type { PubSub } from '../../../utils/pubsub';\nimport type { OpenChannelContextsType, OpenChannelModule, OpenChannelPubSubContextPayload } from '../types';\n\nexport const OpenChannelContexts: OpenChannelContextsType = {\n  Fragment: createContext({\n    headerTitle: '',\n    channel: {} as SendbirdOpenChannel,\n    setMessageToEdit: NOOP,\n  }),\n  PubSub: createContext({\n    publish: NOOP,\n    subscribe: () => NOOP,\n  } as PubSub<OpenChannelPubSubContextPayload>),\n};\n\nexport const OpenChannelContextsProvider: OpenChannelModule['Provider'] = ({\n  children,\n  channel,\n  keyboardAvoidOffset,\n  openChannelPubSub,\n}) => {\n  const { STRINGS } = useLocalization();\n  const [messageToEdit, setMessageToEdit] = useState<SendbirdUserMessage | SendbirdFileMessage>();\n\n  return (\n    <ProviderLayout>\n      <OpenChannelContexts.Fragment.Provider\n        value={{\n          headerTitle: STRINGS.OPEN_CHANNEL.HEADER_TITLE(channel),\n          channel,\n          keyboardAvoidOffset,\n          messageToEdit,\n          setMessageToEdit,\n        }}\n      >\n        <OpenChannelContexts.PubSub.Provider value={openChannelPubSub}>{children}</OpenChannelContexts.PubSub.Provider>\n      </OpenChannelContexts.Fragment.Provider>\n    </ProviderLayout>\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAGtD,SAASC,IAAI,QAAkD,uBAAuB;AAEtF,OAAOC,cAAc,MAAM,oCAAoC;AAC/D,SAASC,eAAe,QAAQ,2BAA2B;AAI3D,OAAO,MAAMC,mBAA4C,GAAG;EAC1DC,QAAQ,eAAEN,aAAa,CAAC;IACtBO,WAAW,EAAE,EAAE;IACfC,OAAO,EAAE,CAAC,CAAwB;IAClCC,gBAAgB,EAAEP;EACpB,CAAC,CAAC;EACFQ,MAAM,eAAEV,aAAa,CAAC;IACpBW,OAAO,EAAET,IAAI;IACbU,SAAS,EAAEA,CAAA,KAAMV;EACnB,CAAC;AACH,CAAC;AAED,OAAO,MAAMW,2BAA0D,GAAGC,IAAA,IAKpE;EAAA,IALqE;IACzEC,QAAQ;IACRP,OAAO;IACPQ,mBAAmB;IACnBC;EACF,CAAC,GAAAH,IAAA;EACC,MAAM;IAAEI;EAAQ,CAAC,GAAGd,eAAe,EAAE;EACrC,MAAM,CAACe,aAAa,EAAEV,gBAAgB,CAAC,GAAGR,QAAQ,EAA6C;EAE/F,oBACEF,KAAA,CAAAqB,aAAA,CAACjB,cAAc,qBACbJ,KAAA,CAAAqB,aAAA,CAACf,mBAAmB,CAACC,QAAQ,CAACe,QAAQ;IACpCC,KAAK,EAAE;MACLf,WAAW,EAAEW,OAAO,CAACK,YAAY,CAACC,YAAY,CAAChB,OAAO,CAAC;MACvDA,OAAO;MACPQ,mBAAmB;MACnBG,aAAa;MACbV;IACF;EAAE,gBAEFV,KAAA,CAAAqB,aAAA,CAACf,mBAAmB,CAACK,MAAM,CAACW,QAAQ;IAACC,KAAK,EAAEL;EAAkB,GAAEF,QAAQ,CAAuC,CACzE,CACzB;AAErB,CAAC"}