{"version":3,"names":["React","createContext","ProviderLayout","useLocalization","OpenChannelMutedParticipantsContexts","Fragment","headerTitle","channel","OpenChannelMutedParticipantsContextsProvider","_ref","children","STRINGS","createElement","Provider","value","OPEN_CHANNEL_MUTED_PARTICIPANTS","HEADER_TITLE"],"sources":["moduleContext.tsx"],"sourcesContent":["import React, { createContext } from 'react';\n\nimport type { SendbirdOpenChannel } from '@sendbird/uikit-utils';\n\nimport ProviderLayout from '../../../components/ProviderLayout';\nimport { useLocalization } from '../../../hooks/useContext';\nimport type { OpenChannelMutedParticipantsContextsType, OpenChannelMutedParticipantsModule } from '../types';\n\nexport const OpenChannelMutedParticipantsContexts: OpenChannelMutedParticipantsContextsType = {\n  Fragment: createContext({\n    headerTitle: '',\n    channel: {} as SendbirdOpenChannel,\n  }),\n};\n\nexport const OpenChannelMutedParticipantsContextsProvider: OpenChannelMutedParticipantsModule['Provider'] = ({\n  children,\n  channel,\n}) => {\n  const { STRINGS } = useLocalization();\n  return (\n    <ProviderLayout>\n      <OpenChannelMutedParticipantsContexts.Fragment.Provider\n        value={{ channel, headerTitle: STRINGS.OPEN_CHANNEL_MUTED_PARTICIPANTS.HEADER_TITLE }}\n      >\n        {children}\n      </OpenChannelMutedParticipantsContexts.Fragment.Provider>\n    </ProviderLayout>\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,aAAa,QAAQ,OAAO;AAI5C,OAAOC,cAAc,MAAM,oCAAoC;AAC/D,SAASC,eAAe,QAAQ,2BAA2B;AAG3D,OAAO,MAAMC,oCAA8E,GAAG;EAC5FC,QAAQ,eAAEJ,aAAa,CAAC;IACtBK,WAAW,EAAE,EAAE;IACfC,OAAO,EAAE,CAAC;EACZ,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,4CAA4F,GAAGC,IAAA,IAGtG;EAAA,IAHuG;IAC3GC,QAAQ;IACRH;EACF,CAAC,GAAAE,IAAA;EACC,MAAM;IAAEE;EAAQ,CAAC,GAAGR,eAAe,EAAE;EACrC,oBACEH,KAAA,CAAAY,aAAA,CAACV,cAAc,qBACbF,KAAA,CAAAY,aAAA,CAACR,oCAAoC,CAACC,QAAQ,CAACQ,QAAQ;IACrDC,KAAK,EAAE;MAAEP,OAAO;MAAED,WAAW,EAAEK,OAAO,CAACI,+BAA+B,CAACC;IAAa;EAAE,GAErFN,QAAQ,CAC8C,CAC1C;AAErB,CAAC"}