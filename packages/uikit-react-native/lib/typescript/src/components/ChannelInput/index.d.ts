import React from 'react';
import { StyleProp, TextStyle } from 'react-native';
import { SendbirdBaseChannel, SendbirdFileMessage, SendbirdFileMessageCreateParams, SendbirdFileMessageUpdateParams, SendbirdMember, SendbirdUserMessage, SendbirdUserMessageCreateParams, SendbirdUserMessageUpdateParams } from '@sendbird/uikit-utils';
import type { CommonComponent, MentionedUser, Range } from '../../types';
import type { AttachmentsButtonProps } from './AttachmentsButton';
import type { MessageToReplyPreviewProps } from './MessageToReplyPreview';
import { VoiceMessageInputProps } from './VoiceMessageInput';
export type SuggestedMentionListProps = {
    text: string;
    selection: Range;
    topInset: number;
    bottomInset: number;
    inputHeight: number;
    onPressToMention: (user: SendbirdMember, searchStringRange: Range) => void;
    mentionedUsers: MentionedUser[];
};
export type ChannelInputProps = {
    style?: StyleProp<TextStyle>;
    channel: SendbirdBaseChannel;
    shouldRenderInput: boolean;
    keyboardAvoidOffset: number;
    onPressSendUserMessage: (params: SendbirdUserMessageCreateParams) => Promise<void>;
    onPressSendFileMessage: (params: SendbirdFileMessageCreateParams) => Promise<void>;
    onPressUpdateUserMessage: (message: SendbirdUserMessage, params: SendbirdUserMessageUpdateParams) => Promise<void>;
    onPressUpdateFileMessage: (message: SendbirdFileMessage, params: SendbirdFileMessageUpdateParams) => Promise<void>;
    inputFrozen: boolean;
    inputMuted: boolean;
    inputDisabled: boolean;
    messageToEdit: undefined | SendbirdUserMessage | SendbirdFileMessage;
    setMessageToEdit: (message?: undefined | SendbirdUserMessage | SendbirdFileMessage) => void;
    messageToReply?: undefined | SendbirdUserMessage | SendbirdFileMessage;
    setMessageToReply?: (message?: undefined | SendbirdUserMessage | SendbirdFileMessage) => void;
    SuggestedMentionList?: CommonComponent<SuggestedMentionListProps>;
    AttachmentsButton?: (props: AttachmentsButtonProps) => React.ReactNode | null;
    MessageToReplyPreview?: (props: MessageToReplyPreviewProps) => React.ReactNode | null;
    VoiceMessageInput?: (props: VoiceMessageInputProps) => React.ReactNode | null;
};
declare const _default: React.MemoExoticComponent<(props: ChannelInputProps) => React.JSX.Element>;
export default _default;
